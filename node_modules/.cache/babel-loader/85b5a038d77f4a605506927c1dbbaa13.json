{"ast":null,"code":"var _jsxFileName = \"C:\\\\nani\\\\connect\\\\connect-frontend\\\\src\\\\containers\\\\common\\\\ChatHallContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useReducer, useState } from 'react';\nimport ChatHall from '../../components/common/ChatHall';\nimport { useSelector } from 'react-redux';\nimport io from 'socket.io-client';\nimport { socket } from '../../lib/sockets/chatHallSocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER = 'http://localhost:4000';\n\nconst ChatHallContainer = () => {\n  _s();\n\n  const [msg, setMsg] = useState('');\n  const [state, dispatch] = useReducer(reducer, initialState);\n  let {\n    nickname,\n    profileImage\n  } = useSelector(_ref => {\n    let {\n      user\n    } = _ref;\n    return {\n      nickname: user.user ? user.user.nickname : 'guest',\n      profileImage: user.user ? user.user.profileImage : ''\n    };\n  });\n  useEffect(() => {\n    socket.on('broadcastMsg', data => {\n      console.log('receive data : ', data);\n      dispatch({\n        type: 'msg',\n        msg: { ...data,\n          received: true\n        }\n      });\n    });\n    dispatch({\n      type: 'setting'\n    });\n  }, [dispatch]);\n\n  const onChange = e => {\n    setMsg(e.target.value);\n  };\n\n  const changeScroll = useCallback(e => {\n    e.scrollTop = e.scrollHeight;\n  }, []);\n\n  const onSubmit = () => {\n    if (msg === '') return;\n    socket.emit('msg', {\n      nickname,\n      msg: msg.trim()\n    });\n    dispatch({\n      type: 'msg',\n      msg: {\n        send: true,\n        nickname,\n        msg: msg.trim()\n      }\n    });\n    setMsg('');\n  };\n\n  const onKeySubmit = e => {\n    if (e.key === 'Enter') {\n      onSubmit();\n      setMsg('');\n    }\n  };\n\n  function reducer(state, action) {\n    if (action.type === 'msg') {\n      return { ...initialState,\n        msg: [...state.msg, action.msg]\n      };\n    } else if (action.type === 'setting') {\n      console.log('in action.type setting', state, action);\n      return { ...initialState,\n        myInfo: {\n          nickname: nickname,\n          profileImage: profileImage\n        }\n      };\n    } else if (action.type === 'access') {\n      console.log(state);\n      return { ...state.myInfo\n      };\n    } else {\n      throw new Error();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChatHall, {\n    changeScroll: changeScroll,\n    msg: msg,\n    onChange: onChange,\n    onSubmit: onSubmit,\n    onKeySubmit: onKeySubmit,\n    msgList: state.msg\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatHallContainer, \"csg7Mzt5o8w5p7COOqRRY6xFaLk=\", false, function () {\n  return [useSelector];\n});\n\n_c = ChatHallContainer;\nconst initialState = {\n  msg: [],\n  myInfo: {\n    nickname: 'guest',\n    profileImage: null\n  }\n};\nexport default ChatHallContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatHallContainer\");","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/common/ChatHallContainer.js"],"names":["React","useCallback","useEffect","useReducer","useState","ChatHall","useSelector","io","socket","SERVER","ChatHallContainer","msg","setMsg","state","dispatch","reducer","initialState","nickname","profileImage","user","on","data","console","log","type","received","onChange","e","target","value","changeScroll","scrollTop","scrollHeight","onSubmit","emit","trim","send","onKeySubmit","key","action","myInfo","Error"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useReducer, useState } from 'react';\r\nimport ChatHall from '../../components/common/ChatHall';\r\nimport { useSelector } from 'react-redux';\r\nimport io from 'socket.io-client';\r\nimport { socket } from '../../lib/sockets/chatHallSocket';\r\n\r\nconst SERVER = 'http://localhost:4000';\r\nconst ChatHallContainer = () => {\r\n  const [msg, setMsg] = useState('');\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  let { nickname, profileImage } = useSelector(({ user }) => ({\r\n    nickname: user.user ? user.user.nickname : 'guest',\r\n    profileImage: user.user ? user.user.profileImage : '',\r\n  }));\r\n  useEffect(() => {\r\n    socket.on('broadcastMsg', (data) => {\r\n      console.log('receive data : ', data);\r\n      dispatch({ type: 'msg', msg: { ...data, received: true } });\r\n    });\r\n    dispatch({ type: 'setting' });\r\n  }, [dispatch]);\r\n\r\n  const onChange = (e) => {\r\n    setMsg(e.target.value);\r\n  };\r\n  const changeScroll = useCallback((e) => {\r\n    e.scrollTop = e.scrollHeight;\r\n  }, []);\r\n  const onSubmit = () => {\r\n    if (msg === '') return;\r\n    socket.emit('msg', { nickname, msg: msg.trim() });\r\n    dispatch({ type: 'msg', msg: { send: true, nickname, msg: msg.trim() } });\r\n    setMsg('');\r\n  };\r\n  const onKeySubmit = (e) => {\r\n    if (e.key === 'Enter') {\r\n      onSubmit();\r\n      setMsg('');\r\n    }\r\n  };\r\n  function reducer(state, action) {\r\n    if (action.type === 'msg') {\r\n      return { ...initialState, msg: [...state.msg, action.msg] };\r\n    } else if (action.type === 'setting') {\r\n      console.log('in action.type setting', state, action);\r\n      return {\r\n        ...initialState,\r\n        myInfo: {\r\n          nickname: nickname,\r\n          profileImage: profileImage,\r\n        },\r\n      };\r\n    } else if (action.type === 'access') {\r\n      console.log(state);\r\n      return {\r\n        ...state.myInfo,\r\n      };\r\n    } else {\r\n      throw new Error();\r\n    }\r\n  }\r\n  return (\r\n    <ChatHall\r\n      changeScroll={changeScroll}\r\n      msg={msg}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      onKeySubmit={onKeySubmit}\r\n      msgList={state.msg}\r\n    />\r\n  );\r\n};\r\n\r\nconst initialState = {\r\n  msg: [],\r\n  myInfo: {\r\n    nickname: 'guest',\r\n    profileImage: null,\r\n  },\r\n};\r\n\r\nexport default ChatHallContainer;\r\n"]},"metadata":{},"sourceType":"module"}