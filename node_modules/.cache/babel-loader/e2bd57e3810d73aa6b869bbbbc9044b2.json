{"ast":null,"code":"import _slicedToArray from\"C:/nani/connect/connect-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"C:/nani/connect/connect-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject10,_templateObject11;import React,{useState}from'react';import styled,{css}from'styled-components';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChatMessageBlock=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  display: flex;\\n  align-items: center;\\n  \",\"\\n  \",\"\\n\"])),function(_ref){var received=_ref.received;return received&&css(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n      justify-content: flex-start;\\n    \"])));},function(_ref2){var send=_ref2.send;return send&&css(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n      justify-content: flex-end;\\n    \"])));});var ChatMessageBox=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  display: flex;\\n  width: 100%;\\n  \",\"\\n  \",\"\\n\"])),function(_ref3){var type=_ref3.type;return type==='received'&&css(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n      text-align: left;\\n      color: blue;\\n    \"])));},function(_ref4){var type=_ref4.type;return type==='send'&&css(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n      text-align: right;\\n      color: #a30000;\\n      justify-content: flex-end;\\n    \"])));});var Nickname=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  color: white;\\n  padding: 10px;\\n  border-radius: 12px;\\n  margin-bottom: 10px;\\n  margin-right: 10px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  background: #73b2ff;\\n\"])));var Text=styled.div(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  line-height: 1rem;\\n  padding: 10px;\\n  margin-bottom: 10px;\\n  word-wrap: break-word;\\n  max-width: 50%;\\n  \",\"\\n\\n  \",\"\\n\"])),function(_ref5){var type=_ref5.type;return type==='received'&&css(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n      background: #d0f8ff;\\n      border-radius: 15px;\\n    \"])));},function(_ref6){var type=_ref6.type;return type==='send'&&css(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n      border: 1.5px solid brown;\\n      background: #ffe3e7;\\n      border-radius: 15px;\\n    \"])));});var TimeBlock=styled.div(_templateObject11||(_templateObject11=_taggedTemplateLiteral([\"\\n  color: gray;\\n  font-size: 0.75rem;\\n  display: flex;\\n  align-items: flex-end;\\n  padding-bottom: 10px;\\n  margin: 0 5px;\\n\"])));var Time=function Time(_ref7){var time=_ref7.time;var timeToString=function timeToString(time){var messageTime=new Date(time);var now=new Date();var str='';var result=[];if(messageTime.getFullYear()!==now.getFullYear())str+=messageTime.getFullYear()+'년 ';if(messageTime.getDate()!==now.getDate()){str+=\"\".concat(messageTime.getMonth()+1,\"\\uC6D4 \").concat(messageTime.getDate(),\"\\uC77C\");result.push(str);str='';}if(messageTime.getHours()===0)str+='오전 12시 ';else if(messageTime.getHours()===12)str+='오후 12시 ';else if(messageTime.getHours()<12)str+='오전 '+(messageTime.getHours()<10?'0'+messageTime.getHours()+'시 ':messageTime.getHours()+'시 ');else str+='오후 '+(messageTime.getHours()-12<10?'0'+(messageTime.getHours()-12)+'시 ':messageTime.getHours()-12+'시 ');str+=messageTime.getMinutes()<10?'0'+messageTime.getMinutes()+'분':messageTime.getMinutes()+'분';result.push(str);return result;};var _useState=useState(timeToString(time)),_useState2=_slicedToArray(_useState,1),result=_useState2[0];return result.length===2?/*#__PURE__*/_jsxs(TimeBlock,{children:[result[0],/*#__PURE__*/_jsx(\"br\",{}),result[1]]}):/*#__PURE__*/_jsx(TimeBlock,{children:result[0]});};var ChatMessage=function ChatMessage(_ref8){var type=_ref8.type,nickname=_ref8.nickname,msg=_ref8.msg,time=_ref8.time;return/*#__PURE__*/_jsx(ChatMessageBlock,{type:type,children:/*#__PURE__*/_jsxs(ChatMessageBox,{type:type,children:[type==='received'?/*#__PURE__*/_jsx(Nickname,{children:nickname}):'',type==='send'?/*#__PURE__*/_jsx(Time,{time:time}):'',/*#__PURE__*/_jsx(Text,{type:type,children:msg}),type==='received'?/*#__PURE__*/_jsx(Time,{time:time}):'']})});};export default ChatMessage;","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/components/ChattingModal/ChatMessage.js"],"names":["React","useState","styled","css","ChatMessageBlock","div","received","send","ChatMessageBox","type","Nickname","Text","TimeBlock","Time","time","timeToString","messageTime","Date","now","str","result","getFullYear","getDate","getMonth","push","getHours","getMinutes","length","ChatMessage","nickname","msg"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst ChatMessageBlock = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  ${({ received }) =>\r\n    received &&\r\n    css`\r\n      justify-content: flex-start;\r\n    `}\r\n  ${({ send }) =>\r\n    send &&\r\n    css`\r\n      justify-content: flex-end;\r\n    `}\r\n`;\r\n\r\nconst ChatMessageBox = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  ${({ type }) =>\r\n    type === 'received' &&\r\n    css`\r\n      text-align: left;\r\n      color: blue;\r\n    `}\r\n  ${({ type }) =>\r\n    type === 'send' &&\r\n    css`\r\n      text-align: right;\r\n      color: #a30000;\r\n      justify-content: flex-end;\r\n    `}\r\n`;\r\nconst Nickname = styled.div`\r\n  color: white;\r\n  padding: 10px;\r\n  border-radius: 12px;\r\n  margin-bottom: 10px;\r\n  margin-right: 10px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: #73b2ff;\r\n`;\r\nconst Text = styled.div`\r\n  line-height: 1rem;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  word-wrap: break-word;\r\n  max-width: 50%;\r\n  ${({ type }) =>\r\n    type === 'received' &&\r\n    css`\r\n      background: #d0f8ff;\r\n      border-radius: 15px;\r\n    `}\r\n\r\n  ${({ type }) =>\r\n    type === 'send' &&\r\n    css`\r\n      border: 1.5px solid brown;\r\n      background: #ffe3e7;\r\n      border-radius: 15px;\r\n    `}\r\n`;\r\nconst TimeBlock = styled.div`\r\n  color: gray;\r\n  font-size: 0.75rem;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  padding-bottom: 10px;\r\n  margin: 0 5px;\r\n`;\r\n\r\nconst Time = ({ time }) => {\r\n  const timeToString = (time) => {\r\n    const messageTime = new Date(time);\r\n    const now = new Date();\r\n    let str = '';\r\n    let result = [];\r\n\r\n    if (messageTime.getFullYear() !== now.getFullYear())\r\n      str += messageTime.getFullYear() + '년 ';\r\n    if (messageTime.getDate() !== now.getDate()) {\r\n      str += `${messageTime.getMonth() + 1}월 ${messageTime.getDate()}일`;\r\n      result.push(str);\r\n      str = '';\r\n    }\r\n    if (messageTime.getHours() === 0) str += '오전 12시 ';\r\n    else if (messageTime.getHours() === 12) str += '오후 12시 ';\r\n    else if (messageTime.getHours() < 12)\r\n      str +=\r\n        '오전 ' +\r\n        (messageTime.getHours() < 10\r\n          ? '0' + messageTime.getHours() + '시 '\r\n          : messageTime.getHours() + '시 ');\r\n    else\r\n      str +=\r\n        '오후 ' +\r\n        (messageTime.getHours() - 12 < 10\r\n          ? '0' + (messageTime.getHours() - 12) + '시 '\r\n          : messageTime.getHours() - 12 + '시 ');\r\n\r\n    str +=\r\n      messageTime.getMinutes() < 10\r\n        ? '0' + messageTime.getMinutes() + '분'\r\n        : messageTime.getMinutes() + '분';\r\n    result.push(str);\r\n    return result;\r\n  };\r\n  const [result] = useState(timeToString(time));\r\n  return result.length === 2 ? (\r\n    <TimeBlock>\r\n      {result[0]}\r\n      <br />\r\n      {result[1]}\r\n    </TimeBlock>\r\n  ) : (\r\n    <TimeBlock>{result[0]}</TimeBlock>\r\n  );\r\n};\r\n\r\nconst ChatMessage = ({ type, nickname, msg, time }) => {\r\n  return (\r\n    <ChatMessageBlock type={type}>\r\n      <ChatMessageBox type={type}>\r\n        {type === 'received' ? <Nickname>{nickname}</Nickname> : ''}\r\n        {type === 'send' ? <Time time={time} /> : ''}\r\n        <Text type={type}>{msg}</Text>\r\n        {type === 'received' ? <Time time={time} /> : ''}\r\n      </ChatMessageBox>\r\n    </ChatMessageBlock>\r\n  );\r\n};\r\n\r\nexport default ChatMessage;\r\n"]},"metadata":{},"sourceType":"module"}