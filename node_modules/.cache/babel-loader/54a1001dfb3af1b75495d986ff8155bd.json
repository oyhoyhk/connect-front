{"ast":null,"code":"var _jsxFileName = \"C:\\\\nani\\\\connect\\\\connect-frontend\\\\src\\\\containers\\\\common\\\\ChatHallContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useReducer, useState } from 'react';\nimport ChatHall from '../../components/common/ChatHall';\nimport { useSelector } from 'react-redux';\nimport io from 'socket.io-client';\nimport { socket } from '../../lib/sockets/chatHallSocket';\nimport { access, leave } from '../../lib/api/chatHall';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER = 'http://localhost:4000';\n\nconst ChatHallContainer = () => {\n  _s();\n\n  const [msg, setMsg] = useState('');\n  const [state, dispatch] = useReducer(reducer, initialState);\n  let {\n    username,\n    nickname,\n    profileImage\n  } = useSelector(_ref => {\n    let {\n      user\n    } = _ref;\n    return {\n      username: user.user ? user.user.username : 'guest',\n      nickname: user.user ? user.user.nickname : 'guest',\n      profileImage: user.user ? user.user.profileImage : ''\n    };\n  });\n  useEffect(() => {\n    socket.on('broadcastMsg', data => {\n      console.log('receive data : ', data);\n      dispatch({\n        type: 'msg',\n        msg: { ...data,\n          received: true\n        }\n      });\n    });\n    accessChatHall({\n      username,\n      nickname,\n      profileImage\n    });\n    socket.on('participation', data => {\n      if (data) console.log(data);\n    });\n    return () => {\n      leaveChatHall({\n        nickname\n      });\n    };\n  }, [dispatch, username, nickname, profileImage]);\n\n  const accessChatHall = async _ref2 => {\n    let {\n      username,\n      nickname,\n      profileImage\n    } = _ref2;\n    const response = await access({\n      username,\n      nickname,\n      profileImage\n    });\n    console.log(response);\n  };\n\n  const leaveChatHall = async _ref3 => {\n    let {\n      username,\n      nickname\n    } = _ref3;\n    const response = await leave({\n      username,\n      nickname\n    });\n  };\n\n  const onChange = e => {\n    setMsg(e.target.value);\n  };\n\n  const changeScroll = useCallback(e => {\n    e.scrollTop = e.scrollHeight;\n  }, []);\n\n  const onSubmit = () => {\n    if (msg === '') return;\n    socket.emit('msg', {\n      nickname,\n      msg: msg.trim()\n    });\n    dispatch({\n      type: 'msg',\n      msg: {\n        send: true,\n        nickname,\n        msg: msg.trim()\n      }\n    });\n    setMsg('');\n  };\n\n  const onKeySubmit = e => {\n    if (e.key === 'Enter') {\n      onSubmit();\n      setMsg('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChatHall, {\n    changeScroll: changeScroll,\n    msg: msg,\n    onChange: onChange,\n    onSubmit: onSubmit,\n    onKeySubmit: onKeySubmit,\n    msgList: state.msg,\n    userList: state.userList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatHallContainer, \"zM8EDHIG8kFjc2YVggBxVBxNvMY=\", false, function () {\n  return [useSelector];\n});\n\n_c = ChatHallContainer;\nconst initialState = {\n  msg: [],\n  myInfo: {\n    nickname: 'guest',\n    profileImage: null\n  },\n  userList: []\n};\n\nfunction reducer(state, action) {\n  if (action.type === 'msg') {\n    return { ...initialState,\n      msg: [...state.msg, action.msg]\n    };\n  } else if (action.type === 'setting') {\n    console.log('in action.type setting', state, action);\n    return { ...initialState,\n      myInfo: {\n        nickname: action.nickname,\n        profileImage: action.profileImage\n      }\n    };\n  } else if (action.type === 'access') {\n    console.log(state);\n    return { ...state.myInfo\n    };\n  } else {\n    throw new Error();\n  }\n}\n\nexport default ChatHallContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatHallContainer\");","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/common/ChatHallContainer.js"],"names":["React","useCallback","useEffect","useReducer","useState","ChatHall","useSelector","io","socket","access","leave","SERVER","ChatHallContainer","msg","setMsg","state","dispatch","reducer","initialState","username","nickname","profileImage","user","on","data","console","log","type","received","accessChatHall","leaveChatHall","response","onChange","e","target","value","changeScroll","scrollTop","scrollHeight","onSubmit","emit","trim","send","onKeySubmit","key","userList","myInfo","action","Error"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useReducer, useState } from 'react';\r\nimport ChatHall from '../../components/common/ChatHall';\r\nimport { useSelector } from 'react-redux';\r\nimport io from 'socket.io-client';\r\nimport { socket } from '../../lib/sockets/chatHallSocket';\r\nimport { access, leave } from '../../lib/api/chatHall';\r\n\r\nconst SERVER = 'http://localhost:4000';\r\nconst ChatHallContainer = () => {\r\n  const [msg, setMsg] = useState('');\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  let { username, nickname, profileImage } = useSelector(({ user }) => ({\r\n    username: user.user ? user.user.username : 'guest',\r\n    nickname: user.user ? user.user.nickname : 'guest',\r\n    profileImage: user.user ? user.user.profileImage : '',\r\n  }));\r\n  useEffect(() => {\r\n    socket.on('broadcastMsg', (data) => {\r\n      console.log('receive data : ', data);\r\n      dispatch({ type: 'msg', msg: { ...data, received: true } });\r\n    });\r\n    accessChatHall({ username, nickname, profileImage });\r\n    socket.on('participation', (data) => {\r\n      if (data) console.log(data);\r\n    });\r\n    return () => {\r\n      leaveChatHall({ nickname });\r\n    };\r\n  }, [dispatch, username, nickname, profileImage]);\r\n  const accessChatHall = async ({ username, nickname, profileImage }) => {\r\n    const response = await access({ username, nickname, profileImage });\r\n    console.log(response);\r\n  };\r\n  const leaveChatHall = async ({ username, nickname }) => {\r\n    const response = await leave({ username, nickname });\r\n  };\r\n  const onChange = (e) => {\r\n    setMsg(e.target.value);\r\n  };\r\n  const changeScroll = useCallback((e) => {\r\n    e.scrollTop = e.scrollHeight;\r\n  }, []);\r\n  const onSubmit = () => {\r\n    if (msg === '') return;\r\n    socket.emit('msg', { nickname, msg: msg.trim() });\r\n    dispatch({ type: 'msg', msg: { send: true, nickname, msg: msg.trim() } });\r\n    setMsg('');\r\n  };\r\n  const onKeySubmit = (e) => {\r\n    if (e.key === 'Enter') {\r\n      onSubmit();\r\n      setMsg('');\r\n    }\r\n  };\r\n  return (\r\n    <ChatHall\r\n      changeScroll={changeScroll}\r\n      msg={msg}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      onKeySubmit={onKeySubmit}\r\n      msgList={state.msg}\r\n      userList={state.userList}\r\n    />\r\n  );\r\n};\r\n\r\nconst initialState = {\r\n  msg: [],\r\n  myInfo: {\r\n    nickname: 'guest',\r\n    profileImage: null,\r\n  },\r\n  userList: [],\r\n};\r\nfunction reducer(state, action) {\r\n  if (action.type === 'msg') {\r\n    return { ...initialState, msg: [...state.msg, action.msg] };\r\n  } else if (action.type === 'setting') {\r\n    console.log('in action.type setting', state, action);\r\n    return {\r\n      ...initialState,\r\n      myInfo: { nickname: action.nickname, profileImage: action.profileImage },\r\n    };\r\n  } else if (action.type === 'access') {\r\n    console.log(state);\r\n    return {\r\n      ...state.myInfo,\r\n    };\r\n  } else {\r\n    throw new Error();\r\n  }\r\n}\r\n\r\nexport default ChatHallContainer;\r\n"]},"metadata":{},"sourceType":"module"}