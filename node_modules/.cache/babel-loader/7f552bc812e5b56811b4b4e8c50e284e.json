{"ast":null,"code":"var _jsxFileName = \"C:\\\\nani\\\\connect\\\\connect-frontend\\\\src\\\\containers\\\\Friends\\\\TagContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport TagList from '../../components/Friends/TagList';\nimport { loadTags } from '../../modules/friends';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TagContainer = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    user,\n    tags\n  } = useSelector(_ref => {\n    let {\n      friends,\n      user\n    } = _ref;\n    return {\n      tags: friends.tagList.split('#').filter(el => el !== ''),\n      user: user.user\n    };\n  });\n  useEffect(() => {\n    console.log(user, tags);\n    dispatch(loadTags(user.uid));\n  }, [dispatch, user.uid]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const match = /[^ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|]/g;\n    const tag = e.target.tag.value.replace(match, '');\n    e.target.tag.value = '';\n\n    if (tags.includes(tag) || tag === '') {\n      e.target.tag.value = '';\n      return;\n    }\n  };\n\n  const onRemove = e => {\n    console.log(e.target.textContent);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TagList, {\n    onSubmit: onSubmit,\n    onRemove: onRemove,\n    tags: tags\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n};\n\n_s(TagContainer, \"eqJBry5ofhUxm5bvPpwRkWjXCLk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = TagContainer;\nexport default TagContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TagContainer\");","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/Friends/TagContainer.js"],"names":["React","useEffect","useState","useSelector","useDispatch","TagList","loadTags","TagContainer","dispatch","user","tags","friends","tagList","split","filter","el","console","log","uid","onSubmit","e","preventDefault","match","tag","target","value","replace","includes","onRemove","textContent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,SAASC,QAAT,QAAyB,uBAAzB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM;AAAEK,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAiBP,WAAW,CAAC;AAAA,QAAC;AAAEQ,MAAAA,OAAF;AAAWF,MAAAA;AAAX,KAAD;AAAA,WAAwB;AACzDC,MAAAA,IAAI,EAAEC,OAAO,CAACC,OAAR,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2BC,MAA3B,CAAmCC,EAAD,IAAQA,EAAE,KAAK,EAAjD,CADmD;AAEzDN,MAAAA,IAAI,EAAEA,IAAI,CAACA;AAF8C,KAAxB;AAAA,GAAD,CAAlC;AAIAR,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ,EAAkBC,IAAlB;AACAF,IAAAA,QAAQ,CAACF,QAAQ,CAACG,IAAI,CAACS,GAAN,CAAT,CAAR;AACD,GAHQ,EAGN,CAACV,QAAD,EAAWC,IAAI,CAACS,GAAhB,CAHM,CAAT;;AAIA,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,KAAK,GAAG,0BAAd;AACA,UAAMC,GAAG,GAAGH,CAAC,CAACI,MAAF,CAASD,GAAT,CAAaE,KAAb,CAAmBC,OAAnB,CAA2BJ,KAA3B,EAAkC,EAAlC,CAAZ;AACAF,IAAAA,CAAC,CAACI,MAAF,CAASD,GAAT,CAAaE,KAAb,GAAqB,EAArB;;AACA,QAAIf,IAAI,CAACiB,QAAL,CAAcJ,GAAd,KAAsBA,GAAG,KAAK,EAAlC,EAAsC;AACpCH,MAAAA,CAAC,CAACI,MAAF,CAASD,GAAT,CAAaE,KAAb,GAAqB,EAArB;AACA;AACD;AACF,GAVD;;AAWA,QAAMG,QAAQ,GAAIR,CAAD,IAAO;AACtBJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,CAAC,CAACI,MAAF,CAASK,WAArB;AACD,GAFD;;AAGA,sBAAO,QAAC,OAAD;AAAS,IAAA,QAAQ,EAAEV,QAAnB;AAA6B,IAAA,QAAQ,EAAES,QAAvC;AAAiD,IAAA,IAAI,EAAElB;AAAvD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAzBD;;GAAMH,Y;UACaH,W,EACMD,W;;;KAFnBI,Y;AA2BN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport TagList from '../../components/Friends/TagList';\r\nimport { loadTags } from '../../modules/friends';\r\n\r\nconst TagContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const { user, tags } = useSelector(({ friends, user }) => ({\r\n    tags: friends.tagList.split('#').filter((el) => el !== ''),\r\n    user: user.user,\r\n  }));\r\n  useEffect(() => {\r\n    console.log(user, tags);\r\n    dispatch(loadTags(user.uid));\r\n  }, [dispatch, user.uid]);\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const match = /[^ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|]/g;\r\n    const tag = e.target.tag.value.replace(match, '');\r\n    e.target.tag.value = '';\r\n    if (tags.includes(tag) || tag === '') {\r\n      e.target.tag.value = '';\r\n      return;\r\n    }\r\n  };\r\n  const onRemove = (e) => {\r\n    console.log(e.target.textContent);\r\n  };\r\n  return <TagList onSubmit={onSubmit} onRemove={onRemove} tags={tags} />;\r\n};\r\n\r\nexport default TagContainer;\r\n"]},"metadata":{},"sourceType":"module"}