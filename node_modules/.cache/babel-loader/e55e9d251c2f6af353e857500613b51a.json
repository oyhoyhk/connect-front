{"ast":null,"code":"import React,{useEffect}from'react';import{useSelector,useDispatch}from'react-redux';import TagList from'../../components/Friends/TagList';import{addTag,addTagInFront,loadTags,removeTag,removeTagInFront}from'../../modules/friends';import{jsx as _jsx}from\"react/jsx-runtime\";var TagContainer=function TagContainer(){var dispatch=useDispatch();var _useSelector=useSelector(function(_ref){var friends=_ref.friends,user=_ref.user;return{tags:friends.tagList.split('_').filter(function(el){return el!=='';}),uid:user.user.uid};}),uid=_useSelector.uid,tags=_useSelector.tags;useEffect(function(){if(uid){dispatch(loadTags(uid));}},[dispatch,uid]);var onSubmit=function onSubmit(e){e.preventDefault();var match=/[^ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|]/g;var tag=e.target.tag.value.replace(match,'');e.target.tag.value='';if(tags.includes(tag)||tag===''){e.target.tag.value='';return;}dispatch(addTag({tags:tags.join('_')+'_'+tag,uid:uid}));dispatch(addTagInFront(tag));};var onRemove=function onRemove(e){var tag=e.target.textContent.slice(1);dispatch(removeTag({tags:tags.filter(function(el){return el!==tag;}).join('_'),uid:uid}));dispatch(removeTagInFront(tag));};return/*#__PURE__*/_jsx(TagList,{onSubmit:onSubmit,onRemove:onRemove,tags:tags});};export default TagContainer;","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/Friends/TagContainer.js"],"names":["React","useEffect","useSelector","useDispatch","TagList","addTag","addTagInFront","loadTags","removeTag","removeTagInFront","TagContainer","dispatch","friends","user","tags","tagList","split","filter","el","uid","onSubmit","e","preventDefault","match","tag","target","value","replace","includes","join","onRemove","textContent","slice"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,OAAP,KAAoB,kCAApB,CACA,OACEC,MADF,CAEEC,aAFF,CAGEC,QAHF,CAIEC,SAJF,CAKEC,gBALF,KAMO,uBANP,C,2CAQA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,GAAMC,CAAAA,QAAQ,CAAGR,WAAW,EAA5B,CACA,iBAAsBD,WAAW,CAAC,kBAAGU,CAAAA,OAAH,MAAGA,OAAH,CAAYC,IAAZ,MAAYA,IAAZ,OAAwB,CACxDC,IAAI,CAAEF,OAAO,CAACG,OAAR,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2BC,MAA3B,CAAkC,SAACC,EAAD,QAAQA,CAAAA,EAAE,GAAK,EAAf,EAAlC,CADkD,CAExDC,GAAG,CAAEN,IAAI,CAACA,IAAL,CAAUM,GAFyC,CAAxB,EAAD,CAAjC,CAAQA,GAAR,cAAQA,GAAR,CAAaL,IAAb,cAAaA,IAAb,CAIAb,SAAS,CAAC,UAAM,CACd,GAAIkB,GAAJ,CAAS,CACPR,QAAQ,CAACJ,QAAQ,CAACY,GAAD,CAAT,CAAR,CACD,CACF,CAJQ,CAIN,CAACR,QAAD,CAAWQ,GAAX,CAJM,CAAT,CAKA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,CAAD,CAAO,CACtBA,CAAC,CAACC,cAAF,GAEA,GAAMC,CAAAA,KAAK,CAAG,0BAAd,CACA,GAAMC,CAAAA,GAAG,CAAGH,CAAC,CAACI,MAAF,CAASD,GAAT,CAAaE,KAAb,CAAmBC,OAAnB,CAA2BJ,KAA3B,CAAkC,EAAlC,CAAZ,CACAF,CAAC,CAACI,MAAF,CAASD,GAAT,CAAaE,KAAb,CAAqB,EAArB,CACA,GAAIZ,IAAI,CAACc,QAAL,CAAcJ,GAAd,GAAsBA,GAAG,GAAK,EAAlC,CAAsC,CACpCH,CAAC,CAACI,MAAF,CAASD,GAAT,CAAaE,KAAb,CAAqB,EAArB,CACA,OACD,CACDf,QAAQ,CAACN,MAAM,CAAC,CAAES,IAAI,CAAEA,IAAI,CAACe,IAAL,CAAU,GAAV,EAAiB,GAAjB,CAAuBL,GAA/B,CAAoCL,GAAG,CAAHA,GAApC,CAAD,CAAP,CAAR,CACAR,QAAQ,CAACL,aAAa,CAACkB,GAAD,CAAd,CAAR,CACD,CAZD,CAaA,GAAMM,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACT,CAAD,CAAO,CACtB,GAAMG,CAAAA,GAAG,CAAGH,CAAC,CAACI,MAAF,CAASM,WAAT,CAAqBC,KAArB,CAA2B,CAA3B,CAAZ,CACArB,QAAQ,CACNH,SAAS,CAAC,CAAEM,IAAI,CAAEA,IAAI,CAACG,MAAL,CAAY,SAACC,EAAD,QAAQA,CAAAA,EAAE,GAAKM,GAAf,EAAZ,EAAgCK,IAAhC,CAAqC,GAArC,CAAR,CAAmDV,GAAG,CAAHA,GAAnD,CAAD,CADH,CAAR,CAGAR,QAAQ,CAACF,gBAAgB,CAACe,GAAD,CAAjB,CAAR,CACD,CAND,CAOA,mBAAO,KAAC,OAAD,EAAS,QAAQ,CAAEJ,QAAnB,CAA6B,QAAQ,CAAEU,QAAvC,CAAiD,IAAI,CAAEhB,IAAvD,EAAP,CACD,CAhCD,CAkCA,cAAeJ,CAAAA,YAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport TagList from '../../components/Friends/TagList';\r\nimport {\r\n  addTag,\r\n  addTagInFront,\r\n  loadTags,\r\n  removeTag,\r\n  removeTagInFront,\r\n} from '../../modules/friends';\r\n\r\nconst TagContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const { uid, tags } = useSelector(({ friends, user }) => ({\r\n    tags: friends.tagList.split('_').filter((el) => el !== ''),\r\n    uid: user.user.uid,\r\n  }));\r\n  useEffect(() => {\r\n    if (uid) {\r\n      dispatch(loadTags(uid));\r\n    }\r\n  }, [dispatch, uid]);\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const match = /[^ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|]/g;\r\n    const tag = e.target.tag.value.replace(match, '');\r\n    e.target.tag.value = '';\r\n    if (tags.includes(tag) || tag === '') {\r\n      e.target.tag.value = '';\r\n      return;\r\n    }\r\n    dispatch(addTag({ tags: tags.join('_') + '_' + tag, uid }));\r\n    dispatch(addTagInFront(tag));\r\n  };\r\n  const onRemove = (e) => {\r\n    const tag = e.target.textContent.slice(1);\r\n    dispatch(\r\n      removeTag({ tags: tags.filter((el) => el !== tag).join('_'), uid }),\r\n    );\r\n    dispatch(removeTagInFront(tag));\r\n  };\r\n  return <TagList onSubmit={onSubmit} onRemove={onRemove} tags={tags} />;\r\n};\r\n\r\nexport default TagContainer;\r\n"]},"metadata":{},"sourceType":"module"}