{"ast":null,"code":"var _jsxFileName = \"C:\\\\nani\\\\connect\\\\connect-frontend\\\\src\\\\containers\\\\Friends\\\\TagContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport TagList from '../../components/Friends/TagList';\nimport { addTag, addTagInFront, loadTags, removeTag, removeTagInFront } from '../../modules/friends';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TagContainer = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    uid,\n    tags\n  } = useSelector(_ref => {\n    let {\n      friends,\n      user\n    } = _ref;\n    console.log('in selector', user, friends);\n    return {\n      tags: friends.tagList.split('_').filter(el => el !== ''),\n      uid: user.user.uid\n    };\n  });\n  useEffect(() => {\n    console.log(uid);\n\n    if (uid) {\n      console.log(uid);\n      dispatch(loadTags(uid));\n    }\n  }, [dispatch, uid]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const match = /[^ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|]/g;\n    const tag = e.target.tag.value.replace(match, '');\n    e.target.tag.value = '';\n\n    if (tags.includes(tag) || tag === '') {\n      e.target.tag.value = '';\n      return;\n    }\n\n    dispatch(addTag({\n      tags: tags.join('_') + '_' + tag,\n      uid\n    }));\n    dispatch(addTagInFront(tag));\n  };\n\n  const onRemove = e => {\n    const tag = e.target.textContent.slice(1);\n    dispatch(removeTag({\n      tags: tags.filter(el => el !== tag).join('_'),\n      uid\n    }));\n    dispatch(removeTagInFront(tag));\n  };\n\n  return /*#__PURE__*/_jsxDEV(TagList, {\n    onSubmit: onSubmit,\n    onRemove: onRemove,\n    tags: tags\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n};\n\n_s(TagContainer, \"R+uqSgEAliptyJKeHgHzFvr64vU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = TagContainer;\nexport default TagContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TagContainer\");","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/Friends/TagContainer.js"],"names":["React","useEffect","useState","useSelector","useDispatch","TagList","addTag","addTagInFront","loadTags","removeTag","removeTagInFront","TagContainer","dispatch","uid","tags","friends","user","console","log","tagList","split","filter","el","onSubmit","e","preventDefault","match","tag","target","value","replace","includes","join","onRemove","textContent","slice"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport TagList from '../../components/Friends/TagList';\r\nimport {\r\n  addTag,\r\n  addTagInFront,\r\n  loadTags,\r\n  removeTag,\r\n  removeTagInFront,\r\n} from '../../modules/friends';\r\n\r\nconst TagContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const { uid, tags } = useSelector(({ friends, user }) => {\r\n    console.log('in selector', user, friends);\r\n    return {\r\n      tags: friends.tagList.split('_').filter((el) => el !== ''),\r\n      uid: user.user.uid,\r\n    };\r\n  });\r\n  useEffect(() => {\r\n    console.log(uid);\r\n    if (uid) {\r\n      console.log(uid);\r\n      dispatch(loadTags(uid));\r\n    }\r\n  }, [dispatch, uid]);\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const match = /[^ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|]/g;\r\n    const tag = e.target.tag.value.replace(match, '');\r\n    e.target.tag.value = '';\r\n    if (tags.includes(tag) || tag === '') {\r\n      e.target.tag.value = '';\r\n      return;\r\n    }\r\n    dispatch(addTag({ tags: tags.join('_') + '_' + tag, uid }));\r\n    dispatch(addTagInFront(tag));\r\n  };\r\n  const onRemove = (e) => {\r\n    const tag = e.target.textContent.slice(1);\r\n    dispatch(\r\n      removeTag({ tags: tags.filter((el) => el !== tag).join('_'), uid }),\r\n    );\r\n    dispatch(removeTagInFront(tag));\r\n  };\r\n  return <TagList onSubmit={onSubmit} onRemove={onRemove} tags={tags} />;\r\n};\r\n\r\nexport default TagContainer;\r\n"]},"metadata":{},"sourceType":"module"}