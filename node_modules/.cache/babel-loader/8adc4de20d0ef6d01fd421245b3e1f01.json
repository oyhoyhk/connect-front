{"ast":null,"code":"import React,{useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import RecommendList from'../../components/Friends/RecommendList';import{getRecommend,friendRequest,addMessageWhenFriendRequest}from'../../modules/friends';import{jsx as _jsx}from\"react/jsx-runtime\";var RecommendContainer=function RecommendContainer(){var dispatch=useDispatch();var _useSelector=useSelector(function(_ref){var user=_ref.user,_ref$friends=_ref.friends,recommendList=_ref$friends.recommendList,tagList=_ref$friends.tagList;return{recommendList:recommendList,tags:tagList,uid:user.user.uid};}),uid=_useSelector.uid,recommendList=_useSelector.recommendList,tags=_useSelector.tags;useEffect(function(){dispatch(getRecommend({filter:tags,uid:uid}));},[dispatch,tags,uid]);var onRefresh=function onRefresh(){dispatch(getRecommend({filter:tags,uid:uid}));};var requestFriendEnrollment=function requestFriendEnrollment(receiver){var sender=JSON.parse(localStorage.user);dispatch(friendRequest({sender:sender,receiver:receiver}));receiver.type='sendered';dispatch(addMessageWhenFriendRequest(receiver));};return/*#__PURE__*/_jsx(RecommendList,{friendRequest:requestFriendEnrollment,recommendList:recommendList,onRefresh:onRefresh});};export default RecommendContainer;","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/Friends/RecommendContainer.js"],"names":["React","useEffect","useDispatch","useSelector","RecommendList","getRecommend","friendRequest","addMessageWhenFriendRequest","RecommendContainer","dispatch","user","friends","recommendList","tagList","tags","uid","filter","onRefresh","requestFriendEnrollment","receiver","sender","JSON","parse","localStorage","type"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,aAAP,KAA0B,wCAA1B,CACA,OACEC,YADF,CAEEC,aAFF,CAGEC,2BAHF,KAIO,uBAJP,C,2CAMA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC/B,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CACA,iBAAqCC,WAAW,CAC9C,kBAAGO,CAAAA,IAAH,MAAGA,IAAH,mBAASC,OAAT,CAAoBC,aAApB,cAAoBA,aAApB,CAAmCC,OAAnC,cAAmCA,OAAnC,OAAoD,CAClDD,aAAa,CAAbA,aADkD,CAElDE,IAAI,CAAED,OAF4C,CAGlDE,GAAG,CAAEL,IAAI,CAACA,IAAL,CAAUK,GAHmC,CAApD,EAD8C,CAAhD,CAAQA,GAAR,cAAQA,GAAR,CAAaH,aAAb,cAAaA,aAAb,CAA4BE,IAA5B,cAA4BA,IAA5B,CAOAb,SAAS,CAAC,UAAM,CACdQ,QAAQ,CAACJ,YAAY,CAAC,CAAEW,MAAM,CAAEF,IAAV,CAAgBC,GAAG,CAAHA,GAAhB,CAAD,CAAb,CAAR,CACD,CAFQ,CAEN,CAACN,QAAD,CAAWK,IAAX,CAAiBC,GAAjB,CAFM,CAAT,CAIA,GAAME,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtBR,QAAQ,CAACJ,YAAY,CAAC,CAAEW,MAAM,CAAEF,IAAV,CAAgBC,GAAG,CAAHA,GAAhB,CAAD,CAAb,CAAR,CACD,CAFD,CAGA,GAAMG,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACC,QAAD,CAAc,CAC5C,GAAMC,CAAAA,MAAM,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACb,IAAxB,CAAf,CACAD,QAAQ,CAACH,aAAa,CAAC,CAAEc,MAAM,CAANA,MAAF,CAAUD,QAAQ,CAARA,QAAV,CAAD,CAAd,CAAR,CACAA,QAAQ,CAACK,IAAT,CAAgB,UAAhB,CACAf,QAAQ,CAACF,2BAA2B,CAACY,QAAD,CAA5B,CAAR,CACD,CALD,CAMA,mBACE,KAAC,aAAD,EACE,aAAa,CAAED,uBADjB,CAEE,aAAa,CAAEN,aAFjB,CAGE,SAAS,CAAEK,SAHb,EADF,CAOD,CA7BD,CA+BA,cAAeT,CAAAA,kBAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport RecommendList from '../../components/Friends/RecommendList';\r\nimport {\r\n  getRecommend,\r\n  friendRequest,\r\n  addMessageWhenFriendRequest,\r\n} from '../../modules/friends';\r\n\r\nconst RecommendContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const { uid, recommendList, tags } = useSelector(\r\n    ({ user, friends: { recommendList, tagList } }) => ({\r\n      recommendList,\r\n      tags: tagList,\r\n      uid: user.user.uid,\r\n    }),\r\n  );\r\n  useEffect(() => {\r\n    dispatch(getRecommend({ filter: tags, uid }));\r\n  }, [dispatch, tags, uid]);\r\n\r\n  const onRefresh = () => {\r\n    dispatch(getRecommend({ filter: tags, uid }));\r\n  };\r\n  const requestFriendEnrollment = (receiver) => {\r\n    const sender = JSON.parse(localStorage.user);\r\n    dispatch(friendRequest({ sender, receiver }));\r\n    receiver.type = 'sendered';\r\n    dispatch(addMessageWhenFriendRequest(receiver));\r\n  };\r\n  return (\r\n    <RecommendList\r\n      friendRequest={requestFriendEnrollment}\r\n      recommendList={recommendList}\r\n      onRefresh={onRefresh}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RecommendContainer;\r\n"]},"metadata":{},"sourceType":"module"}