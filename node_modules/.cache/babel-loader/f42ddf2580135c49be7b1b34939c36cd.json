{"ast":null,"code":"var _jsxFileName = \"C:\\\\nani\\\\connect\\\\connect-frontend\\\\src\\\\containers\\\\common\\\\ChatHallContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useReducer, useState } from 'react';\nimport ChatHall from '../../components/common/ChatHall';\nimport { useDispatch, useSelector } from 'react-redux';\nimport io from 'socket.io-client';\nimport { socket } from '../../lib/sockets/chatHallSocket';\nimport { access, leave } from '../../lib/api/chatHall';\nimport { setChatHall, getGuestNumber } from '../../modules/chatHall';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatHallContainer = () => {\n  _s();\n\n  const [msg, setMsg] = useState('');\n  const dispatch = useDispatch();\n  const {\n    User,\n    user,\n    userList,\n    msgList\n  } = useSelector(_ref => {\n    let {\n      chatHall,\n      user\n    } = _ref;\n    console.log(user);\n    return {\n      user: user.user ? user.user.username : chatHall.user,\n      userList: user.user ? user.user.username : chatHall.userList,\n      msgList: chatHall.msgList\n    };\n  });\n  useEffect(() => {\n    if (!user) {\n      dispatch(getGuestNumber());\n    }\n  }, [dispatch, user]);\n  useEffect(() => {\n    socket.on('broadcastMsg', data => {\n      console.log('receive data : ', data);\n      dispatch({\n        type: 'msg',\n        msg: { ...data,\n          received: true\n        }\n      });\n    });\n    return () => {};\n  }, [dispatch]);\n\n  const onChange = e => {\n    setMsg(e.target.value);\n  };\n\n  const changeScroll = useCallback(e => {\n    e.scrollTop = e.scrollHeight;\n  }, []);\n\n  const onSubmit = () => {\n    if (msg === '') return;\n    socket.emit('msg', {\n      nickname: user.nickname,\n      msg: msg.trim()\n    });\n    dispatch({\n      type: 'msg',\n      msg: {\n        send: true,\n        nickname: user.nickname,\n        msg: msg.trim()\n      }\n    });\n    setMsg('');\n  };\n\n  const onKeySubmit = e => {\n    if (e.key === 'Enter') {\n      onSubmit();\n      setMsg('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChatHall, {\n    changeScroll: changeScroll,\n    msg: msg,\n    onChange: onChange,\n    onSubmit: onSubmit,\n    onKeySubmit: onKeySubmit,\n    msgList: msgList,\n    userList: userList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatHallContainer, \"/ItSByTadioWUezmKGorWYq5WEs=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ChatHallContainer;\nconst initialState = {\n  msg: [],\n  myInfo: {\n    username: null,\n    nickname: null,\n    profileImage: null\n  },\n  userList: []\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'msg':\n      {\n        return { ...initialState,\n          msg: [...state.msg, action.msg]\n        };\n      }\n\n    case 'set_guest_info':\n      {\n        const {\n          username,\n          nickname\n        } = action.guestInfo;\n        console.log(username, nickname);\n        return { ...state,\n          myInfo: {\n            username: username,\n            nickname: nickname,\n            profileImage: null\n          }\n        };\n      }\n\n    case 'set_user_list':\n      {\n        const {\n          list\n        } = action;\n        return { ...state,\n          userList: [...list]\n        };\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default ChatHallContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatHallContainer\");","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/common/ChatHallContainer.js"],"names":["React","useCallback","useEffect","useReducer","useState","ChatHall","useDispatch","useSelector","io","socket","access","leave","setChatHall","getGuestNumber","ChatHallContainer","msg","setMsg","dispatch","User","user","userList","msgList","chatHall","console","log","username","on","data","type","received","onChange","e","target","value","changeScroll","scrollTop","scrollHeight","onSubmit","emit","nickname","trim","send","onKeySubmit","key","initialState","myInfo","profileImage","reducer","state","action","guestInfo","list"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useReducer, useState } from 'react';\r\nimport ChatHall from '../../components/common/ChatHall';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport io from 'socket.io-client';\r\nimport { socket } from '../../lib/sockets/chatHallSocket';\r\nimport { access, leave } from '../../lib/api/chatHall';\r\nimport { setChatHall, getGuestNumber } from '../../modules/chatHall';\r\n\r\nconst ChatHallContainer = () => {\r\n  const [msg, setMsg] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const { User, user, userList, msgList } = useSelector(\r\n    ({ chatHall, user }) => {\r\n      console.log(user);\r\n      return {\r\n        user: user.user ? user.user.username : chatHall.user,\r\n        userList: user.user ? user.user.username : chatHall.userList,\r\n        msgList: chatHall.msgList,\r\n      };\r\n    },\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      dispatch(getGuestNumber());\r\n    }\r\n  }, [dispatch, user]);\r\n\r\n  useEffect(() => {\r\n    socket.on('broadcastMsg', (data) => {\r\n      console.log('receive data : ', data);\r\n      dispatch({ type: 'msg', msg: { ...data, received: true } });\r\n    });\r\n\r\n    return () => {};\r\n  }, [dispatch]);\r\n\r\n  const onChange = (e) => {\r\n    setMsg(e.target.value);\r\n  };\r\n\r\n  const changeScroll = useCallback((e) => {\r\n    e.scrollTop = e.scrollHeight;\r\n  }, []);\r\n\r\n  const onSubmit = () => {\r\n    if (msg === '') return;\r\n    socket.emit('msg', { nickname: user.nickname, msg: msg.trim() });\r\n    dispatch({\r\n      type: 'msg',\r\n      msg: { send: true, nickname: user.nickname, msg: msg.trim() },\r\n    });\r\n    setMsg('');\r\n  };\r\n\r\n  const onKeySubmit = (e) => {\r\n    if (e.key === 'Enter') {\r\n      onSubmit();\r\n      setMsg('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ChatHall\r\n      changeScroll={changeScroll}\r\n      msg={msg}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      onKeySubmit={onKeySubmit}\r\n      msgList={msgList}\r\n      userList={userList}\r\n    />\r\n  );\r\n};\r\n\r\nconst initialState = {\r\n  msg: [],\r\n  myInfo: {\r\n    username: null,\r\n    nickname: null,\r\n    profileImage: null,\r\n  },\r\n  userList: [],\r\n};\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'msg': {\r\n      return { ...initialState, msg: [...state.msg, action.msg] };\r\n    }\r\n    case 'set_guest_info': {\r\n      const { username, nickname } = action.guestInfo;\r\n      console.log(username, nickname);\r\n      return {\r\n        ...state,\r\n        myInfo: {\r\n          username: username,\r\n          nickname: nickname,\r\n          profileImage: null,\r\n        },\r\n      };\r\n    }\r\n    case 'set_user_list': {\r\n      const { list } = action;\r\n      return {\r\n        ...state,\r\n        userList: [...list],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default ChatHallContainer;\r\n"]},"metadata":{},"sourceType":"module"}