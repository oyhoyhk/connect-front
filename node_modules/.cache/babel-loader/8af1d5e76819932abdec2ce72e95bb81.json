{"ast":null,"code":"import _slicedToArray from\"C:/nani/connect/connect-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{useDispatch}from'react-redux';import Notice from'../../components/common/Notice';import{acceptFriendRequest,refuseFriendRequest}from'../../modules/friends';import{jsx as _jsx}from\"react/jsx-runtime\";var NoticeContainer=function NoticeContainer(_ref){var sender=_ref.sender,profileImage=_ref.profileImage,nickname=_ref.nickname,type=_ref.type,time=_ref.time;var dispatch=useDispatch();var _useState=useState(null),_useState2=_slicedToArray(_useState,2),receiver=_useState2[0],setReceiver=_useState2[1];useEffect(function(){if(localStorage.user){setReceiver(JSON.parse(localStorage.getItem('user')).uid);}},[]);var onAccept=function onAccept(e){e.stopPropagation();dispatch(acceptFriendRequest({sender:sender,receiver:receiver}));};var onRefuse=function onRefuse(e){e.stopPropagation();dispatch(refuseFriendRequest({sender:sender,receiver:receiver,type:'refuse'}));};var onCancel=function onCancel(e){e.stopPropagation();// const sender = JSON.parse(localStorage.user).uid;\nconsole.log('cancel',sender,receiver);dispatch(refuseFriendRequest({sender:receiver,receiver:sender,type:'cancel'}));};return/*#__PURE__*/_jsx(Notice,{profileImage:profileImage,type:type,time:time,nickname:nickname,onAccept:onAccept,onRefuse:onRefuse,onCancel:onCancel},sender);};export default NoticeContainer;","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/common/NoticeContainer.js"],"names":["React","useEffect","useState","useDispatch","Notice","acceptFriendRequest","refuseFriendRequest","NoticeContainer","sender","profileImage","nickname","type","time","dispatch","receiver","setReceiver","localStorage","user","JSON","parse","getItem","uid","onAccept","e","stopPropagation","onRefuse","onCancel","console","log"],"mappings":"sHAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,MAAOC,CAAAA,MAAP,KAAmB,gCAAnB,CACA,OACEC,mBADF,CAEEC,mBAFF,KAGO,uBAHP,C,2CAKA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAAoD,IAAjDC,CAAAA,MAAiD,MAAjDA,MAAiD,CAAzCC,YAAyC,MAAzCA,YAAyC,CAA3BC,QAA2B,MAA3BA,QAA2B,CAAjBC,IAAiB,MAAjBA,IAAiB,CAAXC,IAAW,MAAXA,IAAW,CAC1E,GAAMC,CAAAA,QAAQ,CAAGV,WAAW,EAA5B,CACA,cAAgCD,QAAQ,CAAC,IAAD,CAAxC,wCAAOY,QAAP,eAAiBC,WAAjB,eAEAd,SAAS,CAAC,UAAM,CACd,GAAIe,YAAY,CAACC,IAAjB,CAAuB,CACrBF,WAAW,CAACG,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACI,OAAb,CAAqB,MAArB,CAAX,EAAyCC,GAA1C,CAAX,CACD,CACF,CAJQ,CAIN,EAJM,CAAT,CAKA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,CAAD,CAAO,CACtBA,CAAC,CAACC,eAAF,GACAX,QAAQ,CAACR,mBAAmB,CAAC,CAAEG,MAAM,CAANA,MAAF,CAAUM,QAAQ,CAARA,QAAV,CAAD,CAApB,CAAR,CACD,CAHD,CAIA,GAAMW,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACF,CAAD,CAAO,CACtBA,CAAC,CAACC,eAAF,GACAX,QAAQ,CAACP,mBAAmB,CAAC,CAAEE,MAAM,CAANA,MAAF,CAAUM,QAAQ,CAARA,QAAV,CAAoBH,IAAI,CAAE,QAA1B,CAAD,CAApB,CAAR,CACD,CAHD,CAIA,GAAMe,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACH,CAAD,CAAO,CACtBA,CAAC,CAACC,eAAF,GACA;AACAG,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAsBpB,MAAtB,CAA8BM,QAA9B,EACAD,QAAQ,CACNP,mBAAmB,CAAC,CAClBE,MAAM,CAAEM,QADU,CAElBA,QAAQ,CAAEN,MAFQ,CAGlBG,IAAI,CAAE,QAHY,CAAD,CADb,CAAR,CAOD,CAXD,CAYA,mBACE,KAAC,MAAD,EAEE,YAAY,CAAEF,YAFhB,CAGE,IAAI,CAAEE,IAHR,CAIE,IAAI,CAAEC,IAJR,CAKE,QAAQ,CAAEF,QALZ,CAME,QAAQ,CAAEY,QANZ,CAOE,QAAQ,CAAEG,QAPZ,CAQE,QAAQ,CAAEC,QARZ,EACOlB,MADP,CADF,CAYD,CAzCD,CA2CA,cAAeD,CAAAA,eAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Notice from '../../components/common/Notice';\r\nimport {\r\n  acceptFriendRequest,\r\n  refuseFriendRequest,\r\n} from '../../modules/friends';\r\n\r\nconst NoticeContainer = ({ sender, profileImage, nickname, type, time }) => {\r\n  const dispatch = useDispatch();\r\n  const [receiver, setReceiver] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.user) {\r\n      setReceiver(JSON.parse(localStorage.getItem('user')).uid);\r\n    }\r\n  }, []);\r\n  const onAccept = (e) => {\r\n    e.stopPropagation();\r\n    dispatch(acceptFriendRequest({ sender, receiver }));\r\n  };\r\n  const onRefuse = (e) => {\r\n    e.stopPropagation();\r\n    dispatch(refuseFriendRequest({ sender, receiver, type: 'refuse' }));\r\n  };\r\n  const onCancel = (e) => {\r\n    e.stopPropagation();\r\n    // const sender = JSON.parse(localStorage.user).uid;\r\n    console.log('cancel', sender, receiver);\r\n    dispatch(\r\n      refuseFriendRequest({\r\n        sender: receiver,\r\n        receiver: sender,\r\n        type: 'cancel',\r\n      }),\r\n    );\r\n  };\r\n  return (\r\n    <Notice\r\n      key={sender}\r\n      profileImage={profileImage}\r\n      type={type}\r\n      time={time}\r\n      nickname={nickname}\r\n      onAccept={onAccept}\r\n      onRefuse={onRefuse}\r\n      onCancel={onCancel}\r\n    />\r\n  );\r\n};\r\n\r\nexport default NoticeContainer;\r\n"]},"metadata":{},"sourceType":"module"}