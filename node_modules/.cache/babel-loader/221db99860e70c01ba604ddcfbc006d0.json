{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport * as authAPI from '../lib/api/auth';\nimport { takeLatest } from 'redux-saga/effects';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\nconst SET_TEMP_INFO = 'auth/SET_TEMP_INFO';\nconst [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] = createRequestActionTypes('auth/REGISTER');\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequestActionTypes('auth/LOGIN');\nexport const changeField = createAction(CHANGE_FIELD, _ref => {\n  let {\n    form,\n    key,\n    value\n  } = _ref;\n  return {\n    form,\n    key,\n    value\n  };\n});\nconsole.log('changeField', changeField({\n  form: 'form',\n  key: 'key',\n  value: 'value'\n}));\nexport const initializeForm = createAction(INITIALIZE_FORM, form => form);\nexport const setTempInfo = createAction(SET_TEMP_INFO, _ref2 => {\n  let {\n    username,\n    password\n  } = _ref2;\n  return {\n    username,\n    password\n  };\n});\nexport const register = createAction(REGISTER, _ref3 => {\n  let {\n    username,\n    password\n  } = _ref3;\n  return {\n    username,\n    password\n  };\n});\nexport const login = createAction(LOGIN, _ref4 => {\n  let {\n    username,\n    password\n  } = _ref4;\n  return {\n    username,\n    password\n  };\n});\nconst registerSaga = createRequestSaga(REGISTER, authAPI.register);\nconst loginSaga = createRequestSaga(LOGIN, authAPI.login);\nexport function* authSaga() {\n  yield takeLatest(REGISTER, registerSaga);\n  yield takeLatest(LOGIN, loginSaga);\n}\nconst initialState = {\n  register: {\n    username: '',\n    password: '',\n    passwordConfirm: ''\n  },\n  login: {\n    username: '',\n    password: ''\n  },\n  tempInfo: {\n    username: '',\n    password: '',\n    nickname: null,\n    profileImage: null\n  },\n  auth: null,\n  authError: null\n};\nconst auth = handleActions({\n  [CHANGE_FIELD]: (state, _ref5) => {\n    let {\n      payload: {\n        form,\n        key,\n        value\n      }\n    } = _ref5;\n    const target = state[form];\n    return { ...state,\n      [form]: { ...target,\n        [key]: value\n      }\n    };\n  },\n  [INITIALIZE_FORM]: (state, payload) => {\n    const {\n      payload: form\n    } = payload;\n    console.log(state, payload);\n    return { ...state,\n      [form]: initialState[form]\n    };\n  },\n  [SET_TEMP_INFO]: (state, _ref6) => {\n    let {\n      payload: {\n        username,\n        password,\n        nickname,\n        profileImage\n      }\n    } = _ref6;\n    return { ...state,\n      tempInfo: {\n        username,\n        password,\n        nickname,\n        profileImage\n      }\n    };\n  }\n}, initialState);\nexport default auth;","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/modules/auth.js"],"names":["createAction","handleActions","authAPI","takeLatest","createRequestSaga","createRequestActionTypes","CHANGE_FIELD","INITIALIZE_FORM","SET_TEMP_INFO","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","changeField","form","key","value","console","log","initializeForm","setTempInfo","username","password","register","login","registerSaga","loginSaga","authSaga","initialState","passwordConfirm","tempInfo","nickname","profileImage","auth","authError","state","payload","target"],"mappings":"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","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\r\nimport * as authAPI from '../lib/api/auth';\r\nimport { takeLatest } from 'redux-saga/effects';\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from '../lib/createRequestSaga';\r\n\r\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\r\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\r\nconst SET_TEMP_INFO = 'auth/SET_TEMP_INFO';\r\n\r\nconst [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] =\r\n  createRequestActionTypes('auth/REGISTER');\r\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] =\r\n  createRequestActionTypes('auth/LOGIN');\r\n\r\nexport const changeField = createAction(\r\n  CHANGE_FIELD,\r\n  ({ form, key, value }) => ({\r\n    form,\r\n    key,\r\n    value,\r\n  }),\r\n);\r\nconsole.log(\r\n  'changeField',\r\n  changeField({\r\n    form: 'form',\r\n    key: 'key',\r\n    value: 'value',\r\n  }),\r\n);\r\nexport const initializeForm = createAction(INITIALIZE_FORM, (form) => form);\r\nexport const setTempInfo = createAction(\r\n  SET_TEMP_INFO,\r\n  ({ username, password }) => ({ username, password }),\r\n);\r\nexport const register = createAction(REGISTER, ({ username, password }) => ({\r\n  username,\r\n  password,\r\n}));\r\nexport const login = createAction(LOGIN, ({ username, password }) => ({\r\n  username,\r\n  password,\r\n}));\r\n\r\nconst registerSaga = createRequestSaga(REGISTER, authAPI.register);\r\nconst loginSaga = createRequestSaga(LOGIN, authAPI.login);\r\n\r\nexport function* authSaga() {\r\n  yield takeLatest(REGISTER, registerSaga);\r\n  yield takeLatest(LOGIN, loginSaga);\r\n}\r\n\r\nconst initialState = {\r\n  register: {\r\n    username: '',\r\n    password: '',\r\n    passwordConfirm: '',\r\n  },\r\n  login: {\r\n    username: '',\r\n    password: '',\r\n  },\r\n  tempInfo: {\r\n    username: '',\r\n    password: '',\r\n    nickname: null,\r\n    profileImage: null,\r\n  },\r\n  auth: null,\r\n  authError: null,\r\n};\r\n\r\nconst auth = handleActions(\r\n  {\r\n    [CHANGE_FIELD]: (state, { payload: { form, key, value } }) => {\r\n      const target = state[form];\r\n      return {\r\n        ...state,\r\n        [form]: {\r\n          ...target,\r\n          [key]: value,\r\n        },\r\n      };\r\n    },\r\n    [INITIALIZE_FORM]: (state, payload) => {\r\n      const { payload: form } = payload;\r\n      console.log(state, payload);\r\n      return {\r\n        ...state,\r\n        [form]: initialState[form],\r\n      };\r\n    },\r\n    [SET_TEMP_INFO]: (\r\n      state,\r\n      { payload: { username, password, nickname, profileImage } },\r\n    ) => {\r\n      return {\r\n        ...state,\r\n        tempInfo: {\r\n          username,\r\n          password,\r\n          nickname,\r\n          profileImage,\r\n        },\r\n      };\r\n    },\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default auth;\r\n"]},"metadata":{},"sourceType":"module"}