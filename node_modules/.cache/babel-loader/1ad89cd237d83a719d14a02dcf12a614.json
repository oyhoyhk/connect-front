{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport { takeLatest } from 'redux-saga/effects';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nimport * as friendsAPI from '../lib/api/friends';\nconst REMOVE_TAG_IN_FRONT = 'friends/REMOVE_TAG_IN_FRONT';\nconst ADD_TAG_IN_FRONT = 'friends/ADD_TAG_IN_FRONT';\nconst RECEIVE_MESSAGE = 'frends/RECEIVE_MESSAGE';\nconst FRIEND_REQUEST_ACCEPTED = 'friends/FRIEND_REQUEST_ACCEPTED';\nconst FRIEND_REQUEST_REFUSED = 'friends/FRIEND_REQUEST_REFUSED';\nconst SOMEONE_LOGIN = 'friends/SOMEONE_LOGIN';\nconst SOMEONE_LOGOUT = 'friends/SOMEONE_LOGOUT';\nconst ADD_MESSAGE_WHEN_FRIEND_REQUEST = 'friends/ADD_MESSAGE_WHEN_FRIEND_REQUEST';\nconst [LOAD_FRIENDS_LIST, LOAD_FRIENDS_LIST_SUCCESS, LOAD_FRIENDS_LIST_FAILURE] = createRequestActionTypes('friends/SET_FRIENDS');\nconst [LOAD_TAGS, LOAD_TAGS_SUCCESS, LOAD_TAGS_FAILURE] = createRequestActionTypes('friends/SET_TAGS');\nconst [ADD_TAG, ADD_TAG_SUCCESS, ADD_TAG_FAILURE] = createRequestActionTypes('friends/ADD_TAG');\nconst [REMOVE_TAG, REMOVE_TAG_SUCCESS, REMOVE_TAG_FAILURE] = createRequestActionTypes('frineds/REMOVE_TAG');\nconst [GET_RECOMMEND, GET_RECOMMEND_SUCCESS, GET_RECOMMEND_FAILURE] = createRequestActionTypes('friends/GET_RECOMMEND');\nconst [FRIEND_REQUEST, FRIEND_REQUEST_SUCCESS, FRIEND_REQUEST_FAILURE] = createRequestActionTypes('friends/FRIEND_REQUEST');\nconst [REQUEST_FRIENDS_LIST, REQUEST_FRIENDS_LIST_SUCCESS, REQUEST_FRIENDS_LIST_FAILURE] = createRequestActionTypes('friends/REQUEST_FRIENDS_LIST');\nconst [REQUEST_MESSAGES_LIST, REQUEST_MESSAGES_LIST_SUCCESS, REQUEST_MESSAGES_LIST_FAILURE] = createRequestActionTypes('friends/REQUEST_MESSAGES_LIST');\nconst [ACCEPT_FRIEND_REQUEST, ACCEPT_FRIEND_REQUEST_SUCCESS, ACCEPT_FRIEND_REQUEST_FAILURE] = createRequestActionTypes('friends/ACCEPT_FRIEND_REQUEST');\nconst [REFUSE_FRIEND_REQUEST, REFUSE_FRIEND_REQUEST_SUCCESS, REFUSE_FRIEND_REQUEST_FAILURE] = createRequestActionTypes('friend/REFUSE_FRIEND_REQUEST');\nconst [CANCEL_FRIEND_REQUEST, CANCEL_FRIEND_REQUEST_SUCCESS, CANCEL_FRIEND_REQUEST_FAILURE] = createRequestActionTypes('friend/CANCEL_FRIEND_REQUEST');\nexport const loadTags = createAction(LOAD_TAGS);\nexport const addTag = createAction(ADD_TAG);\nexport const addTagInFront = createAction(ADD_TAG_IN_FRONT);\nexport const removeTag = createAction(REMOVE_TAG);\nexport const removeTagInFront = createAction(REMOVE_TAG_IN_FRONT);\nexport const getRecommend = createAction(GET_RECOMMEND);\nexport const friendRequest = createAction(FRIEND_REQUEST);\nexport const requestFriendsList = createAction(REQUEST_FRIENDS_LIST);\nexport const receiveMessage = createAction(RECEIVE_MESSAGE);\nexport const requestMessagesList = createAction(REQUEST_MESSAGES_LIST);\nexport const acceptFriendRequest = createAction(ACCEPT_FRIEND_REQUEST);\nexport const refuseFriendRequest = createAction(REFUSE_FRIEND_REQUEST);\nexport const friendRequestAccepted = createAction(FRIEND_REQUEST_ACCEPTED);\nexport const friendRequestRefused = createAction(FRIEND_REQUEST_REFUSED);\nexport const addMessageWhenFriendRequest = createAction(ADD_MESSAGE_WHEN_FRIEND_REQUEST);\nexport const cancelFriendRequest = createAction(CANCEL_FRIEND_REQUEST);\nexport const someoneLogin = createAction(SOMEONE_LOGIN);\nexport const someoneLogout = createAction(SOMEONE_LOGOUT);\nconst loadFriendsListSaga = createRequestSaga(LOAD_FRIENDS_LIST);\nconst loadTagsSaga = createRequestSaga(LOAD_TAGS, friendsAPI.loadTags);\nconst addTagSaga = createRequestSaga(ADD_TAG, friendsAPI.addTag);\nconst removeTagSaga = createRequestSaga(REMOVE_TAG, friendsAPI.removeTag);\nconst getRecommendSaga = createRequestSaga(GET_RECOMMEND, friendsAPI.getRecommend);\nconst friendRequestSaga = createRequestSaga(FRIEND_REQUEST, friendsAPI.friendRequest);\nconst requestFriendsListSaga = createRequestSaga(REQUEST_FRIENDS_LIST, friendsAPI.requestFriendsList);\nconst requestMessagesListSaga = createRequestSaga(REQUEST_MESSAGES_LIST, friendsAPI.requestMessagesList);\nconst acceptFriendRequestSaga = createRequestSaga(ACCEPT_FRIEND_REQUEST, friendsAPI.acceptFriendRequest);\nconst refuseFriendRequestSaga = createRequestSaga(REFUSE_FRIEND_REQUEST, friendsAPI.refuseFriendRequest);\nexport function* friendsSaga() {\n  yield takeLatest(LOAD_FRIENDS_LIST, loadFriendsListSaga);\n  yield takeLatest(LOAD_TAGS, loadTagsSaga);\n  yield takeLatest(ADD_TAG, addTagSaga);\n  yield takeLatest(REMOVE_TAG, removeTagSaga);\n  yield takeLatest(GET_RECOMMEND, getRecommendSaga);\n  yield takeLatest(FRIEND_REQUEST, friendRequestSaga);\n  yield takeLatest(REQUEST_FRIENDS_LIST, requestFriendsListSaga);\n  yield takeLatest(REQUEST_MESSAGES_LIST, requestMessagesListSaga);\n  yield takeLatest(ACCEPT_FRIEND_REQUEST, acceptFriendRequestSaga);\n  yield takeLatest(REFUSE_FRIEND_REQUEST, refuseFriendRequestSaga);\n}\nconst initialState = {\n  friendsList: [],\n  tagList: '',\n  error: null,\n  recommendList: [],\n  friendRequestList: [],\n  messagesList: []\n};\nexport default handleActions({\n  [LOAD_TAGS_SUCCESS]: (state, _ref) => {\n    let {\n      payload: tags\n    } = _ref;\n    return { ...state,\n      tagList: tags\n    };\n  },\n  [LOAD_TAGS_FAILURE]: (state, _ref2) => {\n    let {\n      payload: error\n    } = _ref2;\n    return { ...state,\n      error\n    };\n  },\n  [LOAD_FRIENDS_LIST_SUCCESS]: (state, _ref3) => {\n    let {\n      payload: friendsList\n    } = _ref3;\n    return { ...state,\n      friendsList: [...friendsList]\n    };\n  },\n  [LOAD_FRIENDS_LIST_FAILURE]: (state, _ref4) => {\n    let {\n      payload: error\n    } = _ref4;\n    return { ...state,\n      error\n    };\n  },\n  [ADD_TAG_SUCCESS]: state => ({ ...state\n  }),\n  [ADD_TAG_FAILURE]: (state, _ref5) => {\n    let {\n      payload: error\n    } = _ref5;\n    return { ...state,\n      error\n    };\n  },\n  [ADD_TAG_IN_FRONT]: (state, _ref6) => {\n    let {\n      payload: tag\n    } = _ref6;\n    return { ...state,\n      tagList: state.tagList + '_' + tag\n    };\n  },\n  [REMOVE_TAG_SUCCESS]: state => ({ ...state\n  }),\n  [REMOVE_TAG_FAILURE]: (state, _ref7) => {\n    let {\n      payload: error\n    } = _ref7;\n    return { ...state,\n      error\n    };\n  },\n  [REMOVE_TAG_IN_FRONT]: (state, _ref8) => {\n    let {\n      payload: tag\n    } = _ref8;\n    return { ...state,\n      tagList: state.tagList.split('_').filter(el => el !== tag).join('_')\n    };\n  },\n  [GET_RECOMMEND_SUCCESS]: (state, _ref9) => {\n    let {\n      payload: list\n    } = _ref9;\n    return { ...state,\n      recommendList: [...list]\n    };\n  },\n  [GET_RECOMMEND_FAILURE]: (state, _ref10) => {\n    let {\n      payload: error\n    } = _ref10;\n    return { ...state,\n      error\n    };\n  },\n  [FRIEND_REQUEST_SUCCESS]: (state, _ref11) => {\n    let {\n      payload: list\n    } = _ref11;\n    return { ...state,\n      friendRequestList: [...list]\n    };\n  },\n  [FRIEND_REQUEST_FAILURE]: (state, _ref12) => {\n    let {\n      payload: error\n    } = _ref12;\n    return { ...state,\n      error\n    };\n  },\n  [REQUEST_FRIENDS_LIST_SUCCESS]: (state, _ref13) => {\n    let {\n      payload: friendsList\n    } = _ref13;\n    return { ...state,\n      friendsList\n    };\n  },\n  [REQUEST_FRIENDS_LIST_FAILURE]: (state, _ref14) => {\n    let {\n      payload: error\n    } = _ref14;\n    return { ...state,\n      error\n    };\n  },\n  [RECEIVE_MESSAGE]: (state, _ref15) => {\n    let {\n      payload: data\n    } = _ref15;\n    return { ...state,\n      messagesList: [...state.messagesList, { ...data\n      }]\n    };\n  },\n  [REQUEST_MESSAGES_LIST_SUCCESS]: (state, _ref16) => {\n    let {\n      payload: messagesList\n    } = _ref16;\n    const result = messagesList.map(el => {\n      const info = JSON.parse(el.info);\n      info.type = el.type;\n      info.time = el.CREATED_AT.slice(2, 10).split('-').join('.');\n      return info;\n    });\n    return { ...state,\n      messagesList: [...result]\n    };\n  },\n  [REQUEST_MESSAGES_LIST_FAILURE]: (state, _ref17) => {\n    let {\n      payload: error\n    } = _ref17;\n    return { ...state,\n      error\n    };\n  },\n  [ACCEPT_FRIEND_REQUEST_SUCCESS]: (state, _ref18) => {\n    let {\n      payload: {\n        friendsList,\n        messagesList\n      }\n    } = _ref18;\n    return { ...state,\n      messagesList: [...messagesList.map(message => JSON.parse(message.SENDER_INFO))],\n      friendsList: [...friendsList]\n    };\n  },\n  [ACCEPT_FRIEND_REQUEST_FAILURE]: (state, _ref19) => {\n    let {\n      payload: error\n    } = _ref19;\n    return { ...state,\n      error\n    };\n  },\n  [REFUSE_FRIEND_REQUEST_SUCCESS]: (state, _ref20) => {\n    let {\n      payload: messagesList\n    } = _ref20;\n    const result = messagesList.map(message => {\n      message.info = JSON.parse(message.info);\n      message.info.time = message.CREATED_AT.slice(0, 10).split('-').join('.');\n      message.info.type = message.type;\n      return message.info;\n    });\n    return { ...state,\n      messagesList: [...result]\n    };\n  },\n  [REFUSE_FRIEND_REQUEST_FAILURE]: (state, _ref21) => {\n    let {\n      payload: error\n    } = _ref21;\n    return { ...state,\n      error\n    };\n  },\n  [FRIEND_REQUEST_ACCEPTED]: (state, _ref22) => {\n    let {\n      payload: info\n    } = _ref22;\n    return { ...state,\n      friendsList: [...state.friendsList, info]\n    };\n  },\n  [FRIEND_REQUEST_REFUSED]: (state, _ref23) => {\n    let {\n      payload: uid\n    } = _ref23;\n    console.log(uid);\n    return { ...state,\n      messagesList: state.messagesList.filter(el => el.uid !== uid)\n    };\n  },\n  [ADD_MESSAGE_WHEN_FRIEND_REQUEST]: (state, _ref24) => {\n    let {\n      payload: receiver\n    } = _ref24;\n    return { ...state,\n      messagesList: [{ ...receiver\n      }, ...state.messagesList]\n    };\n  },\n  [CANCEL_FRIEND_REQUEST_SUCCESS]: (state, _ref25) => {\n    let {\n      payload: messagesList\n    } = _ref25;\n    const result = messagesList.map(el => {\n      const info = JSON.parse(el.info);\n      info.type = el.type;\n      info.time = el.CREATED_AT.slice(2, 10).split('-').join('.');\n      return info;\n    });\n    return { ...state,\n      messagesList: [...result]\n    };\n  },\n  [CANCEL_FRIEND_REQUEST_FAILURE]: (state, _ref26) => {\n    let {\n      payload: error\n    } = _ref26;\n    return { ...state,\n      error\n    };\n  },\n  [SOMEONE_LOGIN]: (state, _ref27) => {\n    let {\n      payload: uid\n    } = _ref27;\n    return { ...state,\n      friendsList: state.friendsList.map(friend => friend.uid === uid ? { ...friend,\n        status: true\n      } : { ...friend\n      }).sort((a, b) => {\n        if (a.status && !b.status) return -1;else if (!a.status && b.status) return 1;else return a.uid - b.uid;\n      })\n    };\n  },\n  [SOMEONE_LOGOUT]: (state, _ref28) => {\n    let {\n      payload: uid\n    } = _ref28;\n    return { ...state,\n      friendsList: state.friendsList.map(friend => friend.uid === uid ? { ...friend,\n        status: false\n      } : { ...friend\n      })\n    };\n  }\n}, initialState);","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/modules/friends.js"],"names":["createAction","handleActions","takeLatest","createRequestSaga","createRequestActionTypes","friendsAPI","REMOVE_TAG_IN_FRONT","ADD_TAG_IN_FRONT","RECEIVE_MESSAGE","FRIEND_REQUEST_ACCEPTED","FRIEND_REQUEST_REFUSED","SOMEONE_LOGIN","SOMEONE_LOGOUT","ADD_MESSAGE_WHEN_FRIEND_REQUEST","LOAD_FRIENDS_LIST","LOAD_FRIENDS_LIST_SUCCESS","LOAD_FRIENDS_LIST_FAILURE","LOAD_TAGS","LOAD_TAGS_SUCCESS","LOAD_TAGS_FAILURE","ADD_TAG","ADD_TAG_SUCCESS","ADD_TAG_FAILURE","REMOVE_TAG","REMOVE_TAG_SUCCESS","REMOVE_TAG_FAILURE","GET_RECOMMEND","GET_RECOMMEND_SUCCESS","GET_RECOMMEND_FAILURE","FRIEND_REQUEST","FRIEND_REQUEST_SUCCESS","FRIEND_REQUEST_FAILURE","REQUEST_FRIENDS_LIST","REQUEST_FRIENDS_LIST_SUCCESS","REQUEST_FRIENDS_LIST_FAILURE","REQUEST_MESSAGES_LIST","REQUEST_MESSAGES_LIST_SUCCESS","REQUEST_MESSAGES_LIST_FAILURE","ACCEPT_FRIEND_REQUEST","ACCEPT_FRIEND_REQUEST_SUCCESS","ACCEPT_FRIEND_REQUEST_FAILURE","REFUSE_FRIEND_REQUEST","REFUSE_FRIEND_REQUEST_SUCCESS","REFUSE_FRIEND_REQUEST_FAILURE","CANCEL_FRIEND_REQUEST","CANCEL_FRIEND_REQUEST_SUCCESS","CANCEL_FRIEND_REQUEST_FAILURE","loadTags","addTag","addTagInFront","removeTag","removeTagInFront","getRecommend","friendRequest","requestFriendsList","receiveMessage","requestMessagesList","acceptFriendRequest","refuseFriendRequest","friendRequestAccepted","friendRequestRefused","addMessageWhenFriendRequest","cancelFriendRequest","someoneLogin","someoneLogout","loadFriendsListSaga","loadTagsSaga","addTagSaga","removeTagSaga","getRecommendSaga","friendRequestSaga","requestFriendsListSaga","requestMessagesListSaga","acceptFriendRequestSaga","refuseFriendRequestSaga","friendsSaga","initialState","friendsList","tagList","error","recommendList","friendRequestList","messagesList","state","payload","tags","tag","split","filter","el","join","list","data","result","map","info","JSON","parse","type","time","CREATED_AT","slice","message","SENDER_INFO","uid","console","log","receiver","friend","status","sort","a","b"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,iBAAP,IACEC,wBADF,QAEO,0BAFP;AAGA,OAAO,KAAKC,UAAZ,MAA4B,oBAA5B;AAEA,MAAMC,mBAAmB,GAAG,6BAA5B;AACA,MAAMC,gBAAgB,GAAG,0BAAzB;AACA,MAAMC,eAAe,GAAG,wBAAxB;AACA,MAAMC,uBAAuB,GAAG,iCAAhC;AACA,MAAMC,sBAAsB,GAAG,gCAA/B;AACA,MAAMC,aAAa,GAAG,uBAAtB;AACA,MAAMC,cAAc,GAAG,wBAAvB;AACA,MAAMC,+BAA+B,GACnC,yCADF;AAEA,MAAM,CACJC,iBADI,EAEJC,yBAFI,EAGJC,yBAHI,IAIFZ,wBAAwB,CAAC,qBAAD,CAJ5B;AAKA,MAAM,CAACa,SAAD,EAAYC,iBAAZ,EAA+BC,iBAA/B,IACJf,wBAAwB,CAAC,kBAAD,CAD1B;AAEA,MAAM,CAACgB,OAAD,EAAUC,eAAV,EAA2BC,eAA3B,IACJlB,wBAAwB,CAAC,iBAAD,CAD1B;AAEA,MAAM,CAACmB,UAAD,EAAaC,kBAAb,EAAiCC,kBAAjC,IACJrB,wBAAwB,CAAC,oBAAD,CAD1B;AAEA,MAAM,CAACsB,aAAD,EAAgBC,qBAAhB,EAAuCC,qBAAvC,IACJxB,wBAAwB,CAAC,uBAAD,CAD1B;AAEA,MAAM,CAACyB,cAAD,EAAiBC,sBAAjB,EAAyCC,sBAAzC,IACJ3B,wBAAwB,CAAC,wBAAD,CAD1B;AAEA,MAAM,CACJ4B,oBADI,EAEJC,4BAFI,EAGJC,4BAHI,IAIF9B,wBAAwB,CAAC,8BAAD,CAJ5B;AAKA,MAAM,CACJ+B,qBADI,EAEJC,6BAFI,EAGJC,6BAHI,IAIFjC,wBAAwB,CAAC,+BAAD,CAJ5B;AAKA,MAAM,CACJkC,qBADI,EAEJC,6BAFI,EAGJC,6BAHI,IAIFpC,wBAAwB,CAAC,+BAAD,CAJ5B;AAMA,MAAM,CACJqC,qBADI,EAEJC,6BAFI,EAGJC,6BAHI,IAIFvC,wBAAwB,CAAC,8BAAD,CAJ5B;AAMA,MAAM,CACJwC,qBADI,EAEJC,6BAFI,EAGJC,6BAHI,IAIF1C,wBAAwB,CAAC,8BAAD,CAJ5B;AAMA,OAAO,MAAM2C,QAAQ,GAAG/C,YAAY,CAACiB,SAAD,CAA7B;AACP,OAAO,MAAM+B,MAAM,GAAGhD,YAAY,CAACoB,OAAD,CAA3B;AACP,OAAO,MAAM6B,aAAa,GAAGjD,YAAY,CAACO,gBAAD,CAAlC;AACP,OAAO,MAAM2C,SAAS,GAAGlD,YAAY,CAACuB,UAAD,CAA9B;AACP,OAAO,MAAM4B,gBAAgB,GAAGnD,YAAY,CAACM,mBAAD,CAArC;AACP,OAAO,MAAM8C,YAAY,GAAGpD,YAAY,CAAC0B,aAAD,CAAjC;AACP,OAAO,MAAM2B,aAAa,GAAGrD,YAAY,CAAC6B,cAAD,CAAlC;AACP,OAAO,MAAMyB,kBAAkB,GAAGtD,YAAY,CAACgC,oBAAD,CAAvC;AACP,OAAO,MAAMuB,cAAc,GAAGvD,YAAY,CAACQ,eAAD,CAAnC;AACP,OAAO,MAAMgD,mBAAmB,GAAGxD,YAAY,CAACmC,qBAAD,CAAxC;AACP,OAAO,MAAMsB,mBAAmB,GAAGzD,YAAY,CAACsC,qBAAD,CAAxC;AACP,OAAO,MAAMoB,mBAAmB,GAAG1D,YAAY,CAACyC,qBAAD,CAAxC;AACP,OAAO,MAAMkB,qBAAqB,GAAG3D,YAAY,CAACS,uBAAD,CAA1C;AACP,OAAO,MAAMmD,oBAAoB,GAAG5D,YAAY,CAACU,sBAAD,CAAzC;AACP,OAAO,MAAMmD,2BAA2B,GAAG7D,YAAY,CACrDa,+BADqD,CAAhD;AAGP,OAAO,MAAMiD,mBAAmB,GAAG9D,YAAY,CAAC4C,qBAAD,CAAxC;AACP,OAAO,MAAMmB,YAAY,GAAG/D,YAAY,CAACW,aAAD,CAAjC;AACP,OAAO,MAAMqD,aAAa,GAAGhE,YAAY,CAACY,cAAD,CAAlC;AAEP,MAAMqD,mBAAmB,GAAG9D,iBAAiB,CAACW,iBAAD,CAA7C;AACA,MAAMoD,YAAY,GAAG/D,iBAAiB,CAACc,SAAD,EAAYZ,UAAU,CAAC0C,QAAvB,CAAtC;AACA,MAAMoB,UAAU,GAAGhE,iBAAiB,CAACiB,OAAD,EAAUf,UAAU,CAAC2C,MAArB,CAApC;AACA,MAAMoB,aAAa,GAAGjE,iBAAiB,CAACoB,UAAD,EAAalB,UAAU,CAAC6C,SAAxB,CAAvC;AACA,MAAMmB,gBAAgB,GAAGlE,iBAAiB,CACxCuB,aADwC,EAExCrB,UAAU,CAAC+C,YAF6B,CAA1C;AAIA,MAAMkB,iBAAiB,GAAGnE,iBAAiB,CACzC0B,cADyC,EAEzCxB,UAAU,CAACgD,aAF8B,CAA3C;AAIA,MAAMkB,sBAAsB,GAAGpE,iBAAiB,CAC9C6B,oBAD8C,EAE9C3B,UAAU,CAACiD,kBAFmC,CAAhD;AAIA,MAAMkB,uBAAuB,GAAGrE,iBAAiB,CAC/CgC,qBAD+C,EAE/C9B,UAAU,CAACmD,mBAFoC,CAAjD;AAIA,MAAMiB,uBAAuB,GAAGtE,iBAAiB,CAC/CmC,qBAD+C,EAE/CjC,UAAU,CAACoD,mBAFoC,CAAjD;AAIA,MAAMiB,uBAAuB,GAAGvE,iBAAiB,CAC/CsC,qBAD+C,EAE/CpC,UAAU,CAACqD,mBAFoC,CAAjD;AAKA,OAAO,UAAUiB,WAAV,GAAwB;AAC7B,QAAMzE,UAAU,CAACY,iBAAD,EAAoBmD,mBAApB,CAAhB;AACA,QAAM/D,UAAU,CAACe,SAAD,EAAYiD,YAAZ,CAAhB;AACA,QAAMhE,UAAU,CAACkB,OAAD,EAAU+C,UAAV,CAAhB;AACA,QAAMjE,UAAU,CAACqB,UAAD,EAAa6C,aAAb,CAAhB;AACA,QAAMlE,UAAU,CAACwB,aAAD,EAAgB2C,gBAAhB,CAAhB;AACA,QAAMnE,UAAU,CAAC2B,cAAD,EAAiByC,iBAAjB,CAAhB;AACA,QAAMpE,UAAU,CAAC8B,oBAAD,EAAuBuC,sBAAvB,CAAhB;AACA,QAAMrE,UAAU,CAACiC,qBAAD,EAAwBqC,uBAAxB,CAAhB;AACA,QAAMtE,UAAU,CAACoC,qBAAD,EAAwBmC,uBAAxB,CAAhB;AACA,QAAMvE,UAAU,CAACuC,qBAAD,EAAwBiC,uBAAxB,CAAhB;AACD;AAED,MAAME,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,EADM;AAEnBC,EAAAA,OAAO,EAAE,EAFU;AAGnBC,EAAAA,KAAK,EAAE,IAHY;AAInBC,EAAAA,aAAa,EAAE,EAJI;AAKnBC,EAAAA,iBAAiB,EAAE,EALA;AAMnBC,EAAAA,YAAY,EAAE;AANK,CAArB;AASA,eAAejF,aAAa,CAC1B;AACE,GAACiB,iBAAD,GAAqB,CAACiE,KAAD;AAAA,QAAQ;AAAEC,MAAAA,OAAO,EAAEC;AAAX,KAAR;AAAA,WAA+B,EAClD,GAAGF,KAD+C;AAElDL,MAAAA,OAAO,EAAEO;AAFyC,KAA/B;AAAA,GADvB;AAKE,GAAClE,iBAAD,GAAqB,CAACgE,KAAD;AAAA,QAAQ;AAAEC,MAAAA,OAAO,EAAEL;AAAX,KAAR;AAAA,WAAgC,EACnD,GAAGI,KADgD;AAEnDJ,MAAAA;AAFmD,KAAhC;AAAA,GALvB;AASE,GAAChE,yBAAD,GAA6B,CAACoE,KAAD;AAAA,QAAQ;AAAEC,MAAAA,OAAO,EAAEP;AAAX,KAAR;AAAA,WAAsC,EACjE,GAAGM,KAD8D;AAEjEN,MAAAA,WAAW,EAAE,CAAC,GAAGA,WAAJ;AAFoD,KAAtC;AAAA,GAT/B;AAaE,GAAC7D,yBAAD,GAA6B,CAACmE,KAAD;AAAA,QAAQ;AAAEC,MAAAA,OAAO,EAAEL;AAAX,KAAR;AAAA,WAAgC,EAC3D,GAAGI,KADwD;AAE3DJ,MAAAA;AAF2D,KAAhC;AAAA,GAb/B;AAiBE,GAAC1D,eAAD,GAAoB8D,KAAD,KAAY,EAC7B,GAAGA;AAD0B,GAAZ,CAjBrB;AAoBE,GAAC7D,eAAD,GAAmB,CAAC6D,KAAD;AAAA,QAAQ;AAAEC,MAAAA,OAAO,EAAEL;AAAX,KAAR;AAAA,WAAgC,EACjD,GAAGI,KAD8C;AAEjDJ,MAAAA;AAFiD,KAAhC;AAAA,GApBrB;AAwBE,GAACxE,gBAAD,GAAoB,CAAC4E,KAAD;AAAA,QAAQ;AAAEC,MAAAA,OAAO,EAAEE;AAAX,KAAR;AAAA,WAA8B,EAChD,GAAGH,KAD6C;AAEhDL,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,GAAhB,GAAsBQ;AAFiB,KAA9B;AAAA,GAxBtB;AA4BE,GAAC9D,kBAAD,GAAuB2D,KAAD,KAAY,EAChC,GAAGA;AAD6B,GAAZ,CA5BxB;AA+BE,GAAC1D,kBAAD,GAAsB,CAAC0D,KAAD;AAAA,QAAQ;AAAEC,MAAAA,OAAO,EAAEL;AAAX,KAAR;AAAA,WAAgC,EACpD,GAAGI,KADiD;AAEpDJ,MAAAA;AAFoD,KAAhC;AAAA,GA/BxB;AAmCE,GAACzE,mBAAD,GAAuB,CAAC6E,KAAD;AAAA,QAAQ;AAAEC,MAAAA,OAAO,EAAEE;AAAX,KAAR;AAAA,WAA8B,EACnD,GAAGH,KADgD;AAEnDL,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,CACNS,KADM,CACA,GADA,EAENC,MAFM,CAEEC,EAAD,IAAQA,EAAE,KAAKH,GAFhB,EAGNI,IAHM,CAGD,GAHC;AAF0C,KAA9B;AAAA,GAnCzB;AA0CE,GAAC/D,qBAAD,GAAyB,CAACwD,KAAD;AAAA,QAAQ;AAAEC,MAAAA,OAAO,EAAEO;AAAX,KAAR;AAAA,WAA+B,EACtD,GAAGR,KADmD;AAEtDH,MAAAA,aAAa,EAAE,CAAC,GAAGW,IAAJ;AAFuC,KAA/B;AAAA,GA1C3B;AA8CE,GAAC/D,qBAAD,GAAyB,CAACuD,KAAD;AAAA,QAAQ;AAAEC,MAAAA,OAAO,EAAEL;AAAX,KAAR;AAAA,WAAgC,EACvD,GAAGI,KADoD;AAEvDJ,MAAAA;AAFuD,KAAhC;AAAA,GA9C3B;AAkDE,GAACjD,sBAAD,GAA0B,CAACqD,KAAD;AAAA,QAAQ;AAAEC,MAAAA,OAAO,EAAEO;AAAX,KAAR;AAAA,WAA+B,EACvD,GAAGR,KADoD;AAEvDF,MAAAA,iBAAiB,EAAE,CAAC,GAAGU,IAAJ;AAFoC,KAA/B;AAAA,GAlD5B;AAsDE,GAAC5D,sBAAD,GAA0B,CAACoD,KAAD;AAAA,QAAQ;AAAEC,MAAAA,OAAO,EAAEL;AAAX,KAAR;AAAA,WAAgC,EACxD,GAAGI,KADqD;AAExDJ,MAAAA;AAFwD,KAAhC;AAAA,GAtD5B;AA0DE,GAAC9C,4BAAD,GAAgC,CAACkD,KAAD;AAAA,QAAQ;AAAEC,MAAAA,OAAO,EAAEP;AAAX,KAAR;AAAA,WAAsC,EACpE,GAAGM,KADiE;AAEpEN,MAAAA;AAFoE,KAAtC;AAAA,GA1DlC;AA8DE,GAAC3C,4BAAD,GAAgC,CAACiD,KAAD;AAAA,QAAQ;AAAEC,MAAAA,OAAO,EAAEL;AAAX,KAAR;AAAA,WAAgC,EAC9D,GAAGI,KAD2D;AAE9DJ,MAAAA;AAF8D,KAAhC;AAAA,GA9DlC;AAkEE,GAACvE,eAAD,GAAmB,CAAC2E,KAAD;AAAA,QAAQ;AAAEC,MAAAA,OAAO,EAAEQ;AAAX,KAAR;AAAA,WAA+B,EAChD,GAAGT,KAD6C;AAEhDD,MAAAA,YAAY,EAAE,CAAC,GAAGC,KAAK,CAACD,YAAV,EAAwB,EAAE,GAAGU;AAAL,OAAxB;AAFkC,KAA/B;AAAA,GAlErB;AAsEE,GAACxD,6BAAD,GAAiC,CAAC+C,KAAD,aAAsC;AAAA,QAA9B;AAAEC,MAAAA,OAAO,EAAEF;AAAX,KAA8B;AACrE,UAAMW,MAAM,GAAGX,YAAY,CAACY,GAAb,CAAkBL,EAAD,IAAQ;AACtC,YAAMM,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWR,EAAE,CAACM,IAAd,CAAb;AACAA,MAAAA,IAAI,CAACG,IAAL,GAAYT,EAAE,CAACS,IAAf;AACAH,MAAAA,IAAI,CAACI,IAAL,GAAYV,EAAE,CAACW,UAAH,CAAcC,KAAd,CAAoB,CAApB,EAAuB,EAAvB,EAA2Bd,KAA3B,CAAiC,GAAjC,EAAsCG,IAAtC,CAA2C,GAA3C,CAAZ;AACA,aAAOK,IAAP;AACD,KALc,CAAf;AAMA,WAAO,EACL,GAAGZ,KADE;AAELD,MAAAA,YAAY,EAAE,CAAC,GAAGW,MAAJ;AAFT,KAAP;AAID,GAjFH;AAkFE,GAACxD,6BAAD,GAAiC,CAAC8C,KAAD;AAAA,QAAQ;AAAEC,MAAAA,OAAO,EAAEL;AAAX,KAAR;AAAA,WAAgC,EAC/D,GAAGI,KAD4D;AAE/DJ,MAAAA;AAF+D,KAAhC;AAAA,GAlFnC;AAsFE,GAACxC,6BAAD,GAAiC,CAC/B4C,KAD+B;AAAA,QAE/B;AAAEC,MAAAA,OAAO,EAAE;AAAEP,QAAAA,WAAF;AAAeK,QAAAA;AAAf;AAAX,KAF+B;AAAA,WAG3B,EACJ,GAAGC,KADC;AAEJD,MAAAA,YAAY,EAAE,CACZ,GAAGA,YAAY,CAACY,GAAb,CAAkBQ,OAAD,IAAaN,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACC,WAAnB,CAA9B,CADS,CAFV;AAKJ1B,MAAAA,WAAW,EAAE,CAAC,GAAGA,WAAJ;AALT,KAH2B;AAAA,GAtFnC;AAgGE,GAACrC,6BAAD,GAAiC,CAAC2C,KAAD;AAAA,QAAQ;AAAEC,MAAAA,OAAO,EAAEL;AAAX,KAAR;AAAA,WAAgC,EAC/D,GAAGI,KAD4D;AAE/DJ,MAAAA;AAF+D,KAAhC;AAAA,GAhGnC;AAoGE,GAACrC,6BAAD,GAAiC,CAACyC,KAAD,aAAsC;AAAA,QAA9B;AAAEC,MAAAA,OAAO,EAAEF;AAAX,KAA8B;AACrE,UAAMW,MAAM,GAAGX,YAAY,CAACY,GAAb,CAAkBQ,OAAD,IAAa;AAC3CA,MAAAA,OAAO,CAACP,IAAR,GAAeC,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACP,IAAnB,CAAf;AACAO,MAAAA,OAAO,CAACP,IAAR,CAAaI,IAAb,GAAoBG,OAAO,CAACF,UAAR,CAAmBC,KAAnB,CAAyB,CAAzB,EAA4B,EAA5B,EACjBd,KADiB,CACX,GADW,EAEjBG,IAFiB,CAEZ,GAFY,CAApB;AAGAY,MAAAA,OAAO,CAACP,IAAR,CAAaG,IAAb,GAAoBI,OAAO,CAACJ,IAA5B;AACA,aAAOI,OAAO,CAACP,IAAf;AACD,KAPc,CAAf;AAQA,WAAO,EACL,GAAGZ,KADE;AAELD,MAAAA,YAAY,EAAE,CAAC,GAAGW,MAAJ;AAFT,KAAP;AAID,GAjHH;AAkHE,GAAClD,6BAAD,GAAiC,CAACwC,KAAD;AAAA,QAAQ;AAAEC,MAAAA,OAAO,EAAEL;AAAX,KAAR;AAAA,WAAgC,EAC/D,GAAGI,KAD4D;AAE/DJ,MAAAA;AAF+D,KAAhC;AAAA,GAlHnC;AAsHE,GAACtE,uBAAD,GAA2B,CAAC0E,KAAD;AAAA,QAAQ;AAAEC,MAAAA,OAAO,EAAEW;AAAX,KAAR;AAAA,WAA+B,EACxD,GAAGZ,KADqD;AAExDN,MAAAA,WAAW,EAAE,CAAC,GAAGM,KAAK,CAACN,WAAV,EAAuBkB,IAAvB;AAF2C,KAA/B;AAAA,GAtH7B;AA0HE,GAACrF,sBAAD,GAA0B,CAACyE,KAAD,aAA6B;AAAA,QAArB;AAAEC,MAAAA,OAAO,EAAEoB;AAAX,KAAqB;AACrDC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAO,EACL,GAAGrB,KADE;AAELD,MAAAA,YAAY,EAAEC,KAAK,CAACD,YAAN,CAAmBM,MAAnB,CAA2BC,EAAD,IAAQA,EAAE,CAACe,GAAH,KAAWA,GAA7C;AAFT,KAAP;AAID,GAhIH;AAiIE,GAAC3F,+BAAD,GAAmC,CAACsE,KAAD;AAAA,QAAQ;AAAEC,MAAAA,OAAO,EAAEuB;AAAX,KAAR;AAAA,WAAmC,EACpE,GAAGxB,KADiE;AAEpED,MAAAA,YAAY,EAAE,CAAC,EAAE,GAAGyB;AAAL,OAAD,EAAkB,GAAGxB,KAAK,CAACD,YAA3B;AAFsD,KAAnC;AAAA,GAjIrC;AAqIE,GAACrC,6BAAD,GAAiC,CAACsC,KAAD,aAAsC;AAAA,QAA9B;AAAEC,MAAAA,OAAO,EAAEF;AAAX,KAA8B;AACrE,UAAMW,MAAM,GAAGX,YAAY,CAACY,GAAb,CAAkBL,EAAD,IAAQ;AACtC,YAAMM,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWR,EAAE,CAACM,IAAd,CAAb;AACAA,MAAAA,IAAI,CAACG,IAAL,GAAYT,EAAE,CAACS,IAAf;AACAH,MAAAA,IAAI,CAACI,IAAL,GAAYV,EAAE,CAACW,UAAH,CAAcC,KAAd,CAAoB,CAApB,EAAuB,EAAvB,EAA2Bd,KAA3B,CAAiC,GAAjC,EAAsCG,IAAtC,CAA2C,GAA3C,CAAZ;AACA,aAAOK,IAAP;AACD,KALc,CAAf;AAMA,WAAO,EACL,GAAGZ,KADE;AAELD,MAAAA,YAAY,EAAE,CAAC,GAAGW,MAAJ;AAFT,KAAP;AAID,GAhJH;AAiJE,GAAC/C,6BAAD,GAAiC,CAACqC,KAAD;AAAA,QAAQ;AAAEC,MAAAA,OAAO,EAAEL;AAAX,KAAR;AAAA,WAAgC,EAC/D,GAAGI,KAD4D;AAE/DJ,MAAAA;AAF+D,KAAhC;AAAA,GAjJnC;AAqJE,GAACpE,aAAD,GAAiB,CAACwE,KAAD;AAAA,QAAQ;AAAEC,MAAAA,OAAO,EAAEoB;AAAX,KAAR;AAAA,WAA8B,EAC7C,GAAGrB,KAD0C;AAE7CN,MAAAA,WAAW,EAAEM,KAAK,CAACN,WAAN,CACViB,GADU,CACLc,MAAD,IACHA,MAAM,CAACJ,GAAP,KAAeA,GAAf,GAAqB,EAAE,GAAGI,MAAL;AAAaC,QAAAA,MAAM,EAAE;AAArB,OAArB,GAAmD,EAAE,GAAGD;AAAL,OAF1C,EAIVE,IAJU,CAIL,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACd,YAAID,CAAC,CAACF,MAAF,IAAY,CAACG,CAAC,CAACH,MAAnB,EAA2B,OAAO,CAAC,CAAR,CAA3B,KACK,IAAI,CAACE,CAAC,CAACF,MAAH,IAAaG,CAAC,CAACH,MAAnB,EAA2B,OAAO,CAAP,CAA3B,KACA,OAAOE,CAAC,CAACP,GAAF,GAAQQ,CAAC,CAACR,GAAjB;AACN,OARU;AAFgC,KAA9B;AAAA,GArJnB;AAiKE,GAAC5F,cAAD,GAAkB,CAACuE,KAAD;AAAA,QAAQ;AAAEC,MAAAA,OAAO,EAAEoB;AAAX,KAAR;AAAA,WAA8B,EAC9C,GAAGrB,KAD2C;AAE9CN,MAAAA,WAAW,EAAEM,KAAK,CAACN,WAAN,CAAkBiB,GAAlB,CAAuBc,MAAD,IACjCA,MAAM,CAACJ,GAAP,KAAeA,GAAf,GAAqB,EAAE,GAAGI,MAAL;AAAaC,QAAAA,MAAM,EAAE;AAArB,OAArB,GAAoD,EAAE,GAAGD;AAAL,OADzC;AAFiC,KAA9B;AAAA;AAjKpB,CAD0B,EAyK1BhC,YAzK0B,CAA5B","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\r\nimport { takeLatest } from 'redux-saga/effects';\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from '../lib/createRequestSaga';\r\nimport * as friendsAPI from '../lib/api/friends';\r\n\r\nconst REMOVE_TAG_IN_FRONT = 'friends/REMOVE_TAG_IN_FRONT';\r\nconst ADD_TAG_IN_FRONT = 'friends/ADD_TAG_IN_FRONT';\r\nconst RECEIVE_MESSAGE = 'frends/RECEIVE_MESSAGE';\r\nconst FRIEND_REQUEST_ACCEPTED = 'friends/FRIEND_REQUEST_ACCEPTED';\r\nconst FRIEND_REQUEST_REFUSED = 'friends/FRIEND_REQUEST_REFUSED';\r\nconst SOMEONE_LOGIN = 'friends/SOMEONE_LOGIN';\r\nconst SOMEONE_LOGOUT = 'friends/SOMEONE_LOGOUT';\r\nconst ADD_MESSAGE_WHEN_FRIEND_REQUEST =\r\n  'friends/ADD_MESSAGE_WHEN_FRIEND_REQUEST';\r\nconst [\r\n  LOAD_FRIENDS_LIST,\r\n  LOAD_FRIENDS_LIST_SUCCESS,\r\n  LOAD_FRIENDS_LIST_FAILURE,\r\n] = createRequestActionTypes('friends/SET_FRIENDS');\r\nconst [LOAD_TAGS, LOAD_TAGS_SUCCESS, LOAD_TAGS_FAILURE] =\r\n  createRequestActionTypes('friends/SET_TAGS');\r\nconst [ADD_TAG, ADD_TAG_SUCCESS, ADD_TAG_FAILURE] =\r\n  createRequestActionTypes('friends/ADD_TAG');\r\nconst [REMOVE_TAG, REMOVE_TAG_SUCCESS, REMOVE_TAG_FAILURE] =\r\n  createRequestActionTypes('frineds/REMOVE_TAG');\r\nconst [GET_RECOMMEND, GET_RECOMMEND_SUCCESS, GET_RECOMMEND_FAILURE] =\r\n  createRequestActionTypes('friends/GET_RECOMMEND');\r\nconst [FRIEND_REQUEST, FRIEND_REQUEST_SUCCESS, FRIEND_REQUEST_FAILURE] =\r\n  createRequestActionTypes('friends/FRIEND_REQUEST');\r\nconst [\r\n  REQUEST_FRIENDS_LIST,\r\n  REQUEST_FRIENDS_LIST_SUCCESS,\r\n  REQUEST_FRIENDS_LIST_FAILURE,\r\n] = createRequestActionTypes('friends/REQUEST_FRIENDS_LIST');\r\nconst [\r\n  REQUEST_MESSAGES_LIST,\r\n  REQUEST_MESSAGES_LIST_SUCCESS,\r\n  REQUEST_MESSAGES_LIST_FAILURE,\r\n] = createRequestActionTypes('friends/REQUEST_MESSAGES_LIST');\r\nconst [\r\n  ACCEPT_FRIEND_REQUEST,\r\n  ACCEPT_FRIEND_REQUEST_SUCCESS,\r\n  ACCEPT_FRIEND_REQUEST_FAILURE,\r\n] = createRequestActionTypes('friends/ACCEPT_FRIEND_REQUEST');\r\n\r\nconst [\r\n  REFUSE_FRIEND_REQUEST,\r\n  REFUSE_FRIEND_REQUEST_SUCCESS,\r\n  REFUSE_FRIEND_REQUEST_FAILURE,\r\n] = createRequestActionTypes('friend/REFUSE_FRIEND_REQUEST');\r\n\r\nconst [\r\n  CANCEL_FRIEND_REQUEST,\r\n  CANCEL_FRIEND_REQUEST_SUCCESS,\r\n  CANCEL_FRIEND_REQUEST_FAILURE,\r\n] = createRequestActionTypes('friend/CANCEL_FRIEND_REQUEST');\r\n\r\nexport const loadTags = createAction(LOAD_TAGS);\r\nexport const addTag = createAction(ADD_TAG);\r\nexport const addTagInFront = createAction(ADD_TAG_IN_FRONT);\r\nexport const removeTag = createAction(REMOVE_TAG);\r\nexport const removeTagInFront = createAction(REMOVE_TAG_IN_FRONT);\r\nexport const getRecommend = createAction(GET_RECOMMEND);\r\nexport const friendRequest = createAction(FRIEND_REQUEST);\r\nexport const requestFriendsList = createAction(REQUEST_FRIENDS_LIST);\r\nexport const receiveMessage = createAction(RECEIVE_MESSAGE);\r\nexport const requestMessagesList = createAction(REQUEST_MESSAGES_LIST);\r\nexport const acceptFriendRequest = createAction(ACCEPT_FRIEND_REQUEST);\r\nexport const refuseFriendRequest = createAction(REFUSE_FRIEND_REQUEST);\r\nexport const friendRequestAccepted = createAction(FRIEND_REQUEST_ACCEPTED);\r\nexport const friendRequestRefused = createAction(FRIEND_REQUEST_REFUSED);\r\nexport const addMessageWhenFriendRequest = createAction(\r\n  ADD_MESSAGE_WHEN_FRIEND_REQUEST,\r\n);\r\nexport const cancelFriendRequest = createAction(CANCEL_FRIEND_REQUEST);\r\nexport const someoneLogin = createAction(SOMEONE_LOGIN);\r\nexport const someoneLogout = createAction(SOMEONE_LOGOUT);\r\n\r\nconst loadFriendsListSaga = createRequestSaga(LOAD_FRIENDS_LIST);\r\nconst loadTagsSaga = createRequestSaga(LOAD_TAGS, friendsAPI.loadTags);\r\nconst addTagSaga = createRequestSaga(ADD_TAG, friendsAPI.addTag);\r\nconst removeTagSaga = createRequestSaga(REMOVE_TAG, friendsAPI.removeTag);\r\nconst getRecommendSaga = createRequestSaga(\r\n  GET_RECOMMEND,\r\n  friendsAPI.getRecommend,\r\n);\r\nconst friendRequestSaga = createRequestSaga(\r\n  FRIEND_REQUEST,\r\n  friendsAPI.friendRequest,\r\n);\r\nconst requestFriendsListSaga = createRequestSaga(\r\n  REQUEST_FRIENDS_LIST,\r\n  friendsAPI.requestFriendsList,\r\n);\r\nconst requestMessagesListSaga = createRequestSaga(\r\n  REQUEST_MESSAGES_LIST,\r\n  friendsAPI.requestMessagesList,\r\n);\r\nconst acceptFriendRequestSaga = createRequestSaga(\r\n  ACCEPT_FRIEND_REQUEST,\r\n  friendsAPI.acceptFriendRequest,\r\n);\r\nconst refuseFriendRequestSaga = createRequestSaga(\r\n  REFUSE_FRIEND_REQUEST,\r\n  friendsAPI.refuseFriendRequest,\r\n);\r\n\r\nexport function* friendsSaga() {\r\n  yield takeLatest(LOAD_FRIENDS_LIST, loadFriendsListSaga);\r\n  yield takeLatest(LOAD_TAGS, loadTagsSaga);\r\n  yield takeLatest(ADD_TAG, addTagSaga);\r\n  yield takeLatest(REMOVE_TAG, removeTagSaga);\r\n  yield takeLatest(GET_RECOMMEND, getRecommendSaga);\r\n  yield takeLatest(FRIEND_REQUEST, friendRequestSaga);\r\n  yield takeLatest(REQUEST_FRIENDS_LIST, requestFriendsListSaga);\r\n  yield takeLatest(REQUEST_MESSAGES_LIST, requestMessagesListSaga);\r\n  yield takeLatest(ACCEPT_FRIEND_REQUEST, acceptFriendRequestSaga);\r\n  yield takeLatest(REFUSE_FRIEND_REQUEST, refuseFriendRequestSaga);\r\n}\r\n\r\nconst initialState = {\r\n  friendsList: [],\r\n  tagList: '',\r\n  error: null,\r\n  recommendList: [],\r\n  friendRequestList: [],\r\n  messagesList: [],\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [LOAD_TAGS_SUCCESS]: (state, { payload: tags }) => ({\r\n      ...state,\r\n      tagList: tags,\r\n    }),\r\n    [LOAD_TAGS_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [LOAD_FRIENDS_LIST_SUCCESS]: (state, { payload: friendsList }) => ({\r\n      ...state,\r\n      friendsList: [...friendsList],\r\n    }),\r\n    [LOAD_FRIENDS_LIST_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [ADD_TAG_SUCCESS]: (state) => ({\r\n      ...state,\r\n    }),\r\n    [ADD_TAG_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [ADD_TAG_IN_FRONT]: (state, { payload: tag }) => ({\r\n      ...state,\r\n      tagList: state.tagList + '_' + tag,\r\n    }),\r\n    [REMOVE_TAG_SUCCESS]: (state) => ({\r\n      ...state,\r\n    }),\r\n    [REMOVE_TAG_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [REMOVE_TAG_IN_FRONT]: (state, { payload: tag }) => ({\r\n      ...state,\r\n      tagList: state.tagList\r\n        .split('_')\r\n        .filter((el) => el !== tag)\r\n        .join('_'),\r\n    }),\r\n    [GET_RECOMMEND_SUCCESS]: (state, { payload: list }) => ({\r\n      ...state,\r\n      recommendList: [...list],\r\n    }),\r\n    [GET_RECOMMEND_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [FRIEND_REQUEST_SUCCESS]: (state, { payload: list }) => ({\r\n      ...state,\r\n      friendRequestList: [...list],\r\n    }),\r\n    [FRIEND_REQUEST_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [REQUEST_FRIENDS_LIST_SUCCESS]: (state, { payload: friendsList }) => ({\r\n      ...state,\r\n      friendsList,\r\n    }),\r\n    [REQUEST_FRIENDS_LIST_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [RECEIVE_MESSAGE]: (state, { payload: data }) => ({\r\n      ...state,\r\n      messagesList: [...state.messagesList, { ...data }],\r\n    }),\r\n    [REQUEST_MESSAGES_LIST_SUCCESS]: (state, { payload: messagesList }) => {\r\n      const result = messagesList.map((el) => {\r\n        const info = JSON.parse(el.info);\r\n        info.type = el.type;\r\n        info.time = el.CREATED_AT.slice(2, 10).split('-').join('.');\r\n        return info;\r\n      });\r\n      return {\r\n        ...state,\r\n        messagesList: [...result],\r\n      };\r\n    },\r\n    [REQUEST_MESSAGES_LIST_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [ACCEPT_FRIEND_REQUEST_SUCCESS]: (\r\n      state,\r\n      { payload: { friendsList, messagesList } },\r\n    ) => ({\r\n      ...state,\r\n      messagesList: [\r\n        ...messagesList.map((message) => JSON.parse(message.SENDER_INFO)),\r\n      ],\r\n      friendsList: [...friendsList],\r\n    }),\r\n    [ACCEPT_FRIEND_REQUEST_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [REFUSE_FRIEND_REQUEST_SUCCESS]: (state, { payload: messagesList }) => {\r\n      const result = messagesList.map((message) => {\r\n        message.info = JSON.parse(message.info);\r\n        message.info.time = message.CREATED_AT.slice(0, 10)\r\n          .split('-')\r\n          .join('.');\r\n        message.info.type = message.type;\r\n        return message.info;\r\n      });\r\n      return {\r\n        ...state,\r\n        messagesList: [...result],\r\n      };\r\n    },\r\n    [REFUSE_FRIEND_REQUEST_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [FRIEND_REQUEST_ACCEPTED]: (state, { payload: info }) => ({\r\n      ...state,\r\n      friendsList: [...state.friendsList, info],\r\n    }),\r\n    [FRIEND_REQUEST_REFUSED]: (state, { payload: uid }) => {\r\n      console.log(uid);\r\n      return {\r\n        ...state,\r\n        messagesList: state.messagesList.filter((el) => el.uid !== uid),\r\n      };\r\n    },\r\n    [ADD_MESSAGE_WHEN_FRIEND_REQUEST]: (state, { payload: receiver }) => ({\r\n      ...state,\r\n      messagesList: [{ ...receiver }, ...state.messagesList],\r\n    }),\r\n    [CANCEL_FRIEND_REQUEST_SUCCESS]: (state, { payload: messagesList }) => {\r\n      const result = messagesList.map((el) => {\r\n        const info = JSON.parse(el.info);\r\n        info.type = el.type;\r\n        info.time = el.CREATED_AT.slice(2, 10).split('-').join('.');\r\n        return info;\r\n      });\r\n      return {\r\n        ...state,\r\n        messagesList: [...result],\r\n      };\r\n    },\r\n    [CANCEL_FRIEND_REQUEST_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [SOMEONE_LOGIN]: (state, { payload: uid }) => ({\r\n      ...state,\r\n      friendsList: state.friendsList\r\n        .map((friend) =>\r\n          friend.uid === uid ? { ...friend, status: true } : { ...friend },\r\n        )\r\n        .sort((a, b) => {\r\n          if (a.status && !b.status) return -1;\r\n          else if (!a.status && b.status) return 1;\r\n          else return a.uid - b.uid;\r\n        }),\r\n    }),\r\n    [SOMEONE_LOGOUT]: (state, { payload: uid }) => ({\r\n      ...state,\r\n      friendsList: state.friendsList.map((friend) =>\r\n        friend.uid === uid ? { ...friend, status: false } : { ...friend },\r\n      ),\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n"]},"metadata":{},"sourceType":"module"}