{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport { takeLatest } from 'redux-saga/effects';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nimport * as friendsAPI from '../lib/api/friends';\nconst REMOVE_TAG_IN_FRONT = 'friends/REMOVE_TAG_IN_FRONT';\nconst ADD_TAG_IN_FRONT = 'friends/ADD_TAG_IN_FRONT';\nconst RECEIVE_MESSAGE = 'frends/RECEIVE_MESSAGE';\nconst [LOAD_FRIENDS_LIST, LOAD_FRIENDS_LIST_SUCCESS, LOAD_FRIENDS_LIST_FAILURE] = createRequestActionTypes('friends/SET_FRIENDS');\nconst [LOAD_TAGS, LOAD_TAGS_SUCCESS, LOAD_TAGS_FAILURE] = createRequestActionTypes('friends/SET_TAGS');\nconst [ADD_TAG, ADD_TAG_SUCCESS, ADD_TAG_FAILURE] = createRequestActionTypes('friends/ADD_TAG');\nconst [REMOVE_TAG, REMOVE_TAG_SUCCESS, REMOVE_TAG_FAILURE] = createRequestActionTypes('frineds/REMOVE_TAG');\nconst [GET_RECOMMEND, GET_RECOMMEND_SUCCESS, GET_RECOMMEND_FAILURE] = createRequestActionTypes('friends/GET_RECOMMEND');\nconst [FRIEND_REQUEST, FRIEND_REQUEST_SUCCESS, FRIEND_REQUEST_FAILURE] = createRequestActionTypes('friends/FRIEND_REQUEST');\nconst [REQUEST_FRIENDS_LIST, REQUEST_FRIENDS_LIST_SUCCESS, REQUEST_FRIENDS_LIST_FAILURE] = createRequestActionTypes('friends/REQUEST_FRIENDS_LIST');\nconst [REQUEST_MESSAGES_LIST, REQUEST_MESSAGES_LIST_SUCCESS, REQUEST_MESSAGES_LIST_FAILURE] = createRequestActionTypes('friends/REQUEST_MESSAGES_LIST');\nexport const loadTags = createAction(LOAD_TAGS);\nexport const addTag = createAction(ADD_TAG);\nexport const addTagInFront = createAction(ADD_TAG_IN_FRONT);\nexport const removeTag = createAction(REMOVE_TAG);\nexport const removeTagInFront = createAction(REMOVE_TAG_IN_FRONT);\nexport const getRecommend = createAction(GET_RECOMMEND);\nexport const friendRequest = createAction(FRIEND_REQUEST);\nexport const requestFriendsList = createAction(REQUEST_FRIENDS_LIST);\nexport const receiveMessage = createAction(RECEIVE_MESSAGE);\nexport const requestMessagesList = createAction(REQUEST_MESSAGES_LIST);\nconst loadFriendsListSaga = createRequestSaga(LOAD_FRIENDS_LIST);\nconst loadTagsSaga = createRequestSaga(LOAD_TAGS, friendsAPI.loadTags);\nconst addTagSaga = createRequestSaga(ADD_TAG, friendsAPI.addTag);\nconst removeTagSaga = createRequestSaga(REMOVE_TAG, friendsAPI.removeTag);\nconst getRecommendSaga = createRequestSaga(GET_RECOMMEND, friendsAPI.getRecommend);\nconst friendRequestSaga = createRequestSaga(FRIEND_REQUEST, friendsAPI.friendRequest);\nconst requestFriendsListSaga = createRequestSaga(REQUEST_FRIENDS_LIST, friendsAPI.requestFriendsList);\nconst requestMessagesListSaga = createRequestSaga(REQUEST_MESSAGES_LIST, friendsAPI.requestMessagesList);\nexport function* friendsSaga() {\n  yield takeLatest(LOAD_FRIENDS_LIST, loadFriendsListSaga);\n  yield takeLatest(LOAD_TAGS, loadTagsSaga);\n  yield takeLatest(ADD_TAG, addTagSaga);\n  yield takeLatest(REMOVE_TAG, removeTagSaga);\n  yield takeLatest(GET_RECOMMEND, getRecommendSaga);\n  yield takeLatest(FRIEND_REQUEST, friendRequestSaga);\n  yield takeLatest(REQUEST_FRIENDS_LIST, requestFriendsListSaga);\n  yield takeLatest(REQUEST_MESSAGES_LIST, requestMessagesListSaga);\n}\nconst initialState = {\n  friendsList: [],\n  tagList: '',\n  error: null,\n  recommendList: [],\n  friendRequestList: [],\n  messagesList: []\n};\nexport default handleActions({\n  [LOAD_TAGS_SUCCESS]: (state, _ref) => {\n    let {\n      payload: tags\n    } = _ref;\n    return { ...state,\n      tagList: tags\n    };\n  },\n  [LOAD_TAGS_FAILURE]: (state, _ref2) => {\n    let {\n      payload: error\n    } = _ref2;\n    return { ...state,\n      error\n    };\n  },\n  [LOAD_FRIENDS_LIST_SUCCESS]: (state, _ref3) => {\n    let {\n      payload: friendsList\n    } = _ref3;\n    return { ...state,\n      friendsList: [...friendsList]\n    };\n  },\n  [LOAD_FRIENDS_LIST_FAILURE]: (state, _ref4) => {\n    let {\n      payload: error\n    } = _ref4;\n    return { ...state,\n      error\n    };\n  },\n  [ADD_TAG_SUCCESS]: state => ({ ...state\n  }),\n  [ADD_TAG_FAILURE]: (state, _ref5) => {\n    let {\n      payload: error\n    } = _ref5;\n    return { ...state,\n      error\n    };\n  },\n  [ADD_TAG_IN_FRONT]: (state, _ref6) => {\n    let {\n      payload: tag\n    } = _ref6;\n    console.log(tag);\n    return { ...state,\n      tagList: state.tagList + '_' + tag\n    };\n  },\n  [REMOVE_TAG_SUCCESS]: state => ({ ...state\n  }),\n  [REMOVE_TAG_FAILURE]: (state, _ref7) => {\n    let {\n      payload: error\n    } = _ref7;\n    return { ...state,\n      error\n    };\n  },\n  [REMOVE_TAG_IN_FRONT]: (state, _ref8) => {\n    let {\n      payload: tag\n    } = _ref8;\n    console.log(tag);\n    return { ...state,\n      tagList: state.tagList.split('_').filter(el => el !== tag).join('_')\n    };\n  },\n  [GET_RECOMMEND_SUCCESS]: (state, _ref9) => {\n    let {\n      payload: list\n    } = _ref9;\n    return { ...state,\n      recommendList: [...list]\n    };\n  },\n  [GET_RECOMMEND_FAILURE]: (state, _ref10) => {\n    let {\n      payload: error\n    } = _ref10;\n    return { ...state,\n      error\n    };\n  },\n  [FRIEND_REQUEST_SUCCESS]: (state, _ref11) => {\n    let {\n      payload: list\n    } = _ref11;\n    return { ...state,\n      friendRequestList: [...list]\n    };\n  },\n  [FRIEND_REQUEST_FAILURE]: (state, _ref12) => {\n    let {\n      payload: error\n    } = _ref12;\n    return { ...state,\n      error\n    };\n  },\n  [REQUEST_FRIENDS_LIST_SUCCESS]: (state, _ref13) => {\n    let {\n      payload: friendsList\n    } = _ref13;\n    return { ...state,\n      friendsList\n    };\n  },\n  [REQUEST_FRIENDS_LIST_FAILURE]: (state, _ref14) => {\n    let {\n      payload: error\n    } = _ref14;\n    return { ...state,\n      error\n    };\n  },\n  [RECEIVE_MESSAGE]: (state, _ref15) => {\n    let {\n      payload: data\n    } = _ref15;\n    return { ...state,\n      messagesList: [...state.messagesList, data]\n    };\n  },\n  [REQUEST_MESSAGES_LIST_SUCCESS]: (state, _ref16) => {\n    let {\n      payload: messagesList\n    } = _ref16;\n    return { ...state,\n      messagesList: [...messagesList.map(message => JSON.parse(message))]\n    };\n  },\n  [REQUEST_MESSAGES_LIST_FAILURE]: (state, _ref17) => {\n    let {\n      payload: error\n    } = _ref17;\n    return { ...state,\n      error\n    };\n  }\n}, initialState);","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/modules/friends.js"],"names":["createAction","handleActions","takeLatest","createRequestSaga","createRequestActionTypes","friendsAPI","REMOVE_TAG_IN_FRONT","ADD_TAG_IN_FRONT","RECEIVE_MESSAGE","LOAD_FRIENDS_LIST","LOAD_FRIENDS_LIST_SUCCESS","LOAD_FRIENDS_LIST_FAILURE","LOAD_TAGS","LOAD_TAGS_SUCCESS","LOAD_TAGS_FAILURE","ADD_TAG","ADD_TAG_SUCCESS","ADD_TAG_FAILURE","REMOVE_TAG","REMOVE_TAG_SUCCESS","REMOVE_TAG_FAILURE","GET_RECOMMEND","GET_RECOMMEND_SUCCESS","GET_RECOMMEND_FAILURE","FRIEND_REQUEST","FRIEND_REQUEST_SUCCESS","FRIEND_REQUEST_FAILURE","REQUEST_FRIENDS_LIST","REQUEST_FRIENDS_LIST_SUCCESS","REQUEST_FRIENDS_LIST_FAILURE","REQUEST_MESSAGES_LIST","REQUEST_MESSAGES_LIST_SUCCESS","REQUEST_MESSAGES_LIST_FAILURE","loadTags","addTag","addTagInFront","removeTag","removeTagInFront","getRecommend","friendRequest","requestFriendsList","receiveMessage","requestMessagesList","loadFriendsListSaga","loadTagsSaga","addTagSaga","removeTagSaga","getRecommendSaga","friendRequestSaga","requestFriendsListSaga","requestMessagesListSaga","friendsSaga","initialState","friendsList","tagList","error","recommendList","friendRequestList","messagesList","state","payload","tags","tag","console","log","split","filter","el","join","list","data","map","message","JSON","parse"],"mappings":"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","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\r\nimport { takeLatest } from 'redux-saga/effects';\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from '../lib/createRequestSaga';\r\nimport * as friendsAPI from '../lib/api/friends';\r\n\r\nconst REMOVE_TAG_IN_FRONT = 'friends/REMOVE_TAG_IN_FRONT';\r\nconst ADD_TAG_IN_FRONT = 'friends/ADD_TAG_IN_FRONT';\r\nconst RECEIVE_MESSAGE = 'frends/RECEIVE_MESSAGE';\r\nconst [\r\n  LOAD_FRIENDS_LIST,\r\n  LOAD_FRIENDS_LIST_SUCCESS,\r\n  LOAD_FRIENDS_LIST_FAILURE,\r\n] = createRequestActionTypes('friends/SET_FRIENDS');\r\nconst [LOAD_TAGS, LOAD_TAGS_SUCCESS, LOAD_TAGS_FAILURE] =\r\n  createRequestActionTypes('friends/SET_TAGS');\r\nconst [ADD_TAG, ADD_TAG_SUCCESS, ADD_TAG_FAILURE] =\r\n  createRequestActionTypes('friends/ADD_TAG');\r\nconst [REMOVE_TAG, REMOVE_TAG_SUCCESS, REMOVE_TAG_FAILURE] =\r\n  createRequestActionTypes('frineds/REMOVE_TAG');\r\nconst [GET_RECOMMEND, GET_RECOMMEND_SUCCESS, GET_RECOMMEND_FAILURE] =\r\n  createRequestActionTypes('friends/GET_RECOMMEND');\r\nconst [FRIEND_REQUEST, FRIEND_REQUEST_SUCCESS, FRIEND_REQUEST_FAILURE] =\r\n  createRequestActionTypes('friends/FRIEND_REQUEST');\r\nconst [\r\n  REQUEST_FRIENDS_LIST,\r\n  REQUEST_FRIENDS_LIST_SUCCESS,\r\n  REQUEST_FRIENDS_LIST_FAILURE,\r\n] = createRequestActionTypes('friends/REQUEST_FRIENDS_LIST');\r\nconst [\r\n  REQUEST_MESSAGES_LIST,\r\n  REQUEST_MESSAGES_LIST_SUCCESS,\r\n  REQUEST_MESSAGES_LIST_FAILURE,\r\n] = createRequestActionTypes('friends/REQUEST_MESSAGES_LIST');\r\n\r\nexport const loadTags = createAction(LOAD_TAGS);\r\nexport const addTag = createAction(ADD_TAG);\r\nexport const addTagInFront = createAction(ADD_TAG_IN_FRONT);\r\nexport const removeTag = createAction(REMOVE_TAG);\r\nexport const removeTagInFront = createAction(REMOVE_TAG_IN_FRONT);\r\nexport const getRecommend = createAction(GET_RECOMMEND);\r\nexport const friendRequest = createAction(FRIEND_REQUEST);\r\nexport const requestFriendsList = createAction(REQUEST_FRIENDS_LIST);\r\nexport const receiveMessage = createAction(RECEIVE_MESSAGE);\r\nexport const requestMessagesList = createAction(REQUEST_MESSAGES_LIST);\r\n\r\nconst loadFriendsListSaga = createRequestSaga(LOAD_FRIENDS_LIST);\r\nconst loadTagsSaga = createRequestSaga(LOAD_TAGS, friendsAPI.loadTags);\r\nconst addTagSaga = createRequestSaga(ADD_TAG, friendsAPI.addTag);\r\nconst removeTagSaga = createRequestSaga(REMOVE_TAG, friendsAPI.removeTag);\r\nconst getRecommendSaga = createRequestSaga(\r\n  GET_RECOMMEND,\r\n  friendsAPI.getRecommend,\r\n);\r\nconst friendRequestSaga = createRequestSaga(\r\n  FRIEND_REQUEST,\r\n  friendsAPI.friendRequest,\r\n);\r\nconst requestFriendsListSaga = createRequestSaga(\r\n  REQUEST_FRIENDS_LIST,\r\n  friendsAPI.requestFriendsList,\r\n);\r\nconst requestMessagesListSaga = createRequestSaga(\r\n  REQUEST_MESSAGES_LIST,\r\n  friendsAPI.requestMessagesList,\r\n);\r\nexport function* friendsSaga() {\r\n  yield takeLatest(LOAD_FRIENDS_LIST, loadFriendsListSaga);\r\n  yield takeLatest(LOAD_TAGS, loadTagsSaga);\r\n  yield takeLatest(ADD_TAG, addTagSaga);\r\n  yield takeLatest(REMOVE_TAG, removeTagSaga);\r\n  yield takeLatest(GET_RECOMMEND, getRecommendSaga);\r\n  yield takeLatest(FRIEND_REQUEST, friendRequestSaga);\r\n  yield takeLatest(REQUEST_FRIENDS_LIST, requestFriendsListSaga);\r\n  yield takeLatest(REQUEST_MESSAGES_LIST, requestMessagesListSaga);\r\n}\r\n\r\nconst initialState = {\r\n  friendsList: [],\r\n  tagList: '',\r\n  error: null,\r\n  recommendList: [],\r\n  friendRequestList: [],\r\n  messagesList: [],\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [LOAD_TAGS_SUCCESS]: (state, { payload: tags }) => ({\r\n      ...state,\r\n      tagList: tags,\r\n    }),\r\n    [LOAD_TAGS_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [LOAD_FRIENDS_LIST_SUCCESS]: (state, { payload: friendsList }) => ({\r\n      ...state,\r\n      friendsList: [...friendsList],\r\n    }),\r\n    [LOAD_FRIENDS_LIST_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [ADD_TAG_SUCCESS]: (state) => ({\r\n      ...state,\r\n    }),\r\n    [ADD_TAG_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [ADD_TAG_IN_FRONT]: (state, { payload: tag }) => {\r\n      console.log(tag);\r\n      return {\r\n        ...state,\r\n        tagList: state.tagList + '_' + tag,\r\n      };\r\n    },\r\n    [REMOVE_TAG_SUCCESS]: (state) => ({\r\n      ...state,\r\n    }),\r\n    [REMOVE_TAG_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [REMOVE_TAG_IN_FRONT]: (state, { payload: tag }) => {\r\n      console.log(tag);\r\n      return {\r\n        ...state,\r\n        tagList: state.tagList\r\n          .split('_')\r\n          .filter((el) => el !== tag)\r\n          .join('_'),\r\n      };\r\n    },\r\n    [GET_RECOMMEND_SUCCESS]: (state, { payload: list }) => ({\r\n      ...state,\r\n      recommendList: [...list],\r\n    }),\r\n    [GET_RECOMMEND_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [FRIEND_REQUEST_SUCCESS]: (state, { payload: list }) => ({\r\n      ...state,\r\n      friendRequestList: [...list],\r\n    }),\r\n    [FRIEND_REQUEST_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [REQUEST_FRIENDS_LIST_SUCCESS]: (state, { payload: friendsList }) => ({\r\n      ...state,\r\n      friendsList,\r\n    }),\r\n    [REQUEST_FRIENDS_LIST_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [RECEIVE_MESSAGE]: (state, { payload: data }) => ({\r\n      ...state,\r\n      messagesList: [...state.messagesList, data],\r\n    }),\r\n    [REQUEST_MESSAGES_LIST_SUCCESS]: (state, { payload: messagesList }) => ({\r\n      ...state,\r\n      messagesList: [...messagesList.map((message) => JSON.parse(message))],\r\n    }),\r\n    [REQUEST_MESSAGES_LIST_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n"]},"metadata":{},"sourceType":"module"}