{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/nani/connect/connect-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import React,{useEffect,useRef}from'react';import styled,{css}from'styled-components';import{setOtherToChat}from'../../modules/chatting';import ChatMessage from'./ChatMessage';import{jsx as _jsx}from\"react/jsx-runtime\";var ChattingLogsBlock=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 80%;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: flex-end;\\n\"])));var ChattingScrollContainer=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  padding: 10px;\\n  overflow-y: auto;\\n  height: 100%;\\n  &::-webkit-scrollbar {\\n    width: 6px;\\n    height: 8px;\\n    border-radius: 6px;\\n    background: rgba(0, 0, 0, 0.1);\\n  }\\n  &::-webkit-scrollbar-thumb {\\n    width: 6px;\\n    height: 8px;\\n    border-radius: 6px;\\n    background: rgba(0, 0, 0, 0.4);\\n  }\\n\"])));var Loading=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 100%;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n\"])));var LoadingImage=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  width: 80px;\\n  height: 80px;\\n  background-size: 100% 100%;\\n  background-image: url('/img/loading.gif');\\n\"])));var ChattingLogs=function ChattingLogs(_ref){var loading=_ref.loading,logs=_ref.logs,other=_ref.other,changeScroll=_ref.changeScroll;var scrollBox=useRef();useEffect(function(){if(!loading){changeScroll(scrollBox.current);}},[scrollBox,changeScroll,logs,loading]);return/*#__PURE__*/_jsx(ChattingLogsBlock,{children:loading?/*#__PURE__*/_jsx(Loading,{children:/*#__PURE__*/_jsx(LoadingImage,{})}):/*#__PURE__*/_jsx(ChattingScrollContainer,{ref:scrollBox,children:logs&&logs.map(function(_ref2,idx){var msg=_ref2.msg,type=_ref2.type,time=_ref2.time;return/*#__PURE__*/_jsx(ChatMessage,{type:type,nickname:other.nickname,msg:msg,time:time},idx);})})});};export default ChattingLogs;","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/components/ChattingModal/ChattingLogs.js"],"names":["React","useEffect","useRef","styled","css","setOtherToChat","ChatMessage","ChattingLogsBlock","div","ChattingScrollContainer","Loading","LoadingImage","ChattingLogs","loading","logs","other","changeScroll","scrollBox","current","map","idx","msg","type","time","nickname"],"mappings":"6MAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,KAAyC,OAAzC,CACA,MAAOC,CAAAA,MAAP,EAAiBC,GAAjB,KAA4B,mBAA5B,CACA,OAASC,cAAT,KAA+B,wBAA/B,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,C,2CAEA,GAAMC,CAAAA,iBAAiB,CAAGJ,MAAM,CAACK,GAAV,8KAAvB,CAOA,GAAMC,CAAAA,uBAAuB,CAAGN,MAAM,CAACK,GAAV,mYAA7B,CAiBA,GAAME,CAAAA,OAAO,CAAGP,MAAM,CAACK,GAAV,4KAAb,CAOA,GAAMG,CAAAA,YAAY,CAAGR,MAAM,CAACK,GAAV,mLAAlB,CAMA,GAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAA4C,IAAzCC,CAAAA,OAAyC,MAAzCA,OAAyC,CAAhCC,IAAgC,MAAhCA,IAAgC,CAA1BC,KAA0B,MAA1BA,KAA0B,CAAnBC,YAAmB,MAAnBA,YAAmB,CAC/D,GAAMC,CAAAA,SAAS,CAAGf,MAAM,EAAxB,CACAD,SAAS,CAAC,UAAM,CACd,GAAI,CAACY,OAAL,CAAc,CACZG,YAAY,CAACC,SAAS,CAACC,OAAX,CAAZ,CACD,CACF,CAJQ,CAIN,CAACD,SAAD,CAAYD,YAAZ,CAA0BF,IAA1B,CAAgCD,OAAhC,CAJM,CAAT,CAKA,mBACE,KAAC,iBAAD,WACGA,OAAO,cACN,KAAC,OAAD,wBACE,KAAC,YAAD,IADF,EADM,cAKN,KAAC,uBAAD,EAAyB,GAAG,CAAEI,SAA9B,UACGH,IAAI,EACHA,IAAI,CAACK,GAAL,CAAS,eAAsBC,GAAtB,KAAGC,CAAAA,GAAH,OAAGA,GAAH,CAAQC,IAAR,OAAQA,IAAR,CAAcC,IAAd,OAAcA,IAAd,oBACP,KAAC,WAAD,EAEE,IAAI,CAAED,IAFR,CAGE,QAAQ,CAAEP,KAAK,CAACS,QAHlB,CAIE,GAAG,CAAEH,GAJP,CAKE,IAAI,CAAEE,IALR,EACOH,GADP,CADO,EAAT,CAFJ,EANJ,EADF,CAsBD,CA7BD,CA+BA,cAAeR,CAAAA,YAAf","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { setOtherToChat } from '../../modules/chatting';\r\nimport ChatMessage from './ChatMessage';\r\n\r\nconst ChattingLogsBlock = styled.div`\r\n  width: 100%;\r\n  height: 80%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n`;\r\nconst ChattingScrollContainer = styled.div`\r\n  padding: 10px;\r\n  overflow-y: auto;\r\n  height: 100%;\r\n  &::-webkit-scrollbar {\r\n    width: 6px;\r\n    height: 8px;\r\n    border-radius: 6px;\r\n    background: rgba(0, 0, 0, 0.1);\r\n  }\r\n  &::-webkit-scrollbar-thumb {\r\n    width: 6px;\r\n    height: 8px;\r\n    border-radius: 6px;\r\n    background: rgba(0, 0, 0, 0.4);\r\n  }\r\n`;\r\nconst Loading = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst LoadingImage = styled.div`\r\n  width: 80px;\r\n  height: 80px;\r\n  background-size: 100% 100%;\r\n  background-image: url('/img/loading.gif');\r\n`;\r\nconst ChattingLogs = ({ loading, logs, other, changeScroll }) => {\r\n  const scrollBox = useRef();\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      changeScroll(scrollBox.current);\r\n    }\r\n  }, [scrollBox, changeScroll, logs, loading]);\r\n  return (\r\n    <ChattingLogsBlock>\r\n      {loading ? (\r\n        <Loading>\r\n          <LoadingImage />\r\n        </Loading>\r\n      ) : (\r\n        <ChattingScrollContainer ref={scrollBox}>\r\n          {logs &&\r\n            logs.map(({ msg, type, time }, idx) => (\r\n              <ChatMessage\r\n                key={idx}\r\n                type={type}\r\n                nickname={other.nickname}\r\n                msg={msg}\r\n                time={time}\r\n              />\r\n            ))}\r\n        </ChattingScrollContainer>\r\n      )}\r\n    </ChattingLogsBlock>\r\n  );\r\n};\r\n\r\nexport default ChattingLogs;\r\n"]},"metadata":{},"sourceType":"module"}