{"ast":null,"code":"var _jsxFileName = \"C:\\\\nani\\\\connect\\\\connect-frontend\\\\src\\\\containers\\\\common\\\\NoticeContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Notice from '../../components/common/Notice';\nimport { acceptFriendRequest, refuseFriendRequest } from '../../modules/friends';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoticeContainer = _ref => {\n  _s();\n\n  let {\n    sender,\n    profileImage,\n    nickname\n  } = _ref;\n  const dispatch = useDispatch();\n  const [receiver, setReceiver] = useState(null);\n  useEffect(() => {\n    if (localStorage.user) {\n      setReceiver(JSON.parse(localStorage.getItem('user')).uid);\n    }\n  }, []);\n\n  const onAccept = e => {\n    e.stopPropagation();\n    dispatch(acceptFriendRequest({\n      sender,\n      receiver\n    }));\n  };\n\n  const onRefuse = e => {\n    e.stopPropagation();\n    dispatch(refuseFriendRequest({\n      sender,\n      receiver\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Notice, {\n    profileImage: profileImage,\n    nickname: nickname,\n    onAccept: onAccept,\n    onRefuse: onRefuse\n  }, sender, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NoticeContainer, \"6YMVG6Q1hR3L82diViLG5NNsQo8=\", false, function () {\n  return [useDispatch];\n});\n\n_c = NoticeContainer;\nexport default NoticeContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoticeContainer\");","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/common/NoticeContainer.js"],"names":["React","useEffect","useState","useDispatch","Notice","acceptFriendRequest","refuseFriendRequest","NoticeContainer","sender","profileImage","nickname","dispatch","receiver","setReceiver","localStorage","user","JSON","parse","getItem","uid","onAccept","e","stopPropagation","onRefuse"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SACEC,mBADF,EAEEC,mBAFF,QAGO,uBAHP;;;AAKA,MAAMC,eAAe,GAAG,QAAwC;AAAA;;AAAA,MAAvC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA;AAAxB,GAAuC;AAC9D,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,IAAD,CAAxC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,YAAY,CAACC,IAAjB,EAAuB;AACrBF,MAAAA,WAAW,CAACG,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACI,OAAb,CAAqB,MAArB,CAAX,EAAyCC,GAA1C,CAAX;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;;AAKA,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,eAAF;AACAX,IAAAA,QAAQ,CAACN,mBAAmB,CAAC;AAAEG,MAAAA,MAAF;AAAUI,MAAAA;AAAV,KAAD,CAApB,CAAR;AACD,GAHD;;AAIA,QAAMW,QAAQ,GAAIF,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,eAAF;AACAX,IAAAA,QAAQ,CAACL,mBAAmB,CAAC;AAAEE,MAAAA,MAAF;AAAUI,MAAAA;AAAV,KAAD,CAApB,CAAR;AACD,GAHD;;AAIA,sBACE,QAAC,MAAD;AAEE,IAAA,YAAY,EAAEH,YAFhB;AAGE,IAAA,QAAQ,EAAEC,QAHZ;AAIE,IAAA,QAAQ,EAAEU,QAJZ;AAKE,IAAA,QAAQ,EAAEG;AALZ,KACOf,MADP;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAzBD;;GAAMD,e;UACaJ,W;;;KADbI,e;AA2BN,eAAeA,eAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Notice from '../../components/common/Notice';\r\nimport {\r\n  acceptFriendRequest,\r\n  refuseFriendRequest,\r\n} from '../../modules/friends';\r\n\r\nconst NoticeContainer = ({ sender, profileImage, nickname }) => {\r\n  const dispatch = useDispatch();\r\n  const [receiver, setReceiver] = useState(null);\r\n  useEffect(() => {\r\n    if (localStorage.user) {\r\n      setReceiver(JSON.parse(localStorage.getItem('user')).uid);\r\n    }\r\n  }, []);\r\n  const onAccept = (e) => {\r\n    e.stopPropagation();\r\n    dispatch(acceptFriendRequest({ sender, receiver }));\r\n  };\r\n  const onRefuse = (e) => {\r\n    e.stopPropagation();\r\n    dispatch(refuseFriendRequest({ sender, receiver }));\r\n  };\r\n  return (\r\n    <Notice\r\n      key={sender}\r\n      profileImage={profileImage}\r\n      nickname={nickname}\r\n      onAccept={onAccept}\r\n      onRefuse={onRefuse}\r\n    />\r\n  );\r\n};\r\n\r\nexport default NoticeContainer;\r\n"]},"metadata":{},"sourceType":"module"}