{"ast":null,"code":"var _jsxFileName = \"C:\\\\nani\\\\connect\\\\connect-frontend\\\\src\\\\containers\\\\auth\\\\ProfileSettingContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ProfileSettingForm from '../../components/auth/ProfileSettingForm';\nimport { initializeForm, setTempInfo } from '../../modules/auth';\nimport imageCompression from '../../../node_modules/browser-image-compression/dist/browser-image-compression';\nimport { useNavigate } from '../../../node_modules/react-router/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileSettingContainer = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    username,\n    password\n  } = useSelector(_ref => {\n    let {\n      auth: {\n        tempInfo\n      }\n    } = _ref;\n    return {\n      username: tempInfo.username,\n      password: tempInfo.password\n    };\n  });\n\n  const imageCompress = fileSrc => {\n    const options = {\n      maxSizeMB: 0.2,\n      maxWidthOrHeight: 380,\n      userWebWorker: true\n    };\n    return imageCompression(fileSrc, options);\n  };\n\n  const onChange = (e, ref) => {\n    if (e.target.files) {\n      const reader = new FileReader();\n      reader.readAsDataURL(e.target.files[0]);\n\n      reader.onload = event => {\n        ref.style.backgroundImage = `url(${event.target.result})`;\n      };\n\n      imageCompress(e.target.files[0]).then(res => {\n        dispatch(setTempInfo({\n          type: 'profileImage',\n          value: res\n        }));\n      });\n    } else {\n      dispatch(setTempInfo({\n        type: 'nickname',\n        value: e.target.value\n      }));\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    console.log('onSubmit');\n  };\n\n  useEffect(() => {\n    if (username === '') {\n      navigate(-1);\n    }\n\n    dispatch(initializeForm({\n      username,\n      password\n    }));\n  }, [dispatch, password, username, navigate]);\n  return /*#__PURE__*/_jsxDEV(ProfileSettingForm, {\n    onChange: onChange,\n    username: username\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n};\n\n_s(ProfileSettingContainer, \"5yVLJuPvnBhpQW52KUHaCb+DgOo=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n\n_c = ProfileSettingContainer;\nexport default ProfileSettingContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileSettingContainer\");","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/auth/ProfileSettingContainer.js"],"names":["React","useEffect","useDispatch","useSelector","ProfileSettingForm","initializeForm","setTempInfo","imageCompression","useNavigate","ProfileSettingContainer","dispatch","navigate","username","password","auth","tempInfo","imageCompress","fileSrc","options","maxSizeMB","maxWidthOrHeight","userWebWorker","onChange","e","ref","target","files","reader","FileReader","readAsDataURL","onload","event","style","backgroundImage","result","then","res","type","value","onSubmit","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ProfileSettingForm from '../../components/auth/ProfileSettingForm';\r\nimport { initializeForm, setTempInfo } from '../../modules/auth';\r\nimport imageCompression from '../../../node_modules/browser-image-compression/dist/browser-image-compression';\r\nimport { useNavigate } from '../../../node_modules/react-router/index';\r\nconst ProfileSettingContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { username, password } = useSelector(({ auth: { tempInfo } }) => ({\r\n    username: tempInfo.username,\r\n    password: tempInfo.password,\r\n  }));\r\n  const imageCompress = (fileSrc) => {\r\n    const options = {\r\n      maxSizeMB: 0.2,\r\n      maxWidthOrHeight: 380,\r\n      userWebWorker: true,\r\n    };\r\n    return imageCompression(fileSrc, options);\r\n  };\r\n  const onChange = (e, ref) => {\r\n    if (e.target.files) {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(e.target.files[0]);\r\n      reader.onload = (event) => {\r\n        ref.style.backgroundImage = `url(${event.target.result})`;\r\n      };\r\n      imageCompress(e.target.files[0]).then((res) => {\r\n        dispatch(setTempInfo({ type: 'profileImage', value: res }));\r\n      });\r\n    } else {\r\n      dispatch(setTempInfo({ type: 'nickname', value: e.target.value }));\r\n    }\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log('onSubmit');\r\n  };\r\n  useEffect(() => {\r\n    if (username === '') {\r\n      navigate(-1);\r\n    }\r\n    dispatch(initializeForm({ username, password }));\r\n  }, [dispatch, password, username, navigate]);\r\n  return <ProfileSettingForm onChange={onChange} username={username} />;\r\n};\r\n\r\nexport default ProfileSettingContainer;\r\n"]},"metadata":{},"sourceType":"module"}