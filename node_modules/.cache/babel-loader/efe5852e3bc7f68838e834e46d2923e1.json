{"ast":null,"code":"var _jsxFileName = \"C:\\\\nani\\\\connect\\\\connect-frontend\\\\src\\\\containers\\\\common\\\\ChatHallContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ChatHall from '../../components/common/ChatHall';\nimport { useSelector } from 'react-redux';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER = 'http://localhost:4000';\nlet socket;\n\nconst ChatHallContainer = () => {\n  _s();\n\n  const [msg, setMsg] = useState('');\n  const [msgList, setMsgList] = useState([]);\n  let {\n    nickname,\n    profileImage\n  } = useSelector(_ref => {\n    let {\n      user\n    } = _ref;\n    return {\n      nickname: user.user ? user.user.nickname : 'guest',\n      profileImage: user.user ? user.user.profileImage : ''\n    };\n  });\n  useEffect(() => {});\n  useEffect(() => {\n    socket = io(SERVER);\n    socket.on('msg', data => {\n      console.log(data);\n    });\n  }, [nickname]);\n\n  const onChange = e => {\n    setMsg(e.target.value);\n  };\n\n  const onSubmit = () => {\n    socket.emit('msg', {\n      nickname,\n      msg: msg.trim()\n    });\n    setMsgList([...msgList, {\n      send: true,\n      msg: msg.trim()\n    }]);\n    setMsg('');\n  };\n\n  const onKeySubmit = e => {\n    if (e.key === 'Enter') {\n      onSubmit();\n      setMsg('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChatHall, {\n    msg: msg,\n    onChange: onChange,\n    onSubmit: onSubmit,\n    onKeySubmit: onKeySubmit,\n    msgList: msgList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatHallContainer, \"IIvEak8+WVHcrTwSpkIGOZyNSeA=\", false, function () {\n  return [useSelector];\n});\n\n_c = ChatHallContainer;\nexport default ChatHallContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatHallContainer\");","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/common/ChatHallContainer.js"],"names":["React","useEffect","useState","ChatHall","useSelector","io","SERVER","socket","ChatHallContainer","msg","setMsg","msgList","setMsgList","nickname","profileImage","user","on","data","console","log","onChange","e","target","value","onSubmit","emit","trim","send","onKeySubmit","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,EAAT,QAAmB,kBAAnB;;AAEA,MAAMC,MAAM,GAAG,uBAAf;AACA,IAAIC,MAAJ;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AAEA,MAAI;AAAEW,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6BV,WAAW,CAAC;AAAA,QAAC;AAAEW,MAAAA;AAAF,KAAD;AAAA,WAAe;AAC1DF,MAAAA,QAAQ,EAAEE,IAAI,CAACA,IAAL,GAAYA,IAAI,CAACA,IAAL,CAAUF,QAAtB,GAAiC,OADe;AAE1DC,MAAAA,YAAY,EAAEC,IAAI,CAACA,IAAL,GAAYA,IAAI,CAACA,IAAL,CAAUD,YAAtB,GAAqC;AAFO,KAAf;AAAA,GAAD,CAA5C;AAKAb,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,CAAT;AACAA,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,MAAM,GAAGF,EAAE,CAACC,MAAD,CAAX;AACAC,IAAAA,MAAM,CAACS,EAAP,CAAU,KAAV,EAAkBC,IAAD,IAAU;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,KAFD;AAGD,GALQ,EAKN,CAACJ,QAAD,CALM,CAAT;;AAMA,QAAMO,QAAQ,GAAIC,CAAD,IAAO;AACtBX,IAAAA,MAAM,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN;AACD,GAFD;;AAGA,QAAMC,QAAQ,GAAG,MAAM;AACrBjB,IAAAA,MAAM,CAACkB,IAAP,CAAY,KAAZ,EAAmB;AAAEZ,MAAAA,QAAF;AAAYJ,MAAAA,GAAG,EAAEA,GAAG,CAACiB,IAAJ;AAAjB,KAAnB;AACAd,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAa;AAAEgB,MAAAA,IAAI,EAAE,IAAR;AAAclB,MAAAA,GAAG,EAAEA,GAAG,CAACiB,IAAJ;AAAnB,KAAb,CAAD,CAAV;AACAhB,IAAAA,MAAM,CAAC,EAAD,CAAN;AACD,GAJD;;AAKA,QAAMkB,WAAW,GAAIP,CAAD,IAAO;AACzB,QAAIA,CAAC,CAACQ,GAAF,KAAU,OAAd,EAAuB;AACrBL,MAAAA,QAAQ;AACRd,MAAAA,MAAM,CAAC,EAAD,CAAN;AACD;AACF,GALD;;AAOA,sBACE,QAAC,QAAD;AACE,IAAA,GAAG,EAAED,GADP;AAEE,IAAA,QAAQ,EAAEW,QAFZ;AAGE,IAAA,QAAQ,EAAEI,QAHZ;AAIE,IAAA,WAAW,EAAEI,WAJf;AAKE,IAAA,OAAO,EAAEjB;AALX;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAxCD;;GAAMH,iB;UAI6BJ,W;;;KAJ7BI,iB;AA0CN,eAAeA,iBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport ChatHall from '../../components/common/ChatHall';\r\nimport { useSelector } from 'react-redux';\r\nimport { io } from 'socket.io-client';\r\n\r\nconst SERVER = 'http://localhost:4000';\r\nlet socket;\r\n\r\nconst ChatHallContainer = () => {\r\n  const [msg, setMsg] = useState('');\r\n  const [msgList, setMsgList] = useState([]);\r\n\r\n  let { nickname, profileImage } = useSelector(({ user }) => ({\r\n    nickname: user.user ? user.user.nickname : 'guest',\r\n    profileImage: user.user ? user.user.profileImage : '',\r\n  }));\r\n\r\n  useEffect(() => {});\r\n  useEffect(() => {\r\n    socket = io(SERVER);\r\n    socket.on('msg', (data) => {\r\n      console.log(data);\r\n    });\r\n  }, [nickname]);\r\n  const onChange = (e) => {\r\n    setMsg(e.target.value);\r\n  };\r\n  const onSubmit = () => {\r\n    socket.emit('msg', { nickname, msg: msg.trim() });\r\n    setMsgList([...msgList, { send: true, msg: msg.trim() }]);\r\n    setMsg('');\r\n  };\r\n  const onKeySubmit = (e) => {\r\n    if (e.key === 'Enter') {\r\n      onSubmit();\r\n      setMsg('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ChatHall\r\n      msg={msg}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      onKeySubmit={onKeySubmit}\r\n      msgList={msgList}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ChatHallContainer;\r\n"]},"metadata":{},"sourceType":"module"}