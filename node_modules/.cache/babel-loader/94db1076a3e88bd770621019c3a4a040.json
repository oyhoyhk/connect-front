{"ast":null,"code":"import _objectSpread from\"C:/nani/connect/connect-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/nani/connect/connect-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useCallback,useEffect,useState}from'react';import ChatHall from'../../components/common/ChatHall';import{useDispatch,useSelector}from'react-redux';import{socket}from'../../lib/sockets/chatHallSocket';import{getGuestNumber,sendMessage,receiveMessage,setUserList,getUserInfo,setChatHall,leaveChatHall,someoneLeft,someoneInOut,initializeChatHall}from'../../modules/chatHall';import{jsx as _jsx}from\"react/jsx-runtime\";var ChatHallContainer=function ChatHallContainer(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),msg=_useState2[0],setMsg=_useState2[1];var dispatch=useDispatch();var _useSelector=useSelector(function(_ref){var chatHall=_ref.chatHall,user=_ref.user.user;return{user:chatHall.user,userList:chatHall.userList,msgList:chatHall.msgList,userInfo:user};}),user=_useSelector.user,userList=_useSelector.userList,msgList=_useSelector.msgList,userInfo=_useSelector.userInfo;useEffect(function(){if(!user){dispatch(getGuestNumber());}else{var info=userInfo||user;socket.emit('enter',{username:info.username,nickname:info.nickname,profileImage:info.profileImage},function(response){if(response==='success'){localStorage.setItem('chatHall',JSON.stringify(info));}});}var onBeforeUnload=function onBeforeUnload(e){var username=userInfo?userInfo.username:user.username;socket.emit('leave_chat_hall',username);};window.addEventListener('beforeunload',onBeforeUnload);socket.on('broadcastMsg',function(data){dispatch(receiveMessage(_objectSpread({received:true},data)));});socket.on('someone_entered',function(data){dispatch(setUserList(data));dispatch(someoneInOut({action:'in',nickname:data[data.length-1].nickname}));});socket.on('someone_left',function(data){console.log('someone_left, data : ',data);dispatch(someoneLeft(data));dispatch(someoneInOut({action:'out',nickname:data}));});return function(){console.log('clean up',user);if(user){var username=userInfo?userInfo.username:user.username;socket.emit('leave_chat_hall',username);}dispatch(leaveChatHall());localStorage.removeItem('chatHall');socket.removeAllListeners();window.removeEventListener('beforeunload',onBeforeUnload);};},[dispatch,user,userInfo]);var onChange=function onChange(e){setMsg(e.target.value);};var changeScroll=useCallback(function(e){e.scrollTop=e.scrollHeight;},[]);var onSubmit=function onSubmit(){if(msg==='')return;var nickname=userInfo?userInfo.nickname:user.nickname;socket.emit('msg',{nickname:nickname,msg:msg.trim()});dispatch(sendMessage({send:true,nickname:user.nickname,msg:msg.trim()}));setMsg('');};var onKeySubmit=function onKeySubmit(e){if(e.key==='Enter'){onSubmit();setMsg('');}};return/*#__PURE__*/_jsx(ChatHall,{changeScroll:changeScroll,msg:msg,onChange:onChange,onSubmit:onSubmit,onKeySubmit:onKeySubmit,msgList:msgList,userList:userList});};export default ChatHallContainer;","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/common/ChatHallContainer.js"],"names":["React","useCallback","useEffect","useState","ChatHall","useDispatch","useSelector","socket","getGuestNumber","sendMessage","receiveMessage","setUserList","getUserInfo","setChatHall","leaveChatHall","someoneLeft","someoneInOut","initializeChatHall","ChatHallContainer","msg","setMsg","dispatch","chatHall","user","userList","msgList","userInfo","info","emit","username","nickname","profileImage","response","localStorage","setItem","JSON","stringify","onBeforeUnload","e","window","addEventListener","on","data","received","action","length","console","log","removeItem","removeAllListeners","removeEventListener","onChange","target","value","changeScroll","scrollTop","scrollHeight","onSubmit","trim","send","onKeySubmit","key"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport ChatHall from '../../components/common/ChatHall';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { socket } from '../../lib/sockets/chatHallSocket';\r\nimport {\r\n  getGuestNumber,\r\n  sendMessage,\r\n  receiveMessage,\r\n  setUserList,\r\n  getUserInfo,\r\n  setChatHall,\r\n  leaveChatHall,\r\n  someoneLeft,\r\n  someoneInOut,\r\n  initializeChatHall,\r\n} from '../../modules/chatHall';\r\n\r\nconst ChatHallContainer = () => {\r\n  const [msg, setMsg] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const { user, userList, msgList, userInfo } = useSelector(\r\n    ({ chatHall, user: { user } }) => ({\r\n      user: chatHall.user,\r\n      userList: chatHall.userList,\r\n      msgList: chatHall.msgList,\r\n      userInfo: user,\r\n    }),\r\n  );\r\n  useEffect(() => {\r\n    if (!user) {\r\n      dispatch(getGuestNumber());\r\n    } else {\r\n      const info = userInfo || user;\r\n\r\n      socket.emit(\r\n        'enter',\r\n        {\r\n          username: info.username,\r\n          nickname: info.nickname,\r\n          profileImage: info.profileImage,\r\n        },\r\n        (response) => {\r\n          if (response === 'success') {\r\n            localStorage.setItem('chatHall', JSON.stringify(info));\r\n          }\r\n        },\r\n      );\r\n    }\r\n\r\n    const onBeforeUnload = (e) => {\r\n      const username = userInfo ? userInfo.username : user.username;\r\n      socket.emit('leave_chat_hall', username);\r\n    };\r\n    window.addEventListener('beforeunload', onBeforeUnload);\r\n    socket.on('broadcastMsg', (data) => {\r\n      dispatch(receiveMessage({ received: true, ...data }));\r\n    });\r\n    socket.on('someone_entered', (data) => {\r\n      dispatch(setUserList(data));\r\n      dispatch(\r\n        someoneInOut({\r\n          action: 'in',\r\n          nickname: data[data.length - 1].nickname,\r\n        }),\r\n      );\r\n    });\r\n    socket.on('someone_left', (data) => {\r\n      console.log('someone_left, data : ', data);\r\n      dispatch(someoneLeft(data));\r\n      dispatch(someoneInOut({ action: 'out', nickname: data }));\r\n    });\r\n    return () => {\r\n      console.log('clean up', user);\r\n      if (user) {\r\n        const username = userInfo ? userInfo.username : user.username;\r\n        socket.emit('leave_chat_hall', username);\r\n      }\r\n      dispatch(leaveChatHall());\r\n      localStorage.removeItem('chatHall');\r\n      socket.removeAllListeners();\r\n      window.removeEventListener('beforeunload', onBeforeUnload);\r\n    };\r\n  }, [dispatch, user, userInfo]);\r\n\r\n  const onChange = (e) => {\r\n    setMsg(e.target.value);\r\n  };\r\n\r\n  const changeScroll = useCallback((e) => {\r\n    e.scrollTop = e.scrollHeight;\r\n  }, []);\r\n\r\n  const onSubmit = () => {\r\n    if (msg === '') return;\r\n    const nickname = userInfo ? userInfo.nickname : user.nickname;\r\n    socket.emit('msg', { nickname, msg: msg.trim() });\r\n    dispatch(\r\n      sendMessage({ send: true, nickname: user.nickname, msg: msg.trim() }),\r\n    );\r\n    setMsg('');\r\n  };\r\n\r\n  const onKeySubmit = (e) => {\r\n    if (e.key === 'Enter') {\r\n      onSubmit();\r\n      setMsg('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ChatHall\r\n      changeScroll={changeScroll}\r\n      msg={msg}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      onKeySubmit={onKeySubmit}\r\n      msgList={msgList}\r\n      userList={userList}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ChatHallContainer;\r\n"]},"metadata":{},"sourceType":"module"}