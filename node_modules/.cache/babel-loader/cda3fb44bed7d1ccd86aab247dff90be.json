{"ast":null,"code":"var _jsxFileName = \"C:\\\\nani\\\\connect\\\\connect-frontend\\\\src\\\\containers\\\\common\\\\ChatHallContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useReducer, useState } from 'react';\nimport ChatHall from '../../components/common/ChatHall';\nimport { useDispatch, useSelector } from 'react-redux';\nimport io from 'socket.io-client';\nimport { socket } from '../../lib/sockets/chatHallSocket';\nimport { access, leave } from '../../lib/api/chatHall';\nimport { accessChatHall, getGuestNumber } from '../../modules/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatHallContainer = () => {\n  _s();\n\n  const [msg, setMsg] = useState('');\n  const dispatch = useDispatch();\n  const {\n    user,\n    userList\n  } = useSelector(_ref => {\n    let {\n      user,\n      chatHallUserList\n    } = _ref;\n    return {\n      user: user,\n      userList: chatHallUserList\n    };\n  });\n  useEffect(() => {\n    if (!user) {}\n  }); // useEffect(() => {\n  //   socket.on('broadcastMsg', (data) => {\n  //     console.log('receive data : ', data);\n  //     dispatch({ type: 'msg', msg: { ...data, received: true } });\n  //   });\n  //   return () => {\n  //     leaveChatHall({\n  //       username: state.myInfo.username,\n  //       nickname: state.myInfo.nickname,\n  //     });\n  //   };\n  // }, [dispatch, state]);\n\n  const accessChatHall = async _ref2 => {\n    let {\n      username,\n      nickname,\n      profileImage\n    } = _ref2;\n    const response = await access({\n      username,\n      nickname,\n      profileImage\n    });\n    const {\n      guestInfo,\n      list\n    } = response.data;\n    console.log(guestInfo, list);\n\n    if (guestInfo) {\n      dispatch({\n        type: 'set_guest_info',\n        guestInfo\n      });\n    }\n\n    dispatch({\n      type: 'set_user_list',\n      list\n    });\n  };\n\n  const leaveChatHall = async _ref3 => {\n    let {\n      username,\n      nickname\n    } = _ref3;\n    const response = await leave({\n      username,\n      nickname\n    });\n  };\n\n  const onChange = e => {\n    setMsg(e.target.value);\n  };\n\n  const changeScroll = useCallback(e => {\n    e.scrollTop = e.scrollHeight;\n  }, []);\n\n  const onSubmit = () => {\n    if (msg === '') return;\n    socket.emit('msg', {\n      nickname,\n      msg: msg.trim()\n    });\n    dispatch({\n      type: 'msg',\n      msg: {\n        send: true,\n        nickname,\n        msg: msg.trim()\n      }\n    });\n    setMsg('');\n  };\n\n  const onKeySubmit = e => {\n    if (e.key === 'Enter') {\n      onSubmit();\n      setMsg('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChatHall, {\n    changeScroll: changeScroll,\n    msg: msg,\n    onChange: onChange,\n    onSubmit: onSubmit,\n    onKeySubmit: onKeySubmit,\n    msgList: state.msg,\n    userList: state.userList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatHallContainer, \"yZR9176LH/kEjtgkU34mbpnxU3k=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ChatHallContainer;\nconst initialState = {\n  msg: [],\n  myInfo: {\n    username: null,\n    nickname: null,\n    profileImage: null\n  },\n  userList: []\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'msg':\n      {\n        return { ...initialState,\n          msg: [...state.msg, action.msg]\n        };\n      }\n\n    case 'set_guest_info':\n      {\n        const {\n          username,\n          nickname\n        } = action.guestInfo;\n        console.log(username, nickname);\n        return { ...state,\n          myInfo: {\n            username: username,\n            nickname: nickname,\n            profileImage: null\n          }\n        };\n      }\n\n    case 'set_user_list':\n      {\n        const {\n          list\n        } = action;\n        return { ...state,\n          userList: [...list]\n        };\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default ChatHallContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatHallContainer\");","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/common/ChatHallContainer.js"],"names":["React","useCallback","useEffect","useReducer","useState","ChatHall","useDispatch","useSelector","io","socket","access","leave","accessChatHall","getGuestNumber","ChatHallContainer","msg","setMsg","dispatch","user","userList","chatHallUserList","username","nickname","profileImage","response","guestInfo","list","data","console","log","type","leaveChatHall","onChange","e","target","value","changeScroll","scrollTop","scrollHeight","onSubmit","emit","trim","send","onKeySubmit","key","state","initialState","myInfo","reducer","action"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,UAAxC,EAAoDC,QAApD,QAAoE,OAApE;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,MAAT,QAAuB,kCAAvB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,wBAA9B;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,oBAA/C;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAMa,QAAQ,GAAGX,WAAW,EAA5B;AAEA,QAAM;AAAEY,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAqBZ,WAAW,CAAC;AAAA,QAAC;AAAEW,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAAD;AAAA,WAAiC;AACtEF,MAAAA,IAAI,EAAEA,IADgE;AAEtEC,MAAAA,QAAQ,EAAEC;AAF4D,KAAjC;AAAA,GAAD,CAAtC;AAKAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACgB,IAAL,EAAW,CACV;AACF,GAHQ,CAAT,CAT8B,CAc9B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMN,cAAc,GAAG,eAAgD;AAAA,QAAzC;AAAES,MAAAA,QAAF;AAAYC,MAAAA,QAAZ;AAAsBC,MAAAA;AAAtB,KAAyC;AACrE,UAAMC,QAAQ,GAAG,MAAMd,MAAM,CAAC;AAAEW,MAAAA,QAAF;AAAYC,MAAAA,QAAZ;AAAsBC,MAAAA;AAAtB,KAAD,CAA7B;AACA,UAAM;AAAEE,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAsBF,QAAQ,CAACG,IAArC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ,EAAuBC,IAAvB;;AACA,QAAID,SAAJ,EAAe;AACbR,MAAAA,QAAQ,CAAC;AAAEa,QAAAA,IAAI,EAAE,gBAAR;AAA0BL,QAAAA;AAA1B,OAAD,CAAR;AACD;;AACDR,IAAAA,QAAQ,CAAC;AAAEa,MAAAA,IAAI,EAAE,eAAR;AAAyBJ,MAAAA;AAAzB,KAAD,CAAR;AACD,GARD;;AASA,QAAMK,aAAa,GAAG,eAAkC;AAAA,QAA3B;AAAEV,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAA2B;AACtD,UAAME,QAAQ,GAAG,MAAMb,KAAK,CAAC;AAAEU,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAD,CAA5B;AACD,GAFD;;AAIA,QAAMU,QAAQ,GAAIC,CAAD,IAAO;AACtBjB,IAAAA,MAAM,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAGnC,WAAW,CAAEgC,CAAD,IAAO;AACtCA,IAAAA,CAAC,CAACI,SAAF,GAAcJ,CAAC,CAACK,YAAhB;AACD,GAF+B,EAE7B,EAF6B,CAAhC;;AAIA,QAAMC,QAAQ,GAAG,MAAM;AACrB,QAAIxB,GAAG,KAAK,EAAZ,EAAgB;AAChBN,IAAAA,MAAM,CAAC+B,IAAP,CAAY,KAAZ,EAAmB;AAAElB,MAAAA,QAAF;AAAYP,MAAAA,GAAG,EAAEA,GAAG,CAAC0B,IAAJ;AAAjB,KAAnB;AACAxB,IAAAA,QAAQ,CAAC;AAAEa,MAAAA,IAAI,EAAE,KAAR;AAAef,MAAAA,GAAG,EAAE;AAAE2B,QAAAA,IAAI,EAAE,IAAR;AAAcpB,QAAAA,QAAd;AAAwBP,QAAAA,GAAG,EAAEA,GAAG,CAAC0B,IAAJ;AAA7B;AAApB,KAAD,CAAR;AACAzB,IAAAA,MAAM,CAAC,EAAD,CAAN;AACD,GALD;;AAOA,QAAM2B,WAAW,GAAIV,CAAD,IAAO;AACzB,QAAIA,CAAC,CAACW,GAAF,KAAU,OAAd,EAAuB;AACrBL,MAAAA,QAAQ;AACRvB,MAAAA,MAAM,CAAC,EAAD,CAAN;AACD;AACF,GALD;;AAOA,sBACE,QAAC,QAAD;AACE,IAAA,YAAY,EAAEoB,YADhB;AAEE,IAAA,GAAG,EAAErB,GAFP;AAGE,IAAA,QAAQ,EAAEiB,QAHZ;AAIE,IAAA,QAAQ,EAAEO,QAJZ;AAKE,IAAA,WAAW,EAAEI,WALf;AAME,IAAA,OAAO,EAAEE,KAAK,CAAC9B,GANjB;AAOE,IAAA,QAAQ,EAAE8B,KAAK,CAAC1B;AAPlB;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA1ED;;GAAML,iB;UAEaR,W,EAEUC,W;;;KAJvBO,iB;AA4EN,MAAMgC,YAAY,GAAG;AACnB/B,EAAAA,GAAG,EAAE,EADc;AAEnBgC,EAAAA,MAAM,EAAE;AACN1B,IAAAA,QAAQ,EAAE,IADJ;AAENC,IAAAA,QAAQ,EAAE,IAFJ;AAGNC,IAAAA,YAAY,EAAE;AAHR,GAFW;AAOnBJ,EAAAA,QAAQ,EAAE;AAPS,CAArB;;AASA,SAAS6B,OAAT,CAAiBH,KAAjB,EAAwBI,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACnB,IAAf;AACE,SAAK,KAAL;AAAY;AACV,eAAO,EAAE,GAAGgB,YAAL;AAAmB/B,UAAAA,GAAG,EAAE,CAAC,GAAG8B,KAAK,CAAC9B,GAAV,EAAekC,MAAM,CAAClC,GAAtB;AAAxB,SAAP;AACD;;AACD,SAAK,gBAAL;AAAuB;AACrB,cAAM;AAAEM,UAAAA,QAAF;AAAYC,UAAAA;AAAZ,YAAyB2B,MAAM,CAACxB,SAAtC;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ,EAAsBC,QAAtB;AACA,eAAO,EACL,GAAGuB,KADE;AAELE,UAAAA,MAAM,EAAE;AACN1B,YAAAA,QAAQ,EAAEA,QADJ;AAENC,YAAAA,QAAQ,EAAEA,QAFJ;AAGNC,YAAAA,YAAY,EAAE;AAHR;AAFH,SAAP;AAQD;;AACD,SAAK,eAAL;AAAsB;AACpB,cAAM;AAAEG,UAAAA;AAAF,YAAWuB,MAAjB;AACA,eAAO,EACL,GAAGJ,KADE;AAEL1B,UAAAA,QAAQ,EAAE,CAAC,GAAGO,IAAJ;AAFL,SAAP;AAID;;AACD;AACE,aAAOmB,KAAP;AAxBJ;AA0BD;;AAED,eAAe/B,iBAAf","sourcesContent":["import React, { useCallback, useEffect, useReducer, useState } from 'react';\r\nimport ChatHall from '../../components/common/ChatHall';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport io from 'socket.io-client';\r\nimport { socket } from '../../lib/sockets/chatHallSocket';\r\nimport { access, leave } from '../../lib/api/chatHall';\r\nimport { accessChatHall, getGuestNumber } from '../../modules/user';\r\n\r\nconst ChatHallContainer = () => {\r\n  const [msg, setMsg] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const { user, userList } = useSelector(({ user, chatHallUserList }) => ({\r\n    user: user,\r\n    userList: chatHallUserList,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n    }\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   socket.on('broadcastMsg', (data) => {\r\n  //     console.log('receive data : ', data);\r\n  //     dispatch({ type: 'msg', msg: { ...data, received: true } });\r\n  //   });\r\n\r\n  //   return () => {\r\n  //     leaveChatHall({\r\n  //       username: state.myInfo.username,\r\n  //       nickname: state.myInfo.nickname,\r\n  //     });\r\n  //   };\r\n  // }, [dispatch, state]);\r\n\r\n  const accessChatHall = async ({ username, nickname, profileImage }) => {\r\n    const response = await access({ username, nickname, profileImage });\r\n    const { guestInfo, list } = response.data;\r\n    console.log(guestInfo, list);\r\n    if (guestInfo) {\r\n      dispatch({ type: 'set_guest_info', guestInfo });\r\n    }\r\n    dispatch({ type: 'set_user_list', list });\r\n  };\r\n  const leaveChatHall = async ({ username, nickname }) => {\r\n    const response = await leave({ username, nickname });\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setMsg(e.target.value);\r\n  };\r\n\r\n  const changeScroll = useCallback((e) => {\r\n    e.scrollTop = e.scrollHeight;\r\n  }, []);\r\n\r\n  const onSubmit = () => {\r\n    if (msg === '') return;\r\n    socket.emit('msg', { nickname, msg: msg.trim() });\r\n    dispatch({ type: 'msg', msg: { send: true, nickname, msg: msg.trim() } });\r\n    setMsg('');\r\n  };\r\n\r\n  const onKeySubmit = (e) => {\r\n    if (e.key === 'Enter') {\r\n      onSubmit();\r\n      setMsg('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ChatHall\r\n      changeScroll={changeScroll}\r\n      msg={msg}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      onKeySubmit={onKeySubmit}\r\n      msgList={state.msg}\r\n      userList={state.userList}\r\n    />\r\n  );\r\n};\r\n\r\nconst initialState = {\r\n  msg: [],\r\n  myInfo: {\r\n    username: null,\r\n    nickname: null,\r\n    profileImage: null,\r\n  },\r\n  userList: [],\r\n};\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'msg': {\r\n      return { ...initialState, msg: [...state.msg, action.msg] };\r\n    }\r\n    case 'set_guest_info': {\r\n      const { username, nickname } = action.guestInfo;\r\n      console.log(username, nickname);\r\n      return {\r\n        ...state,\r\n        myInfo: {\r\n          username: username,\r\n          nickname: nickname,\r\n          profileImage: null,\r\n        },\r\n      };\r\n    }\r\n    case 'set_user_list': {\r\n      const { list } = action;\r\n      return {\r\n        ...state,\r\n        userList: [...list],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default ChatHallContainer;\r\n"]},"metadata":{},"sourceType":"module"}