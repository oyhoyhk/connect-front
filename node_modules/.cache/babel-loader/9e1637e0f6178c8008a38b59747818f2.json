{"ast":null,"code":"var _jsxFileName = \"C:\\\\nani\\\\connect\\\\connect-frontend\\\\src\\\\containers\\\\Chatting\\\\ChattingContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Chatting from '../../components/Chatting/Chatting';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChattingContainer = () => {\n  _s();\n\n  const [other, setOther] = useState(null);\n  useEffect(() => {\n    if (localStorage.other) {\n      setOther(JSON.parse(localStorage.other));\n    }\n\n    return () => {\n      if (localStorage.other) {\n        localStorage.removeItem('other');\n      }\n    };\n  }, [other]);\n  return /*#__PURE__*/_jsxDEV(Chatting, {\n    other: other\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n};\n\n_s(ChattingContainer, \"acO1XWjyobSk9N4W6I397YEgiQ8=\");\n\n_c = ChattingContainer;\nexport default ChattingContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChattingContainer\");","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/Chatting/ChattingContainer.js"],"names":["React","useEffect","useState","Chatting","ChattingContainer","other","setOther","localStorage","JSON","parse","removeItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,oCAArB;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,IAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,YAAY,CAACF,KAAjB,EAAwB;AACtBC,MAAAA,QAAQ,CAACE,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACF,KAAxB,CAAD,CAAR;AACD;;AACD,WAAO,MAAM;AACX,UAAIE,YAAY,CAACF,KAAjB,EAAwB;AACtBE,QAAAA,YAAY,CAACG,UAAb,CAAwB,OAAxB;AACD;AACF,KAJD;AAKD,GATQ,EASN,CAACL,KAAD,CATM,CAAT;AAUA,sBAAO,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAbD;;GAAMD,iB;;KAAAA,iB;AAeN,eAAeA,iBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Chatting from '../../components/Chatting/Chatting';\r\n\r\nconst ChattingContainer = () => {\r\n  const [other, setOther] = useState(null);\r\n  useEffect(() => {\r\n    if (localStorage.other) {\r\n      setOther(JSON.parse(localStorage.other));\r\n    }\r\n    return () => {\r\n      if (localStorage.other) {\r\n        localStorage.removeItem('other');\r\n      }\r\n    };\r\n  }, [other]);\r\n  return <Chatting other={other} />;\r\n};\r\n\r\nexport default ChattingContainer;\r\n"]},"metadata":{},"sourceType":"module"}