{"ast":null,"code":"var _jsxFileName = \"C:\\\\nani\\\\connect\\\\connect-frontend\\\\src\\\\containers\\\\auth\\\\LoginContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from '../../../node_modules/react-router/index';\nimport LoginForm from '../../components/auth/LoginForm';\nimport { changeField, initializeForm, login, check } from '../../modules/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginContainer = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [err, setErr] = useState(false);\n  const {\n    form,\n    authError,\n    auth,\n    user\n  } = useSelector(_ref => {\n    let {\n      auth,\n      user\n    } = _ref;\n    return {\n      form: auth.login,\n      authError: auth.authError,\n      auth: auth.auth,\n      user\n    };\n  });\n\n  const onChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    dispatch(changeField({\n      form: 'login',\n      key: name,\n      value\n    }));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const {\n      username,\n      password\n    } = form;\n    dispatch(login({\n      username,\n      password\n    }));\n  };\n\n  useEffect(() => {\n    if (authError) {\n      setErr(true);\n      console.log('로그인 실패');\n      return;\n    }\n\n    if (auth) {\n      console.log('로그인 성공');\n      dispatch(check());\n    }\n  }, [authError, auth, dispatch]);\n  useEffect(() => {\n    dispatch(initializeForm('login'));\n  }, [dispatch]);\n  useEffect(() => {\n    if (user) {\n      Navigate('/');\n\n      try {\n        localStorage.setItem('user', JSON.stringify(user));\n      } catch (e) {}\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(LoginForm, {\n    form: form,\n    onChange: onChange,\n    errorMsg: err,\n    onSubmit: onSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginContainer, \"tJ6Q4ztRQkChGpx9rAgj0k8CvJ4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = LoginContainer;\nexport default LoginContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginContainer\");","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/auth/LoginContainer.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Navigate","LoginForm","changeField","initializeForm","login","check","LoginContainer","dispatch","err","setErr","form","authError","auth","user","onChange","e","value","name","target","key","onSubmit","preventDefault","username","password","console","log","localStorage","setItem","JSON","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,0CAAzB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,KAAtC,EAA6CC,KAA7C,QAA0D,oBAA1D;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,KAAD,CAA9B;AACA,QAAM;AAAEa,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAmBC,IAAAA,IAAnB;AAAyBC,IAAAA;AAAzB,MAAkCd,WAAW,CAAC;AAAA,QAAC;AAAEa,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAD;AAAA,WAAqB;AACvEH,MAAAA,IAAI,EAAEE,IAAI,CAACR,KAD4D;AAEvEO,MAAAA,SAAS,EAAEC,IAAI,CAACD,SAFuD;AAGvEC,MAAAA,IAAI,EAAEA,IAAI,CAACA,IAH4D;AAIvEC,MAAAA;AAJuE,KAArB;AAAA,GAAD,CAAnD;;AAMA,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACtB,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBF,CAAC,CAACG,MAA1B;AACAX,IAAAA,QAAQ,CACNL,WAAW,CAAC;AACVQ,MAAAA,IAAI,EAAE,OADI;AAEVS,MAAAA,GAAG,EAAEF,IAFK;AAGVD,MAAAA;AAHU,KAAD,CADL,CAAR;AAOD,GATD;;AAUA,QAAMI,QAAQ,GAAIL,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACM,cAAF;AACA,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAyBb,IAA/B;AACAH,IAAAA,QAAQ,CAACH,KAAK,CAAC;AAAEkB,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAD,CAAN,CAAR;AACD,GAJD;;AAKA3B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,SAAJ,EAAe;AACbF,MAAAA,MAAM,CAAC,IAAD,CAAN;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA;AACD;;AACD,QAAIb,IAAJ,EAAU;AACRY,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAlB,MAAAA,QAAQ,CAACF,KAAK,EAAN,CAAR;AACD;AACF,GAVQ,EAUN,CAACM,SAAD,EAAYC,IAAZ,EAAkBL,QAAlB,CAVM,CAAT;AAWAX,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAACJ,cAAc,CAAC,OAAD,CAAf,CAAR;AACD,GAFQ,EAEN,CAACI,QAAD,CAFM,CAAT;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,IAAJ,EAAU;AACRb,MAAAA,QAAQ,CAAC,GAAD,CAAR;;AACA,UAAI;AACF0B,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAehB,IAAf,CAA7B;AACD,OAFD,CAEE,OAAOE,CAAP,EAAU,CAAE;AACf;AACF,GAPQ,CAAT;AAQA,sBACE,QAAC,SAAD;AACE,IAAA,IAAI,EAAEL,IADR;AAEE,IAAA,QAAQ,EAAEI,QAFZ;AAGE,IAAA,QAAQ,EAAEN,GAHZ;AAIE,IAAA,QAAQ,EAAEY;AAJZ;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAvDD;;GAAMd,c;UACaR,W,EAEuBC,W;;;KAHpCO,c;AAyDN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Navigate } from '../../../node_modules/react-router/index';\r\nimport LoginForm from '../../components/auth/LoginForm';\r\nimport { changeField, initializeForm, login, check } from '../../modules/auth';\r\n\r\nconst LoginContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const [err, setErr] = useState(false);\r\n  const { form, authError, auth, user } = useSelector(({ auth, user }) => ({\r\n    form: auth.login,\r\n    authError: auth.authError,\r\n    auth: auth.auth,\r\n    user,\r\n  }));\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    dispatch(\r\n      changeField({\r\n        form: 'login',\r\n        key: name,\r\n        value,\r\n      }),\r\n    );\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { username, password } = form;\r\n    dispatch(login({ username, password }));\r\n  };\r\n  useEffect(() => {\r\n    if (authError) {\r\n      setErr(true);\r\n      console.log('로그인 실패');\r\n      return;\r\n    }\r\n    if (auth) {\r\n      console.log('로그인 성공');\r\n      dispatch(check());\r\n    }\r\n  }, [authError, auth, dispatch]);\r\n  useEffect(() => {\r\n    dispatch(initializeForm('login'));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      Navigate('/');\r\n      try {\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n      } catch (e) {}\r\n    }\r\n  });\r\n  return (\r\n    <LoginForm\r\n      form={form}\r\n      onChange={onChange}\r\n      errorMsg={err}\r\n      onSubmit={onSubmit}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LoginContainer;\r\n"]},"metadata":{},"sourceType":"module"}