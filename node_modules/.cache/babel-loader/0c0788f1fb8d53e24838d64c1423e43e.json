{"ast":null,"code":"import _defineProperty from\"C:/nani/connect/connect-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _toConsumableArray from\"C:/nani/connect/connect-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"C:/nani/connect/connect-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/nani/connect/connect-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _handleActions;import _regeneratorRuntime from\"C:\\\\nani\\\\connect\\\\connect-frontend\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(friendsSaga);import{createAction,handleActions}from'redux-actions';import{takeLatest}from'redux-saga/effects';import createRequestSaga,{createRequestActionTypes}from'../lib/createRequestSaga';import*as friendsAPI from'../lib/api/friends';var REMOVE_TAG_IN_FRONT='friends/REMOVE_TAG_IN_FRONT';var ADD_TAG_IN_FRONT='friends/ADD_TAG_IN_FRONT';var RECEIVE_MESSAGE='frends/RECEIVE_MESSAGE';var FRIEND_REQUEST_ACCEPTED='friends/FRIEND_REQUEST_ACCEPTED';var FRIEND_REQUEST_REFUSED='friends/FRIEND_REQUEST_REFUSED';var SOMEONE_LOGIN='friends/SOMEONE_LOGIN';var SOMEONE_LOGOUT='friends/SOMEONE_LOGOUT';var ADD_MESSAGE_WHEN_FRIEND_REQUEST='friends/ADD_MESSAGE_WHEN_FRIEND_REQUEST';var _createRequestActionT=createRequestActionTypes('friends/SET_FRIENDS'),_createRequestActionT2=_slicedToArray(_createRequestActionT,3),LOAD_FRIENDS_LIST=_createRequestActionT2[0],LOAD_FRIENDS_LIST_SUCCESS=_createRequestActionT2[1],LOAD_FRIENDS_LIST_FAILURE=_createRequestActionT2[2];var _createRequestActionT3=createRequestActionTypes('friends/SET_TAGS'),_createRequestActionT4=_slicedToArray(_createRequestActionT3,3),LOAD_TAGS=_createRequestActionT4[0],LOAD_TAGS_SUCCESS=_createRequestActionT4[1],LOAD_TAGS_FAILURE=_createRequestActionT4[2];var _createRequestActionT5=createRequestActionTypes('friends/ADD_TAG'),_createRequestActionT6=_slicedToArray(_createRequestActionT5,3),ADD_TAG=_createRequestActionT6[0],ADD_TAG_SUCCESS=_createRequestActionT6[1],ADD_TAG_FAILURE=_createRequestActionT6[2];var _createRequestActionT7=createRequestActionTypes('frineds/REMOVE_TAG'),_createRequestActionT8=_slicedToArray(_createRequestActionT7,3),REMOVE_TAG=_createRequestActionT8[0],REMOVE_TAG_SUCCESS=_createRequestActionT8[1],REMOVE_TAG_FAILURE=_createRequestActionT8[2];var _createRequestActionT9=createRequestActionTypes('friends/GET_RECOMMEND'),_createRequestActionT10=_slicedToArray(_createRequestActionT9,3),GET_RECOMMEND=_createRequestActionT10[0],GET_RECOMMEND_SUCCESS=_createRequestActionT10[1],GET_RECOMMEND_FAILURE=_createRequestActionT10[2];var _createRequestActionT11=createRequestActionTypes('friends/FRIEND_REQUEST'),_createRequestActionT12=_slicedToArray(_createRequestActionT11,3),FRIEND_REQUEST=_createRequestActionT12[0],FRIEND_REQUEST_SUCCESS=_createRequestActionT12[1],FRIEND_REQUEST_FAILURE=_createRequestActionT12[2];var _createRequestActionT13=createRequestActionTypes('friends/REQUEST_FRIENDS_LIST'),_createRequestActionT14=_slicedToArray(_createRequestActionT13,3),REQUEST_FRIENDS_LIST=_createRequestActionT14[0],REQUEST_FRIENDS_LIST_SUCCESS=_createRequestActionT14[1],REQUEST_FRIENDS_LIST_FAILURE=_createRequestActionT14[2];var _createRequestActionT15=createRequestActionTypes('friends/REQUEST_MESSAGES_LIST'),_createRequestActionT16=_slicedToArray(_createRequestActionT15,3),REQUEST_MESSAGES_LIST=_createRequestActionT16[0],REQUEST_MESSAGES_LIST_SUCCESS=_createRequestActionT16[1],REQUEST_MESSAGES_LIST_FAILURE=_createRequestActionT16[2];var _createRequestActionT17=createRequestActionTypes('friends/ACCEPT_FRIEND_REQUEST'),_createRequestActionT18=_slicedToArray(_createRequestActionT17,3),ACCEPT_FRIEND_REQUEST=_createRequestActionT18[0],ACCEPT_FRIEND_REQUEST_SUCCESS=_createRequestActionT18[1],ACCEPT_FRIEND_REQUEST_FAILURE=_createRequestActionT18[2];var _createRequestActionT19=createRequestActionTypes('friend/REFUSE_FRIEND_REQUEST'),_createRequestActionT20=_slicedToArray(_createRequestActionT19,3),REFUSE_FRIEND_REQUEST=_createRequestActionT20[0],REFUSE_FRIEND_REQUEST_SUCCESS=_createRequestActionT20[1],REFUSE_FRIEND_REQUEST_FAILURE=_createRequestActionT20[2];var _createRequestActionT21=createRequestActionTypes('friend/CANCEL_FRIEND_REQUEST'),_createRequestActionT22=_slicedToArray(_createRequestActionT21,3),CANCEL_FRIEND_REQUEST=_createRequestActionT22[0],CANCEL_FRIEND_REQUEST_SUCCESS=_createRequestActionT22[1],CANCEL_FRIEND_REQUEST_FAILURE=_createRequestActionT22[2];export var loadTags=createAction(LOAD_TAGS);export var addTag=createAction(ADD_TAG);export var addTagInFront=createAction(ADD_TAG_IN_FRONT);export var removeTag=createAction(REMOVE_TAG);export var removeTagInFront=createAction(REMOVE_TAG_IN_FRONT);export var getRecommend=createAction(GET_RECOMMEND);export var friendRequest=createAction(FRIEND_REQUEST);export var requestFriendsList=createAction(REQUEST_FRIENDS_LIST);export var receiveMessage=createAction(RECEIVE_MESSAGE);export var requestMessagesList=createAction(REQUEST_MESSAGES_LIST);export var acceptFriendRequest=createAction(ACCEPT_FRIEND_REQUEST);export var refuseFriendRequest=createAction(REFUSE_FRIEND_REQUEST);export var friendRequestAccepted=createAction(FRIEND_REQUEST_ACCEPTED);export var friendRequestRefused=createAction(FRIEND_REQUEST_REFUSED);export var addMessageWhenFriendRequest=createAction(ADD_MESSAGE_WHEN_FRIEND_REQUEST);export var cancelFriendRequest=createAction(CANCEL_FRIEND_REQUEST);export var someoneLogin=createAction(SOMEONE_LOGIN);export var someoneLogout=createAction(SOMEONE_LOGOUT);var loadFriendsListSaga=createRequestSaga(LOAD_FRIENDS_LIST);var loadTagsSaga=createRequestSaga(LOAD_TAGS,friendsAPI.loadTags);var addTagSaga=createRequestSaga(ADD_TAG,friendsAPI.addTag);var removeTagSaga=createRequestSaga(REMOVE_TAG,friendsAPI.removeTag);var getRecommendSaga=createRequestSaga(GET_RECOMMEND,friendsAPI.getRecommend);var friendRequestSaga=createRequestSaga(FRIEND_REQUEST,friendsAPI.friendRequest);var requestFriendsListSaga=createRequestSaga(REQUEST_FRIENDS_LIST,friendsAPI.requestFriendsList);var requestMessagesListSaga=createRequestSaga(REQUEST_MESSAGES_LIST,friendsAPI.requestMessagesList);var acceptFriendRequestSaga=createRequestSaga(ACCEPT_FRIEND_REQUEST,friendsAPI.acceptFriendRequest);var refuseFriendRequestSaga=createRequestSaga(REFUSE_FRIEND_REQUEST,friendsAPI.refuseFriendRequest);export function friendsSaga(){return _regeneratorRuntime.wrap(function friendsSaga$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return takeLatest(LOAD_FRIENDS_LIST,loadFriendsListSaga);case 2:_context.next=4;return takeLatest(LOAD_TAGS,loadTagsSaga);case 4:_context.next=6;return takeLatest(ADD_TAG,addTagSaga);case 6:_context.next=8;return takeLatest(REMOVE_TAG,removeTagSaga);case 8:_context.next=10;return takeLatest(GET_RECOMMEND,getRecommendSaga);case 10:_context.next=12;return takeLatest(FRIEND_REQUEST,friendRequestSaga);case 12:_context.next=14;return takeLatest(REQUEST_FRIENDS_LIST,requestFriendsListSaga);case 14:_context.next=16;return takeLatest(REQUEST_MESSAGES_LIST,requestMessagesListSaga);case 16:_context.next=18;return takeLatest(ACCEPT_FRIEND_REQUEST,acceptFriendRequestSaga);case 18:_context.next=20;return takeLatest(REFUSE_FRIEND_REQUEST,refuseFriendRequestSaga);case 20:case\"end\":return _context.stop();}}},_marked);}var initialState={friendsList:[],tagList:'',error:null,recommendList:[],friendRequestList:[],messagesList:[]};export default handleActions((_handleActions={},_defineProperty(_handleActions,LOAD_TAGS_SUCCESS,function(state,_ref){var tags=_ref.payload;return _objectSpread(_objectSpread({},state),{},{tagList:tags});}),_defineProperty(_handleActions,LOAD_TAGS_FAILURE,function(state,_ref2){var error=_ref2.payload;return _objectSpread(_objectSpread({},state),{},{error:error});}),_defineProperty(_handleActions,LOAD_FRIENDS_LIST_SUCCESS,function(state,_ref3){var friendsList=_ref3.payload;return _objectSpread(_objectSpread({},state),{},{friendsList:_toConsumableArray(friendsList)});}),_defineProperty(_handleActions,LOAD_FRIENDS_LIST_FAILURE,function(state,_ref4){var error=_ref4.payload;return _objectSpread(_objectSpread({},state),{},{error:error});}),_defineProperty(_handleActions,ADD_TAG_SUCCESS,function(state){return _objectSpread({},state);}),_defineProperty(_handleActions,ADD_TAG_FAILURE,function(state,_ref5){var error=_ref5.payload;return _objectSpread(_objectSpread({},state),{},{error:error});}),_defineProperty(_handleActions,ADD_TAG_IN_FRONT,function(state,_ref6){var tag=_ref6.payload;return _objectSpread(_objectSpread({},state),{},{tagList:state.tagList+'_'+tag});}),_defineProperty(_handleActions,REMOVE_TAG_SUCCESS,function(state){return _objectSpread({},state);}),_defineProperty(_handleActions,REMOVE_TAG_FAILURE,function(state,_ref7){var error=_ref7.payload;return _objectSpread(_objectSpread({},state),{},{error:error});}),_defineProperty(_handleActions,REMOVE_TAG_IN_FRONT,function(state,_ref8){var tag=_ref8.payload;return _objectSpread(_objectSpread({},state),{},{tagList:state.tagList.split('_').filter(function(el){return el!==tag;}).join('_')});}),_defineProperty(_handleActions,GET_RECOMMEND_SUCCESS,function(state,_ref9){var list=_ref9.payload;return _objectSpread(_objectSpread({},state),{},{recommendList:_toConsumableArray(list)});}),_defineProperty(_handleActions,GET_RECOMMEND_FAILURE,function(state,_ref10){var error=_ref10.payload;return _objectSpread(_objectSpread({},state),{},{error:error});}),_defineProperty(_handleActions,FRIEND_REQUEST_SUCCESS,function(state,_ref11){var list=_ref11.payload;return _objectSpread(_objectSpread({},state),{},{friendRequestList:_toConsumableArray(list)});}),_defineProperty(_handleActions,FRIEND_REQUEST_FAILURE,function(state,_ref12){var error=_ref12.payload;return _objectSpread(_objectSpread({},state),{},{error:error});}),_defineProperty(_handleActions,REQUEST_FRIENDS_LIST_SUCCESS,function(state,_ref13){var friendsList=_ref13.payload;return _objectSpread(_objectSpread({},state),{},{friendsList:friendsList});}),_defineProperty(_handleActions,REQUEST_FRIENDS_LIST_FAILURE,function(state,_ref14){var error=_ref14.payload;return _objectSpread(_objectSpread({},state),{},{error:error});}),_defineProperty(_handleActions,RECEIVE_MESSAGE,function(state,_ref15){var data=_ref15.payload;return _objectSpread(_objectSpread({},state),{},{messagesList:[].concat(_toConsumableArray(state.messagesList),[_objectSpread({},data)])});}),_defineProperty(_handleActions,REQUEST_MESSAGES_LIST_SUCCESS,function(state,_ref16){var messagesList=_ref16.payload;var result=messagesList.map(function(el){var info=JSON.parse(el.info);info.type=el.type;info.time=el.CREATED_AT.slice(2,10).split('-').join('.');return info;});return _objectSpread(_objectSpread({},state),{},{messagesList:_toConsumableArray(result)});}),_defineProperty(_handleActions,REQUEST_MESSAGES_LIST_FAILURE,function(state,_ref17){var error=_ref17.payload;return _objectSpread(_objectSpread({},state),{},{error:error});}),_defineProperty(_handleActions,ACCEPT_FRIEND_REQUEST_SUCCESS,function(state,_ref18){var _ref18$payload=_ref18.payload,friendsList=_ref18$payload.friendsList,messagesList=_ref18$payload.messagesList;return _objectSpread(_objectSpread({},state),{},{messagesList:_toConsumableArray(messagesList.map(function(message){return JSON.parse(message.SENDER_INFO);})),friendsList:_toConsumableArray(friendsList)});}),_defineProperty(_handleActions,ACCEPT_FRIEND_REQUEST_FAILURE,function(state,_ref19){var error=_ref19.payload;return _objectSpread(_objectSpread({},state),{},{error:error});}),_defineProperty(_handleActions,REFUSE_FRIEND_REQUEST_SUCCESS,function(state,_ref20){var messagesList=_ref20.payload;var result=messagesList.map(function(message){message.info=JSON.parse(message.info);message.info.time=message.CREATED_AT.slice(0,10).split('-').join('.');message.info.type=message.type;return message.info;});return _objectSpread(_objectSpread({},state),{},{messagesList:_toConsumableArray(result)});}),_defineProperty(_handleActions,REFUSE_FRIEND_REQUEST_FAILURE,function(state,_ref21){var error=_ref21.payload;return _objectSpread(_objectSpread({},state),{},{error:error});}),_defineProperty(_handleActions,FRIEND_REQUEST_ACCEPTED,function(state,_ref22){var info=_ref22.payload;return _objectSpread(_objectSpread({},state),{},{friendsList:[].concat(_toConsumableArray(state.friendsList),[info])});}),_defineProperty(_handleActions,FRIEND_REQUEST_REFUSED,function(state,_ref23){var uid=_ref23.payload;console.log(uid);return _objectSpread(_objectSpread({},state),{},{messagesList:state.messagesList.filter(function(el){return el.uid!==uid;})});}),_defineProperty(_handleActions,ADD_MESSAGE_WHEN_FRIEND_REQUEST,function(state,_ref24){var receiver=_ref24.payload;return _objectSpread(_objectSpread({},state),{},{messagesList:[_objectSpread({},receiver)].concat(_toConsumableArray(state.messagesList))});}),_defineProperty(_handleActions,CANCEL_FRIEND_REQUEST_SUCCESS,function(state,_ref25){var messagesList=_ref25.payload;var result=messagesList.map(function(el){var info=JSON.parse(el.info);info.type=el.type;info.time=el.CREATED_AT.slice(2,10).split('-').join('.');return info;});return _objectSpread(_objectSpread({},state),{},{messagesList:_toConsumableArray(result)});}),_defineProperty(_handleActions,CANCEL_FRIEND_REQUEST_FAILURE,function(state,_ref26){var error=_ref26.payload;return _objectSpread(_objectSpread({},state),{},{error:error});}),_defineProperty(_handleActions,SOMEONE_LOGIN,function(state,_ref27){var uid=_ref27.payload;return _objectSpread(_objectSpread({},state),{},{friendsList:state.friendsList.map(function(friend){return friend.uid===uid?_objectSpread(_objectSpread({},friend),{},{status:true}):_objectSpread({},friend);}).sort(function(a,b){if(a.status&&!b.status)return-1;else if(!a.status&&b.status)return 1;else return a.uid-b.uid;})});}),_defineProperty(_handleActions,SOMEONE_LOGOUT,function(state,_ref28){var uid=_ref28.payload;return _objectSpread(_objectSpread({},state),{},{friendsList:state.friendsList.map(function(friend){return friend.uid===uid?_objectSpread(_objectSpread({},friend),{},{status:false}):_objectSpread({},friend);}).sort(function(a,b){if(a.status&&!b.status)return-1;else if(!a.status&&b.status)return 1;else return a.uid-b.uid;})});}),_handleActions),initialState);","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/modules/friends.js"],"names":["friendsSaga","createAction","handleActions","takeLatest","createRequestSaga","createRequestActionTypes","friendsAPI","REMOVE_TAG_IN_FRONT","ADD_TAG_IN_FRONT","RECEIVE_MESSAGE","FRIEND_REQUEST_ACCEPTED","FRIEND_REQUEST_REFUSED","SOMEONE_LOGIN","SOMEONE_LOGOUT","ADD_MESSAGE_WHEN_FRIEND_REQUEST","LOAD_FRIENDS_LIST","LOAD_FRIENDS_LIST_SUCCESS","LOAD_FRIENDS_LIST_FAILURE","LOAD_TAGS","LOAD_TAGS_SUCCESS","LOAD_TAGS_FAILURE","ADD_TAG","ADD_TAG_SUCCESS","ADD_TAG_FAILURE","REMOVE_TAG","REMOVE_TAG_SUCCESS","REMOVE_TAG_FAILURE","GET_RECOMMEND","GET_RECOMMEND_SUCCESS","GET_RECOMMEND_FAILURE","FRIEND_REQUEST","FRIEND_REQUEST_SUCCESS","FRIEND_REQUEST_FAILURE","REQUEST_FRIENDS_LIST","REQUEST_FRIENDS_LIST_SUCCESS","REQUEST_FRIENDS_LIST_FAILURE","REQUEST_MESSAGES_LIST","REQUEST_MESSAGES_LIST_SUCCESS","REQUEST_MESSAGES_LIST_FAILURE","ACCEPT_FRIEND_REQUEST","ACCEPT_FRIEND_REQUEST_SUCCESS","ACCEPT_FRIEND_REQUEST_FAILURE","REFUSE_FRIEND_REQUEST","REFUSE_FRIEND_REQUEST_SUCCESS","REFUSE_FRIEND_REQUEST_FAILURE","CANCEL_FRIEND_REQUEST","CANCEL_FRIEND_REQUEST_SUCCESS","CANCEL_FRIEND_REQUEST_FAILURE","loadTags","addTag","addTagInFront","removeTag","removeTagInFront","getRecommend","friendRequest","requestFriendsList","receiveMessage","requestMessagesList","acceptFriendRequest","refuseFriendRequest","friendRequestAccepted","friendRequestRefused","addMessageWhenFriendRequest","cancelFriendRequest","someoneLogin","someoneLogout","loadFriendsListSaga","loadTagsSaga","addTagSaga","removeTagSaga","getRecommendSaga","friendRequestSaga","requestFriendsListSaga","requestMessagesListSaga","acceptFriendRequestSaga","refuseFriendRequestSaga","initialState","friendsList","tagList","error","recommendList","friendRequestList","messagesList","state","tags","payload","tag","split","filter","el","join","list","data","result","map","info","JSON","parse","type","time","CREATED_AT","slice","message","SENDER_INFO","uid","console","log","receiver","friend","status","sort","a","b"],"mappings":"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","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\r\nimport { takeLatest } from 'redux-saga/effects';\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from '../lib/createRequestSaga';\r\nimport * as friendsAPI from '../lib/api/friends';\r\n\r\nconst REMOVE_TAG_IN_FRONT = 'friends/REMOVE_TAG_IN_FRONT';\r\nconst ADD_TAG_IN_FRONT = 'friends/ADD_TAG_IN_FRONT';\r\nconst RECEIVE_MESSAGE = 'frends/RECEIVE_MESSAGE';\r\nconst FRIEND_REQUEST_ACCEPTED = 'friends/FRIEND_REQUEST_ACCEPTED';\r\nconst FRIEND_REQUEST_REFUSED = 'friends/FRIEND_REQUEST_REFUSED';\r\nconst SOMEONE_LOGIN = 'friends/SOMEONE_LOGIN';\r\nconst SOMEONE_LOGOUT = 'friends/SOMEONE_LOGOUT';\r\nconst ADD_MESSAGE_WHEN_FRIEND_REQUEST =\r\n  'friends/ADD_MESSAGE_WHEN_FRIEND_REQUEST';\r\nconst [\r\n  LOAD_FRIENDS_LIST,\r\n  LOAD_FRIENDS_LIST_SUCCESS,\r\n  LOAD_FRIENDS_LIST_FAILURE,\r\n] = createRequestActionTypes('friends/SET_FRIENDS');\r\nconst [LOAD_TAGS, LOAD_TAGS_SUCCESS, LOAD_TAGS_FAILURE] =\r\n  createRequestActionTypes('friends/SET_TAGS');\r\nconst [ADD_TAG, ADD_TAG_SUCCESS, ADD_TAG_FAILURE] =\r\n  createRequestActionTypes('friends/ADD_TAG');\r\nconst [REMOVE_TAG, REMOVE_TAG_SUCCESS, REMOVE_TAG_FAILURE] =\r\n  createRequestActionTypes('frineds/REMOVE_TAG');\r\nconst [GET_RECOMMEND, GET_RECOMMEND_SUCCESS, GET_RECOMMEND_FAILURE] =\r\n  createRequestActionTypes('friends/GET_RECOMMEND');\r\nconst [FRIEND_REQUEST, FRIEND_REQUEST_SUCCESS, FRIEND_REQUEST_FAILURE] =\r\n  createRequestActionTypes('friends/FRIEND_REQUEST');\r\nconst [\r\n  REQUEST_FRIENDS_LIST,\r\n  REQUEST_FRIENDS_LIST_SUCCESS,\r\n  REQUEST_FRIENDS_LIST_FAILURE,\r\n] = createRequestActionTypes('friends/REQUEST_FRIENDS_LIST');\r\nconst [\r\n  REQUEST_MESSAGES_LIST,\r\n  REQUEST_MESSAGES_LIST_SUCCESS,\r\n  REQUEST_MESSAGES_LIST_FAILURE,\r\n] = createRequestActionTypes('friends/REQUEST_MESSAGES_LIST');\r\nconst [\r\n  ACCEPT_FRIEND_REQUEST,\r\n  ACCEPT_FRIEND_REQUEST_SUCCESS,\r\n  ACCEPT_FRIEND_REQUEST_FAILURE,\r\n] = createRequestActionTypes('friends/ACCEPT_FRIEND_REQUEST');\r\n\r\nconst [\r\n  REFUSE_FRIEND_REQUEST,\r\n  REFUSE_FRIEND_REQUEST_SUCCESS,\r\n  REFUSE_FRIEND_REQUEST_FAILURE,\r\n] = createRequestActionTypes('friend/REFUSE_FRIEND_REQUEST');\r\n\r\nconst [\r\n  CANCEL_FRIEND_REQUEST,\r\n  CANCEL_FRIEND_REQUEST_SUCCESS,\r\n  CANCEL_FRIEND_REQUEST_FAILURE,\r\n] = createRequestActionTypes('friend/CANCEL_FRIEND_REQUEST');\r\n\r\nexport const loadTags = createAction(LOAD_TAGS);\r\nexport const addTag = createAction(ADD_TAG);\r\nexport const addTagInFront = createAction(ADD_TAG_IN_FRONT);\r\nexport const removeTag = createAction(REMOVE_TAG);\r\nexport const removeTagInFront = createAction(REMOVE_TAG_IN_FRONT);\r\nexport const getRecommend = createAction(GET_RECOMMEND);\r\nexport const friendRequest = createAction(FRIEND_REQUEST);\r\nexport const requestFriendsList = createAction(REQUEST_FRIENDS_LIST);\r\nexport const receiveMessage = createAction(RECEIVE_MESSAGE);\r\nexport const requestMessagesList = createAction(REQUEST_MESSAGES_LIST);\r\nexport const acceptFriendRequest = createAction(ACCEPT_FRIEND_REQUEST);\r\nexport const refuseFriendRequest = createAction(REFUSE_FRIEND_REQUEST);\r\nexport const friendRequestAccepted = createAction(FRIEND_REQUEST_ACCEPTED);\r\nexport const friendRequestRefused = createAction(FRIEND_REQUEST_REFUSED);\r\nexport const addMessageWhenFriendRequest = createAction(\r\n  ADD_MESSAGE_WHEN_FRIEND_REQUEST,\r\n);\r\nexport const cancelFriendRequest = createAction(CANCEL_FRIEND_REQUEST);\r\nexport const someoneLogin = createAction(SOMEONE_LOGIN);\r\nexport const someoneLogout = createAction(SOMEONE_LOGOUT);\r\n\r\nconst loadFriendsListSaga = createRequestSaga(LOAD_FRIENDS_LIST);\r\nconst loadTagsSaga = createRequestSaga(LOAD_TAGS, friendsAPI.loadTags);\r\nconst addTagSaga = createRequestSaga(ADD_TAG, friendsAPI.addTag);\r\nconst removeTagSaga = createRequestSaga(REMOVE_TAG, friendsAPI.removeTag);\r\nconst getRecommendSaga = createRequestSaga(\r\n  GET_RECOMMEND,\r\n  friendsAPI.getRecommend,\r\n);\r\nconst friendRequestSaga = createRequestSaga(\r\n  FRIEND_REQUEST,\r\n  friendsAPI.friendRequest,\r\n);\r\nconst requestFriendsListSaga = createRequestSaga(\r\n  REQUEST_FRIENDS_LIST,\r\n  friendsAPI.requestFriendsList,\r\n);\r\nconst requestMessagesListSaga = createRequestSaga(\r\n  REQUEST_MESSAGES_LIST,\r\n  friendsAPI.requestMessagesList,\r\n);\r\nconst acceptFriendRequestSaga = createRequestSaga(\r\n  ACCEPT_FRIEND_REQUEST,\r\n  friendsAPI.acceptFriendRequest,\r\n);\r\nconst refuseFriendRequestSaga = createRequestSaga(\r\n  REFUSE_FRIEND_REQUEST,\r\n  friendsAPI.refuseFriendRequest,\r\n);\r\n\r\nexport function* friendsSaga() {\r\n  yield takeLatest(LOAD_FRIENDS_LIST, loadFriendsListSaga);\r\n  yield takeLatest(LOAD_TAGS, loadTagsSaga);\r\n  yield takeLatest(ADD_TAG, addTagSaga);\r\n  yield takeLatest(REMOVE_TAG, removeTagSaga);\r\n  yield takeLatest(GET_RECOMMEND, getRecommendSaga);\r\n  yield takeLatest(FRIEND_REQUEST, friendRequestSaga);\r\n  yield takeLatest(REQUEST_FRIENDS_LIST, requestFriendsListSaga);\r\n  yield takeLatest(REQUEST_MESSAGES_LIST, requestMessagesListSaga);\r\n  yield takeLatest(ACCEPT_FRIEND_REQUEST, acceptFriendRequestSaga);\r\n  yield takeLatest(REFUSE_FRIEND_REQUEST, refuseFriendRequestSaga);\r\n}\r\n\r\nconst initialState = {\r\n  friendsList: [],\r\n  tagList: '',\r\n  error: null,\r\n  recommendList: [],\r\n  friendRequestList: [],\r\n  messagesList: [],\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [LOAD_TAGS_SUCCESS]: (state, { payload: tags }) => ({\r\n      ...state,\r\n      tagList: tags,\r\n    }),\r\n    [LOAD_TAGS_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [LOAD_FRIENDS_LIST_SUCCESS]: (state, { payload: friendsList }) => ({\r\n      ...state,\r\n      friendsList: [...friendsList],\r\n    }),\r\n    [LOAD_FRIENDS_LIST_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [ADD_TAG_SUCCESS]: (state) => ({\r\n      ...state,\r\n    }),\r\n    [ADD_TAG_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [ADD_TAG_IN_FRONT]: (state, { payload: tag }) => ({\r\n      ...state,\r\n      tagList: state.tagList + '_' + tag,\r\n    }),\r\n    [REMOVE_TAG_SUCCESS]: (state) => ({\r\n      ...state,\r\n    }),\r\n    [REMOVE_TAG_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [REMOVE_TAG_IN_FRONT]: (state, { payload: tag }) => ({\r\n      ...state,\r\n      tagList: state.tagList\r\n        .split('_')\r\n        .filter((el) => el !== tag)\r\n        .join('_'),\r\n    }),\r\n    [GET_RECOMMEND_SUCCESS]: (state, { payload: list }) => ({\r\n      ...state,\r\n      recommendList: [...list],\r\n    }),\r\n    [GET_RECOMMEND_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [FRIEND_REQUEST_SUCCESS]: (state, { payload: list }) => ({\r\n      ...state,\r\n      friendRequestList: [...list],\r\n    }),\r\n    [FRIEND_REQUEST_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [REQUEST_FRIENDS_LIST_SUCCESS]: (state, { payload: friendsList }) => ({\r\n      ...state,\r\n      friendsList,\r\n    }),\r\n    [REQUEST_FRIENDS_LIST_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [RECEIVE_MESSAGE]: (state, { payload: data }) => ({\r\n      ...state,\r\n      messagesList: [...state.messagesList, { ...data }],\r\n    }),\r\n    [REQUEST_MESSAGES_LIST_SUCCESS]: (state, { payload: messagesList }) => {\r\n      const result = messagesList.map((el) => {\r\n        const info = JSON.parse(el.info);\r\n        info.type = el.type;\r\n        info.time = el.CREATED_AT.slice(2, 10).split('-').join('.');\r\n        return info;\r\n      });\r\n      return {\r\n        ...state,\r\n        messagesList: [...result],\r\n      };\r\n    },\r\n    [REQUEST_MESSAGES_LIST_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [ACCEPT_FRIEND_REQUEST_SUCCESS]: (\r\n      state,\r\n      { payload: { friendsList, messagesList } },\r\n    ) => ({\r\n      ...state,\r\n      messagesList: [\r\n        ...messagesList.map((message) => JSON.parse(message.SENDER_INFO)),\r\n      ],\r\n      friendsList: [...friendsList],\r\n    }),\r\n    [ACCEPT_FRIEND_REQUEST_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [REFUSE_FRIEND_REQUEST_SUCCESS]: (state, { payload: messagesList }) => {\r\n      const result = messagesList.map((message) => {\r\n        message.info = JSON.parse(message.info);\r\n        message.info.time = message.CREATED_AT.slice(0, 10)\r\n          .split('-')\r\n          .join('.');\r\n        message.info.type = message.type;\r\n        return message.info;\r\n      });\r\n      return {\r\n        ...state,\r\n        messagesList: [...result],\r\n      };\r\n    },\r\n    [REFUSE_FRIEND_REQUEST_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [FRIEND_REQUEST_ACCEPTED]: (state, { payload: info }) => ({\r\n      ...state,\r\n      friendsList: [...state.friendsList, info],\r\n    }),\r\n    [FRIEND_REQUEST_REFUSED]: (state, { payload: uid }) => {\r\n      console.log(uid);\r\n      return {\r\n        ...state,\r\n        messagesList: state.messagesList.filter((el) => el.uid !== uid),\r\n      };\r\n    },\r\n    [ADD_MESSAGE_WHEN_FRIEND_REQUEST]: (state, { payload: receiver }) => ({\r\n      ...state,\r\n      messagesList: [{ ...receiver }, ...state.messagesList],\r\n    }),\r\n    [CANCEL_FRIEND_REQUEST_SUCCESS]: (state, { payload: messagesList }) => {\r\n      const result = messagesList.map((el) => {\r\n        const info = JSON.parse(el.info);\r\n        info.type = el.type;\r\n        info.time = el.CREATED_AT.slice(2, 10).split('-').join('.');\r\n        return info;\r\n      });\r\n      return {\r\n        ...state,\r\n        messagesList: [...result],\r\n      };\r\n    },\r\n    [CANCEL_FRIEND_REQUEST_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [SOMEONE_LOGIN]: (state, { payload: uid }) => ({\r\n      ...state,\r\n      friendsList: state.friendsList\r\n        .map((friend) =>\r\n          friend.uid === uid ? { ...friend, status: true } : { ...friend },\r\n        )\r\n        .sort((a, b) => {\r\n          if (a.status && !b.status) return -1;\r\n          else if (!a.status && b.status) return 1;\r\n          else return a.uid - b.uid;\r\n        }),\r\n    }),\r\n    [SOMEONE_LOGOUT]: (state, { payload: uid }) => ({\r\n      ...state,\r\n      friendsList: state.friendsList\r\n        .map((friend) =>\r\n          friend.uid === uid ? { ...friend, status: false } : { ...friend },\r\n        )\r\n        .sort((a, b) => {\r\n          if (a.status && !b.status) return -1;\r\n          else if (!a.status && b.status) return 1;\r\n          else return a.uid - b.uid;\r\n        }),\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n"]},"metadata":{},"sourceType":"module"}