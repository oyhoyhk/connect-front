{"ast":null,"code":"var _jsxFileName = \"C:\\\\nani\\\\connect\\\\connect-frontend\\\\src\\\\containers\\\\common\\\\HeaderContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Header from '../../components/common/Header';\nimport Navigation from '../../components/common/Navigation';\nimport { removeAuth } from '../../modules/auth';\nimport { initializeChatHall, leaveChatHall } from '../../modules/chatHall';\nimport { receiveMessage, requestMessagesList } from '../../modules/friends';\nimport { logout } from '../../modules/user';\nimport { socket } from '../../lib/sockets/chatHallSocket';\nimport { useNavigate } from '../../../node_modules/react-router/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HeaderContainer = () => {\n  _s();\n\n  const {\n    user,\n    messages\n  } = useSelector(_ref => {\n    let {\n      user,\n      friends\n    } = _ref;\n    return {\n      user: user.user,\n      messages: friends.messagesList\n    };\n  });\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [noticeList, setNoticeList] = useState(false);\n  const toggleNoticeList = useCallback(() => {\n    setNoticeList(!noticeList);\n  }, [noticeList]);\n\n  const onLogout = () => {\n    dispatch(logout());\n    dispatch(removeAuth());\n\n    if (localStorage.chatHall) {\n      dispatch(leaveChatHall({\n        username: user.username\n      }));\n      dispatch(initializeChatHall());\n      localStorage.removeItem('chatHall');\n    }\n\n    navigate('/');\n  };\n\n  useEffect(() => {\n    if (user) {\n      const {\n        uid\n      } = user;\n      dispatch(requestMessagesList({\n        uid\n      }));\n      socket.on('friend_request', data => {\n        console.log(data);\n        dispatch(receiveMessage(data));\n      });\n    }\n  }, [dispatch, user]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      noticeList: noticeList,\n      toggleNoticeList: toggleNoticeList,\n      user: user,\n      onLogout: onLogout,\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), user ? /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }, this) : '']\n  }, void 0, true);\n};\n\n_s(HeaderContainer, \"suC4WY69zglBwfq1x9sB6p1dBmA=\", false, function () {\n  return [useSelector, useDispatch, useNavigate];\n});\n\n_c = HeaderContainer;\nexport default HeaderContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderContainer\");","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/common/HeaderContainer.js"],"names":["React","useCallback","useEffect","useState","useDispatch","useSelector","Header","Navigation","removeAuth","initializeChatHall","leaveChatHall","receiveMessage","requestMessagesList","logout","socket","useNavigate","HeaderContainer","user","messages","friends","messagesList","dispatch","navigate","noticeList","setNoticeList","toggleNoticeList","onLogout","localStorage","chatHall","username","removeItem","uid","on","data","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,kBAAT,EAA6BC,aAA7B,QAAkD,wBAAlD;AACA,SAASC,cAAT,EAAyBC,mBAAzB,QAAoD,uBAApD;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,MAAT,QAAuB,kCAAvB;AACA,SAASC,WAAT,QAA4B,0CAA5B;;;;AACA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAqBb,WAAW,CAAC;AAAA,QAAC;AAAEY,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAAD;AAAA,WAAwB;AAC7DF,MAAAA,IAAI,EAAEA,IAAI,CAACA,IADkD;AAE7DC,MAAAA,QAAQ,EAAEC,OAAO,CAACC;AAF2C,KAAxB;AAAA,GAAD,CAAtC;AAIA,QAAMC,QAAQ,GAAGjB,WAAW,EAA5B;AACA,QAAMkB,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAMsB,gBAAgB,GAAGxB,WAAW,CAAC,MAAM;AACzCuB,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACD,GAFmC,EAEjC,CAACA,UAAD,CAFiC,CAApC;;AAGA,QAAMG,QAAQ,GAAG,MAAM;AACrBL,IAAAA,QAAQ,CAACR,MAAM,EAAP,CAAR;AACAQ,IAAAA,QAAQ,CAACb,UAAU,EAAX,CAAR;;AACA,QAAImB,YAAY,CAACC,QAAjB,EAA2B;AACzBP,MAAAA,QAAQ,CAACX,aAAa,CAAC;AAAEmB,QAAAA,QAAQ,EAAEZ,IAAI,CAACY;AAAjB,OAAD,CAAd,CAAR;AACAR,MAAAA,QAAQ,CAACZ,kBAAkB,EAAnB,CAAR;AACAkB,MAAAA,YAAY,CAACG,UAAb,CAAwB,UAAxB;AACD;;AACDR,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,GATD;;AAWApB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,IAAJ,EAAU;AACR,YAAM;AAAEc,QAAAA;AAAF,UAAUd,IAAhB;AACAI,MAAAA,QAAQ,CAACT,mBAAmB,CAAC;AAAEmB,QAAAA;AAAF,OAAD,CAApB,CAAR;AAEAjB,MAAAA,MAAM,CAACkB,EAAP,CAAU,gBAAV,EAA6BC,IAAD,IAAU;AACpCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAZ,QAAAA,QAAQ,CAACV,cAAc,CAACsB,IAAD,CAAf,CAAR;AACD,OAHD;AAID;AACF,GAVQ,EAUN,CAACZ,QAAD,EAAWJ,IAAX,CAVM,CAAT;AAWA,sBACE;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,UAAU,EAAEM,UADd;AAEE,MAAA,gBAAgB,EAAEE,gBAFpB;AAGE,MAAA,IAAI,EAAER,IAHR;AAIE,MAAA,QAAQ,EAAES,QAJZ;AAKE,MAAA,QAAQ,EAAER;AALZ;AAAA;AAAA;AAAA;AAAA,YADF,EAQGD,IAAI,gBAAG,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GAAoB,EAR3B;AAAA,kBADF;AAYD,CA7CD;;GAAMD,e;UACuBX,W,EAIVD,W,EACAW,W;;;KANbC,e;AA+CN,eAAeA,eAAf","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Header from '../../components/common/Header';\r\nimport Navigation from '../../components/common/Navigation';\r\nimport { removeAuth } from '../../modules/auth';\r\nimport { initializeChatHall, leaveChatHall } from '../../modules/chatHall';\r\nimport { receiveMessage, requestMessagesList } from '../../modules/friends';\r\nimport { logout } from '../../modules/user';\r\nimport { socket } from '../../lib/sockets/chatHallSocket';\r\nimport { useNavigate } from '../../../node_modules/react-router/index';\r\nconst HeaderContainer = () => {\r\n  const { user, messages } = useSelector(({ user, friends }) => ({\r\n    user: user.user,\r\n    messages: friends.messagesList,\r\n  }));\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [noticeList, setNoticeList] = useState(false);\r\n  const toggleNoticeList = useCallback(() => {\r\n    setNoticeList(!noticeList);\r\n  }, [noticeList]);\r\n  const onLogout = () => {\r\n    dispatch(logout());\r\n    dispatch(removeAuth());\r\n    if (localStorage.chatHall) {\r\n      dispatch(leaveChatHall({ username: user.username }));\r\n      dispatch(initializeChatHall());\r\n      localStorage.removeItem('chatHall');\r\n    }\r\n    navigate('/');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      const { uid } = user;\r\n      dispatch(requestMessagesList({ uid }));\r\n\r\n      socket.on('friend_request', (data) => {\r\n        console.log(data);\r\n        dispatch(receiveMessage(data));\r\n      });\r\n    }\r\n  }, [dispatch, user]);\r\n  return (\r\n    <>\r\n      <Header\r\n        noticeList={noticeList}\r\n        toggleNoticeList={toggleNoticeList}\r\n        user={user}\r\n        onLogout={onLogout}\r\n        messages={messages}\r\n      />\r\n      {user ? <Navigation /> : ''}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeaderContainer;\r\n"]},"metadata":{},"sourceType":"module"}