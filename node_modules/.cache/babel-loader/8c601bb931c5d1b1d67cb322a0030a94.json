{"ast":null,"code":"import _slicedToArray from\"C:/nani/connect/connect-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import FriendsList from'../../components/Friends/FriendsList';import{debounce}from'lodash';import{useDispatch,useSelector}from'react-redux';import{requestFriendsList}from'../../modules/friends';import{requestChattingList}from'../../modules/chatting';import{jsx as _jsx}from\"react/jsx-runtime\";var FriendsListContainer=function FriendsListContainer(){var dispatch=useDispatch();var _useSelector=useSelector(function(_ref){var friendsList=_ref.friends.friendsList;return{friendsList:friendsList};}),friendsList=_useSelector.friendsList;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),pagination=_useState2[0],setPagination=_useState2[1];var MAX_PAGINATION=friendsList?Math.ceil(friendsList.length/10):0;var scrollHandler=debounce(function(e){if(e.deltaY===100&&pagination+1<MAX_PAGINATION){setPagination(pagination+1);}else if(e.deltaY===-100&&pagination>0){setPagination(pagination-1);}},300);useEffect(function(){var _JSON$parse=JSON.parse(localStorage.user),uid=_JSON$parse.uid;dispatch(requestFriendsList({uid:uid}));dispatch(requestChattingList({uid:uid}));},[dispatch]);useEffect(function(){window.addEventListener('wheel',scrollHandler);return function(){window.removeEventListener('wheel',scrollHandler);};},[pagination,scrollHandler]);return/*#__PURE__*/_jsx(FriendsList,{friendsList:friendsList.slice(pagination*10,(pagination+1)*10),pagination:pagination,total:MAX_PAGINATION});};export default FriendsListContainer;","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/Friends/FriendsListContainer.js"],"names":["React","useEffect","useState","FriendsList","debounce","useDispatch","useSelector","requestFriendsList","requestChattingList","FriendsListContainer","dispatch","friendsList","friends","pagination","setPagination","MAX_PAGINATION","Math","ceil","length","scrollHandler","e","deltaY","JSON","parse","localStorage","user","uid","window","addEventListener","removeEventListener","slice"],"mappings":"sHAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,WAAP,KAAwB,sCAAxB,CACA,OAASC,QAAT,KAAyB,QAAzB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,kBAAT,KAAmC,uBAAnC,CACA,OAASC,mBAAT,KAAoC,wBAApC,C,2CAEA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,EAAM,CACjC,GAAMC,CAAAA,QAAQ,CAAGL,WAAW,EAA5B,CACA,iBAAwBC,WAAW,CAAC,kBAAcK,CAAAA,WAAd,MAAGC,OAAH,CAAcD,WAAd,OAAmC,CACrEA,WAAW,CAAXA,WADqE,CAAnC,EAAD,CAAnC,CAAQA,WAAR,cAAQA,WAAR,CAGA,cAAoCT,QAAQ,CAAC,CAAD,CAA5C,wCAAOW,UAAP,eAAmBC,aAAnB,eACA,GAAMC,CAAAA,cAAc,CAAGJ,WAAW,CAAGK,IAAI,CAACC,IAAL,CAAUN,WAAW,CAACO,MAAZ,CAAqB,EAA/B,CAAH,CAAwC,CAA1E,CACA,GAAMC,CAAAA,aAAa,CAAGf,QAAQ,CAAC,SAACgB,CAAD,CAAO,CACpC,GAAIA,CAAC,CAACC,MAAF,GAAa,GAAb,EAAoBR,UAAU,CAAG,CAAb,CAAiBE,cAAzC,CAAyD,CACvDD,aAAa,CAACD,UAAU,CAAG,CAAd,CAAb,CACD,CAFD,IAEO,IAAIO,CAAC,CAACC,MAAF,GAAa,CAAC,GAAd,EAAqBR,UAAU,CAAG,CAAtC,CAAyC,CAC9CC,aAAa,CAACD,UAAU,CAAG,CAAd,CAAb,CACD,CACF,CAN6B,CAM3B,GAN2B,CAA9B,CAOAZ,SAAS,CAAC,UAAM,CACd,gBAAgBqB,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,IAAxB,CAAhB,CAAQC,GAAR,aAAQA,GAAR,CACAhB,QAAQ,CAACH,kBAAkB,CAAC,CAAEmB,GAAG,CAAHA,GAAF,CAAD,CAAnB,CAAR,CACAhB,QAAQ,CAACF,mBAAmB,CAAC,CAAEkB,GAAG,CAAHA,GAAF,CAAD,CAApB,CAAR,CACD,CAJQ,CAIN,CAAChB,QAAD,CAJM,CAAT,CAKAT,SAAS,CAAC,UAAM,CACd0B,MAAM,CAACC,gBAAP,CAAwB,OAAxB,CAAiCT,aAAjC,EACA,MAAO,WAAM,CACXQ,MAAM,CAACE,mBAAP,CAA2B,OAA3B,CAAoCV,aAApC,EACD,CAFD,CAGD,CALQ,CAKN,CAACN,UAAD,CAAaM,aAAb,CALM,CAAT,CAOA,mBACE,KAAC,WAAD,EACE,WAAW,CAAER,WAAW,CAACmB,KAAZ,CAAkBjB,UAAU,CAAG,EAA/B,CAAmC,CAACA,UAAU,CAAG,CAAd,EAAmB,EAAtD,CADf,CAEE,UAAU,CAAEA,UAFd,CAGE,KAAK,CAAEE,cAHT,EADF,CAOD,CAjCD,CAmCA,cAAeN,CAAAA,oBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport FriendsList from '../../components/Friends/FriendsList';\r\nimport { debounce } from 'lodash';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { requestFriendsList } from '../../modules/friends';\r\nimport { requestChattingList } from '../../modules/chatting';\r\n\r\nconst FriendsListContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const { friendsList } = useSelector(({ friends: { friendsList } }) => ({\r\n    friendsList,\r\n  }));\r\n  const [pagination, setPagination] = useState(0);\r\n  const MAX_PAGINATION = friendsList ? Math.ceil(friendsList.length / 10) : 0;\r\n  const scrollHandler = debounce((e) => {\r\n    if (e.deltaY === 100 && pagination + 1 < MAX_PAGINATION) {\r\n      setPagination(pagination + 1);\r\n    } else if (e.deltaY === -100 && pagination > 0) {\r\n      setPagination(pagination - 1);\r\n    }\r\n  }, 300);\r\n  useEffect(() => {\r\n    const { uid } = JSON.parse(localStorage.user);\r\n    dispatch(requestFriendsList({ uid }));\r\n    dispatch(requestChattingList({ uid }));\r\n  }, [dispatch]);\r\n  useEffect(() => {\r\n    window.addEventListener('wheel', scrollHandler);\r\n    return () => {\r\n      window.removeEventListener('wheel', scrollHandler);\r\n    };\r\n  }, [pagination, scrollHandler]);\r\n\r\n  return (\r\n    <FriendsList\r\n      friendsList={friendsList.slice(pagination * 10, (pagination + 1) * 10)}\r\n      pagination={pagination}\r\n      total={MAX_PAGINATION}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FriendsListContainer;\r\n"]},"metadata":{},"sourceType":"module"}