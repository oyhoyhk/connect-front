{"ast":null,"code":"import _defineProperty from\"C:/nani/connect/connect-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _slicedToArray from\"C:/nani/connect/connect-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{useDispatch}from'react-redux';import Friend from'../../components/Friends/Friend';import{requestChattingLogs,startLoading}from'../../modules/chatting';import{openChatting,setOtherToChat}from'../../modules/chatting';import{jsx as _jsx}from\"react/jsx-runtime\";var FriendContainer=function FriendContainer(_ref){var friendRequest=_ref.friendRequest,receiver=_ref.receiver,profileImage=_ref.profileImage,nickname=_ref.nickname,tags=_ref.tags,type=_ref.type,status=_ref.status;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),optionBox=_useState2[0],setOptionBox=_useState2[1];var clickOptions=function clickOptions(){setOptionBox(!optionBox);};var dispatch=useDispatch();var onChatting=function onChatting(){var data={receiver:receiver,profileImage:profileImage,nickname:nickname};dispatch(setOtherToChat(data));dispatch(openChatting());dispatch(startLoading());clickOptions();var sender=JSON.parse(localStorage.user).uid;dispatch(requestChattingLogs({sender:sender,receiver:receiver}));};return/*#__PURE__*/_jsx(Friend,_defineProperty({status:true,friendRequest:friendRequest,clickOptions:clickOptions,optionBox:optionBox,type:type,nickname:nickname,tags:tags,profileImage:profileImage,receiver:receiver,onChatting:onChatting},\"status\",status));};export default FriendContainer;","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/Friends/FriendContainer.js"],"names":["React","useState","useDispatch","Friend","requestChattingLogs","startLoading","openChatting","setOtherToChat","FriendContainer","friendRequest","receiver","profileImage","nickname","tags","type","status","optionBox","setOptionBox","clickOptions","dispatch","onChatting","data","sender","JSON","parse","localStorage","user","uid"],"mappings":"8OAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,MAAOC,CAAAA,MAAP,KAAmB,iCAAnB,CACA,OAASC,mBAAT,CAA8BC,YAA9B,KAAkD,wBAAlD,CACA,OAASC,YAAT,CAAuBC,cAAvB,KAA6C,wBAA7C,C,2CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAQlB,IAPJC,CAAAA,aAOI,MAPJA,aAOI,CANJC,QAMI,MANJA,QAMI,CALJC,YAKI,MALJA,YAKI,CAJJC,QAII,MAJJA,QAII,CAHJC,IAGI,MAHJA,IAGI,CAFJC,IAEI,MAFJA,IAEI,CADJC,MACI,MADJA,MACI,CACJ,cAAkCd,QAAQ,CAAC,KAAD,CAA1C,wCAAOe,SAAP,eAAkBC,YAAlB,eACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBD,YAAY,CAAC,CAACD,SAAF,CAAZ,CACD,CAFD,CAGA,GAAMG,CAAAA,QAAQ,CAAGjB,WAAW,EAA5B,CACA,GAAMkB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,GAAMC,CAAAA,IAAI,CAAG,CAAEX,QAAQ,CAARA,QAAF,CAAYC,YAAY,CAAZA,YAAZ,CAA0BC,QAAQ,CAARA,QAA1B,CAAb,CACAO,QAAQ,CAACZ,cAAc,CAACc,IAAD,CAAf,CAAR,CACAF,QAAQ,CAACb,YAAY,EAAb,CAAR,CACAa,QAAQ,CAACd,YAAY,EAAb,CAAR,CACAa,YAAY,GACZ,GAAMI,CAAAA,MAAM,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,IAAxB,EAA8BC,GAA7C,CACAR,QAAQ,CAACf,mBAAmB,CAAC,CAAEkB,MAAM,CAANA,MAAF,CAAUZ,QAAQ,CAARA,QAAV,CAAD,CAApB,CAAR,CACD,CARD,CASA,mBACE,KAAC,MAAD,kBACE,MAAM,KADR,CAEE,aAAa,CAAED,aAFjB,CAGE,YAAY,CAAES,YAHhB,CAIE,SAAS,CAAEF,SAJb,CAKE,IAAI,CAAEF,IALR,CAME,QAAQ,CAAEF,QANZ,CAOE,IAAI,CAAEC,IAPR,CAQE,YAAY,CAAEF,YARhB,CASE,QAAQ,CAAED,QATZ,CAUE,UAAU,CAAEU,UAVd,WAWUL,MAXV,EADF,CAeD,CAtCD,CAwCA,cAAeP,CAAAA,eAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Friend from '../../components/Friends/Friend';\r\nimport { requestChattingLogs, startLoading } from '../../modules/chatting';\r\nimport { openChatting, setOtherToChat } from '../../modules/chatting';\r\n\r\nconst FriendContainer = ({\r\n  friendRequest,\r\n  receiver,\r\n  profileImage,\r\n  nickname,\r\n  tags,\r\n  type,\r\n  status,\r\n}) => {\r\n  const [optionBox, setOptionBox] = useState(false);\r\n  const clickOptions = () => {\r\n    setOptionBox(!optionBox);\r\n  };\r\n  const dispatch = useDispatch();\r\n  const onChatting = () => {\r\n    const data = { receiver, profileImage, nickname };\r\n    dispatch(setOtherToChat(data));\r\n    dispatch(openChatting());\r\n    dispatch(startLoading());\r\n    clickOptions();\r\n    const sender = JSON.parse(localStorage.user).uid;\r\n    dispatch(requestChattingLogs({ sender, receiver }));\r\n  };\r\n  return (\r\n    <Friend\r\n      status\r\n      friendRequest={friendRequest}\r\n      clickOptions={clickOptions}\r\n      optionBox={optionBox}\r\n      type={type}\r\n      nickname={nickname}\r\n      tags={tags}\r\n      profileImage={profileImage}\r\n      receiver={receiver}\r\n      onChatting={onChatting}\r\n      status={status}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FriendContainer;\r\n"]},"metadata":{},"sourceType":"module"}