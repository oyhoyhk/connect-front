{"ast":null,"code":"var _jsxFileName = \"C:\\\\nani\\\\connect\\\\connect-frontend\\\\src\\\\containers\\\\ChattingModal\\\\ChattingModalContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ChattingModal from '../../components/ChattingModal/ChattingModal';\nimport { requestChattingList } from '../../modules/chatting';\nimport { closeChat, closeChatting, initializeOther } from '../../modules/chatting';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChattingModalContainer = () => {\n  _s();\n\n  const changeScroll = useCallback(e => {\n    e.scrollTop = e.scrollHeight;\n  }, []);\n  const {\n    other,\n    loading,\n    logs\n  } = useSelector(_ref => {\n    let {\n      chatting: {\n        loading,\n        other,\n        logs\n      }\n    } = _ref;\n    return {\n      other,\n      logs,\n      loading\n    };\n  });\n  const dispatch = useDispatch();\n\n  const exitChatting = e => {\n    e.stopPropagation();\n    const {\n      uid\n    } = JSON.parse(localStorage.user);\n    dispatch(closeChat({\n      sender: uid,\n      receiver: other.receiver\n    }));\n    dispatch(closeChatting());\n    dispatch(requestChattingList({\n      uid\n    }));\n  };\n\n  useEffect(() => {\n    return () => {\n      dispatch(initializeOther());\n    };\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(ChattingModal, {\n    loading: loading,\n    exitChatting: exitChatting,\n    other: other,\n    changeScroll: changeScroll,\n    logs: logs\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChattingModalContainer, \"hIJ97hXed0RUnKiOR03OOgT8IS4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ChattingModalContainer;\nexport default ChattingModalContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChattingModalContainer\");","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/ChattingModal/ChattingModalContainer.js"],"names":["React","useEffect","useCallback","useDispatch","useSelector","ChattingModal","requestChattingList","closeChat","closeChatting","initializeOther","ChattingModalContainer","changeScroll","e","scrollTop","scrollHeight","other","loading","logs","chatting","dispatch","exitChatting","stopPropagation","uid","JSON","parse","localStorage","user","sender","receiver"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,aAAP,MAA0B,8CAA1B;AACA,SAASC,mBAAT,QAAoC,wBAApC;AACA,SACEC,SADF,EAEEC,aAFF,EAGEC,eAHF,QAIO,wBAJP;;;AAMA,MAAMC,sBAAsB,GAAG,MAAM;AAAA;;AACnC,QAAMC,YAAY,GAAGT,WAAW,CAAEU,CAAD,IAAO;AACtCA,IAAAA,CAAC,CAACC,SAAF,GAAcD,CAAC,CAACE,YAAhB;AACD,GAF+B,EAE7B,EAF6B,CAAhC;AAGA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA2Bb,WAAW,CAC1C;AAAA,QAAC;AAAEc,MAAAA,QAAQ,EAAE;AAAEF,QAAAA,OAAF;AAAWD,QAAAA,KAAX;AAAkBE,QAAAA;AAAlB;AAAZ,KAAD;AAAA,WAA6C;AAC3CF,MAAAA,KAD2C;AAE3CE,MAAAA,IAF2C;AAG3CD,MAAAA;AAH2C,KAA7C;AAAA,GAD0C,CAA5C;AAOA,QAAMG,QAAQ,GAAGhB,WAAW,EAA5B;;AACA,QAAMiB,YAAY,GAAIR,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACS,eAAF;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAUC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,IAAxB,CAAhB;AACAP,IAAAA,QAAQ,CAACZ,SAAS,CAAC;AAAEoB,MAAAA,MAAM,EAAEL,GAAV;AAAeM,MAAAA,QAAQ,EAAEb,KAAK,CAACa;AAA/B,KAAD,CAAV,CAAR;AACAT,IAAAA,QAAQ,CAACX,aAAa,EAAd,CAAR;AACAW,IAAAA,QAAQ,CAACb,mBAAmB,CAAC;AAAEgB,MAAAA;AAAF,KAAD,CAApB,CAAR;AACD,GAND;;AAOArB,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACXkB,MAAAA,QAAQ,CAACV,eAAe,EAAhB,CAAR;AACD,KAFD;AAGD,GAJQ,EAIN,CAACU,QAAD,CAJM,CAAT;AAKA,sBACE,QAAC,aAAD;AACE,IAAA,OAAO,EAAEH,OADX;AAEE,IAAA,YAAY,EAAEI,YAFhB;AAGE,IAAA,KAAK,EAAEL,KAHT;AAIE,IAAA,YAAY,EAAEJ,YAJhB;AAKE,IAAA,IAAI,EAAEM;AALR;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAjCD;;GAAMP,sB;UAI6BN,W,EAOhBD,W;;;KAXbO,sB;AAmCN,eAAeA,sBAAf","sourcesContent":["import React, { useEffect, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ChattingModal from '../../components/ChattingModal/ChattingModal';\r\nimport { requestChattingList } from '../../modules/chatting';\r\nimport {\r\n  closeChat,\r\n  closeChatting,\r\n  initializeOther,\r\n} from '../../modules/chatting';\r\n\r\nconst ChattingModalContainer = () => {\r\n  const changeScroll = useCallback((e) => {\r\n    e.scrollTop = e.scrollHeight;\r\n  }, []);\r\n  const { other, loading, logs } = useSelector(\r\n    ({ chatting: { loading, other, logs } }) => ({\r\n      other,\r\n      logs,\r\n      loading,\r\n    }),\r\n  );\r\n  const dispatch = useDispatch();\r\n  const exitChatting = (e) => {\r\n    e.stopPropagation();\r\n    const { uid } = JSON.parse(localStorage.user);\r\n    dispatch(closeChat({ sender: uid, receiver: other.receiver }));\r\n    dispatch(closeChatting());\r\n    dispatch(requestChattingList({ uid }));\r\n  };\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(initializeOther());\r\n    };\r\n  }, [dispatch]);\r\n  return (\r\n    <ChattingModal\r\n      loading={loading}\r\n      exitChatting={exitChatting}\r\n      other={other}\r\n      changeScroll={changeScroll}\r\n      logs={logs}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ChattingModalContainer;\r\n"]},"metadata":{},"sourceType":"module"}