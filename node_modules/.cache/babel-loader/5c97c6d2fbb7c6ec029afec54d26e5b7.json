{"ast":null,"code":"var _jsxFileName = \"C:\\\\nani\\\\connect\\\\connect-frontend\\\\src\\\\containers\\\\common\\\\ChatHallContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport ChatHall from '../../components/common/ChatHall';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { socket } from '../../lib/sockets/chatHallSocket';\nimport { getGuestNumber, sendMessage, receiveMessage, setUserList, getUserInfo, setChatHall, leaveChatHall, someoneLeft, someoneInOut, initializeChatHall } from '../../modules/chatHall';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatHallContainer = () => {\n  _s();\n\n  const [msg, setMsg] = useState('');\n  const dispatch = useDispatch();\n  const {\n    user,\n    userList,\n    msgList\n  } = useSelector(_ref => {\n    let {\n      chatHall,\n      user\n    } = _ref;\n    return {\n      user: user.user !== null ? user.user : chatHall.user,\n      userList: chatHall.userList,\n      msgList: chatHall.msgList\n    };\n  });\n  useEffect(() => {\n    if (!user && !localStorage.chatHall) {\n      dispatch(getGuestNumber());\n    }\n  }, [dispatch, user]);\n  useEffect(() => {\n    if (localStorage.chatHall) {\n      dispatch(setChatHall(JSON.parse(localStorage.chatHall)));\n      dispatch(getUserInfo());\n    }\n  }, [dispatch]);\n  useEffect(() => {\n    if (user && !localStorage.chatHall) {\n      socket.emit('enter', {\n        username: user.username,\n        nickname: user.nickname,\n        profileImage: user.profileImage\n      }, response => {\n        if (response === 'success') {\n          localStorage.setItem('chatHall', JSON.stringify(user));\n        }\n      });\n\n      const onBeforeUnload = e => {\n        dispatch(leaveChatHall({\n          username: user.username\n        }));\n        localStorage.removeItem('chatHall');\n      };\n\n      window.addEventListener('beforeunload', onBeforeUnload);\n    }\n  }, [dispatch, user]);\n  useEffect(() => {\n    socket.on('broadcastMsg', data => {\n      dispatch(receiveMessage({\n        received: true,\n        ...data\n      }));\n    });\n    socket.on('someone_entered', data => {\n      dispatch(setUserList(data));\n      dispatch(someoneInOut({\n        action: 'in',\n        nickname: data[data.length - 1].nickname\n      }));\n    });\n    socket.on('someone_left', data => {\n      dispatch(someoneLeft(data));\n      dispatch(someoneInOut({\n        action: 'out',\n        nickname: data\n      }));\n    });\n    return () => {\n      if (localStorage.chatHall) {\n        const {\n          username\n        } = JSON.parse(localStorage.chatHall);\n        localStorage.removeItem('chatHall');\n        dispatch(leaveChatHall({\n          username\n        }));\n        dispatch(initializeChatHall());\n      }\n    };\n  }, [dispatch]);\n\n  const onChange = e => {\n    setMsg(e.target.value);\n  };\n\n  const changeScroll = useCallback(e => {\n    e.scrollTop = e.scrollHeight;\n  }, []);\n\n  const onSubmit = () => {\n    if (msg === '') return;\n    socket.emit('msg', {\n      nickname: user.nickname,\n      msg: msg.trim()\n    });\n    dispatch(sendMessage({\n      send: true,\n      nickname: user.nickname,\n      msg: msg.trim()\n    }));\n    setMsg('');\n  };\n\n  const onKeySubmit = e => {\n    if (e.key === 'Enter') {\n      onSubmit();\n      setMsg('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChatHall, {\n    changeScroll: changeScroll,\n    msg: msg,\n    onChange: onChange,\n    onSubmit: onSubmit,\n    onKeySubmit: onKeySubmit,\n    msgList: msgList,\n    userList: userList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatHallContainer, \"+7qVQdVsNMNwRDjJb0OHdBPfOQg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ChatHallContainer;\nexport default ChatHallContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatHallContainer\");","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/common/ChatHallContainer.js"],"names":["React","useCallback","useEffect","useState","ChatHall","useDispatch","useSelector","socket","getGuestNumber","sendMessage","receiveMessage","setUserList","getUserInfo","setChatHall","leaveChatHall","someoneLeft","someoneInOut","initializeChatHall","ChatHallContainer","msg","setMsg","dispatch","user","userList","msgList","chatHall","localStorage","JSON","parse","emit","username","nickname","profileImage","response","setItem","stringify","onBeforeUnload","e","removeItem","window","addEventListener","on","data","received","action","length","onChange","target","value","changeScroll","scrollTop","scrollHeight","onSubmit","trim","send","onKeySubmit","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,QAAuB,kCAAvB;AACA,SACEC,cADF,EAEEC,WAFF,EAGEC,cAHF,EAIEC,WAJF,EAKEC,WALF,EAMEC,WANF,EAOEC,aAPF,EAQEC,WARF,EASEC,YATF,EAUEC,kBAVF,QAWO,wBAXP;;;AAaA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBjB,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAMkB,QAAQ,GAAGhB,WAAW,EAA5B;AAEA,QAAM;AAAEiB,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,MAA8BlB,WAAW,CAAC;AAAA,QAAC;AAAEmB,MAAAA,QAAF;AAAYH,MAAAA;AAAZ,KAAD;AAAA,WAAyB;AACvEA,MAAAA,IAAI,EAAEA,IAAI,CAACA,IAAL,KAAc,IAAd,GAAqBA,IAAI,CAACA,IAA1B,GAAiCG,QAAQ,CAACH,IADuB;AAEvEC,MAAAA,QAAQ,EAAEE,QAAQ,CAACF,QAFoD;AAGvEC,MAAAA,OAAO,EAAEC,QAAQ,CAACD;AAHqD,KAAzB;AAAA,GAAD,CAA/C;AAMAtB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACoB,IAAD,IAAS,CAACI,YAAY,CAACD,QAA3B,EAAqC;AACnCJ,MAAAA,QAAQ,CAACb,cAAc,EAAf,CAAR;AACD;AACF,GAJQ,EAIN,CAACa,QAAD,EAAWC,IAAX,CAJM,CAAT;AAMApB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIwB,YAAY,CAACD,QAAjB,EAA2B;AACzBJ,MAAAA,QAAQ,CAACR,WAAW,CAACc,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACD,QAAxB,CAAD,CAAZ,CAAR;AACAJ,MAAAA,QAAQ,CAACT,WAAW,EAAZ,CAAR;AACD;AACF,GALQ,EAKN,CAACS,QAAD,CALM,CAAT;AAOAnB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoB,IAAI,IAAI,CAACI,YAAY,CAACD,QAA1B,EAAoC;AAClClB,MAAAA,MAAM,CAACsB,IAAP,CACE,OADF,EAEE;AACEC,QAAAA,QAAQ,EAAER,IAAI,CAACQ,QADjB;AAEEC,QAAAA,QAAQ,EAAET,IAAI,CAACS,QAFjB;AAGEC,QAAAA,YAAY,EAAEV,IAAI,CAACU;AAHrB,OAFF,EAOGC,QAAD,IAAc;AACZ,YAAIA,QAAQ,KAAK,SAAjB,EAA4B;AAC1BP,UAAAA,YAAY,CAACQ,OAAb,CAAqB,UAArB,EAAiCP,IAAI,CAACQ,SAAL,CAAeb,IAAf,CAAjC;AACD;AACF,OAXH;;AAaA,YAAMc,cAAc,GAAIC,CAAD,IAAO;AAC5BhB,QAAAA,QAAQ,CAACP,aAAa,CAAC;AAAEgB,UAAAA,QAAQ,EAAER,IAAI,CAACQ;AAAjB,SAAD,CAAd,CAAR;AACAJ,QAAAA,YAAY,CAACY,UAAb,CAAwB,UAAxB;AACD,OAHD;;AAIAC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,cAAxB,EAAwCJ,cAAxC;AACD;AACF,GArBQ,EAqBN,CAACf,QAAD,EAAWC,IAAX,CArBM,CAAT;AAuBApB,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,MAAM,CAACkC,EAAP,CAAU,cAAV,EAA2BC,IAAD,IAAU;AAClCrB,MAAAA,QAAQ,CAACX,cAAc,CAAC;AAAEiC,QAAAA,QAAQ,EAAE,IAAZ;AAAkB,WAAGD;AAArB,OAAD,CAAf,CAAR;AACD,KAFD;AAGAnC,IAAAA,MAAM,CAACkC,EAAP,CAAU,iBAAV,EAA8BC,IAAD,IAAU;AACrCrB,MAAAA,QAAQ,CAACV,WAAW,CAAC+B,IAAD,CAAZ,CAAR;AACArB,MAAAA,QAAQ,CACNL,YAAY,CAAC;AACX4B,QAAAA,MAAM,EAAE,IADG;AAEXb,QAAAA,QAAQ,EAAEW,IAAI,CAACA,IAAI,CAACG,MAAL,GAAc,CAAf,CAAJ,CAAsBd;AAFrB,OAAD,CADN,CAAR;AAMD,KARD;AASAxB,IAAAA,MAAM,CAACkC,EAAP,CAAU,cAAV,EAA2BC,IAAD,IAAU;AAClCrB,MAAAA,QAAQ,CAACN,WAAW,CAAC2B,IAAD,CAAZ,CAAR;AACArB,MAAAA,QAAQ,CAACL,YAAY,CAAC;AAAE4B,QAAAA,MAAM,EAAE,KAAV;AAAiBb,QAAAA,QAAQ,EAAEW;AAA3B,OAAD,CAAb,CAAR;AACD,KAHD;AAIA,WAAO,MAAM;AACX,UAAIhB,YAAY,CAACD,QAAjB,EAA2B;AACzB,cAAM;AAAEK,UAAAA;AAAF,YAAeH,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACD,QAAxB,CAArB;AACAC,QAAAA,YAAY,CAACY,UAAb,CAAwB,UAAxB;AACAjB,QAAAA,QAAQ,CAACP,aAAa,CAAC;AAAEgB,UAAAA;AAAF,SAAD,CAAd,CAAR;AACAT,QAAAA,QAAQ,CAACJ,kBAAkB,EAAnB,CAAR;AACD;AACF,KAPD;AAQD,GAzBQ,EAyBN,CAACI,QAAD,CAzBM,CAAT;;AA2BA,QAAMyB,QAAQ,GAAIT,CAAD,IAAO;AACtBjB,IAAAA,MAAM,CAACiB,CAAC,CAACU,MAAF,CAASC,KAAV,CAAN;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAGhD,WAAW,CAAEoC,CAAD,IAAO;AACtCA,IAAAA,CAAC,CAACa,SAAF,GAAcb,CAAC,CAACc,YAAhB;AACD,GAF+B,EAE7B,EAF6B,CAAhC;;AAIA,QAAMC,QAAQ,GAAG,MAAM;AACrB,QAAIjC,GAAG,KAAK,EAAZ,EAAgB;AAChBZ,IAAAA,MAAM,CAACsB,IAAP,CAAY,KAAZ,EAAmB;AAAEE,MAAAA,QAAQ,EAAET,IAAI,CAACS,QAAjB;AAA2BZ,MAAAA,GAAG,EAAEA,GAAG,CAACkC,IAAJ;AAAhC,KAAnB;AACAhC,IAAAA,QAAQ,CACNZ,WAAW,CAAC;AAAE6C,MAAAA,IAAI,EAAE,IAAR;AAAcvB,MAAAA,QAAQ,EAAET,IAAI,CAACS,QAA7B;AAAuCZ,MAAAA,GAAG,EAAEA,GAAG,CAACkC,IAAJ;AAA5C,KAAD,CADL,CAAR;AAGAjC,IAAAA,MAAM,CAAC,EAAD,CAAN;AACD,GAPD;;AASA,QAAMmC,WAAW,GAAIlB,CAAD,IAAO;AACzB,QAAIA,CAAC,CAACmB,GAAF,KAAU,OAAd,EAAuB;AACrBJ,MAAAA,QAAQ;AACRhC,MAAAA,MAAM,CAAC,EAAD,CAAN;AACD;AACF,GALD;;AAOA,sBACE,QAAC,QAAD;AACE,IAAA,YAAY,EAAE6B,YADhB;AAEE,IAAA,GAAG,EAAE9B,GAFP;AAGE,IAAA,QAAQ,EAAE2B,QAHZ;AAIE,IAAA,QAAQ,EAAEM,QAJZ;AAKE,IAAA,WAAW,EAAEG,WALf;AAME,IAAA,OAAO,EAAE/B,OANX;AAOE,IAAA,QAAQ,EAAED;AAPZ;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA5GD;;GAAML,iB;UAEab,W,EAEmBC,W;;;KAJhCY,iB;AA8GN,eAAeA,iBAAf","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport ChatHall from '../../components/common/ChatHall';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { socket } from '../../lib/sockets/chatHallSocket';\r\nimport {\r\n  getGuestNumber,\r\n  sendMessage,\r\n  receiveMessage,\r\n  setUserList,\r\n  getUserInfo,\r\n  setChatHall,\r\n  leaveChatHall,\r\n  someoneLeft,\r\n  someoneInOut,\r\n  initializeChatHall,\r\n} from '../../modules/chatHall';\r\n\r\nconst ChatHallContainer = () => {\r\n  const [msg, setMsg] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const { user, userList, msgList } = useSelector(({ chatHall, user }) => ({\r\n    user: user.user !== null ? user.user : chatHall.user,\r\n    userList: chatHall.userList,\r\n    msgList: chatHall.msgList,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    if (!user && !localStorage.chatHall) {\r\n      dispatch(getGuestNumber());\r\n    }\r\n  }, [dispatch, user]);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.chatHall) {\r\n      dispatch(setChatHall(JSON.parse(localStorage.chatHall)));\r\n      dispatch(getUserInfo());\r\n    }\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (user && !localStorage.chatHall) {\r\n      socket.emit(\r\n        'enter',\r\n        {\r\n          username: user.username,\r\n          nickname: user.nickname,\r\n          profileImage: user.profileImage,\r\n        },\r\n        (response) => {\r\n          if (response === 'success') {\r\n            localStorage.setItem('chatHall', JSON.stringify(user));\r\n          }\r\n        },\r\n      );\r\n      const onBeforeUnload = (e) => {\r\n        dispatch(leaveChatHall({ username: user.username }));\r\n        localStorage.removeItem('chatHall');\r\n      };\r\n      window.addEventListener('beforeunload', onBeforeUnload);\r\n    }\r\n  }, [dispatch, user]);\r\n\r\n  useEffect(() => {\r\n    socket.on('broadcastMsg', (data) => {\r\n      dispatch(receiveMessage({ received: true, ...data }));\r\n    });\r\n    socket.on('someone_entered', (data) => {\r\n      dispatch(setUserList(data));\r\n      dispatch(\r\n        someoneInOut({\r\n          action: 'in',\r\n          nickname: data[data.length - 1].nickname,\r\n        }),\r\n      );\r\n    });\r\n    socket.on('someone_left', (data) => {\r\n      dispatch(someoneLeft(data));\r\n      dispatch(someoneInOut({ action: 'out', nickname: data }));\r\n    });\r\n    return () => {\r\n      if (localStorage.chatHall) {\r\n        const { username } = JSON.parse(localStorage.chatHall);\r\n        localStorage.removeItem('chatHall');\r\n        dispatch(leaveChatHall({ username }));\r\n        dispatch(initializeChatHall());\r\n      }\r\n    };\r\n  }, [dispatch]);\r\n\r\n  const onChange = (e) => {\r\n    setMsg(e.target.value);\r\n  };\r\n\r\n  const changeScroll = useCallback((e) => {\r\n    e.scrollTop = e.scrollHeight;\r\n  }, []);\r\n\r\n  const onSubmit = () => {\r\n    if (msg === '') return;\r\n    socket.emit('msg', { nickname: user.nickname, msg: msg.trim() });\r\n    dispatch(\r\n      sendMessage({ send: true, nickname: user.nickname, msg: msg.trim() }),\r\n    );\r\n    setMsg('');\r\n  };\r\n\r\n  const onKeySubmit = (e) => {\r\n    if (e.key === 'Enter') {\r\n      onSubmit();\r\n      setMsg('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ChatHall\r\n      changeScroll={changeScroll}\r\n      msg={msg}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      onKeySubmit={onKeySubmit}\r\n      msgList={msgList}\r\n      userList={userList}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ChatHallContainer;\r\n"]},"metadata":{},"sourceType":"module"}