{"ast":null,"code":"var _jsxFileName = \"C:\\\\nani\\\\connect\\\\connect-frontend\\\\src\\\\containers\\\\common\\\\ChatHallContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useReducer, useState } from 'react';\nimport ChatHall from '../../components/common/ChatHall';\nimport { useSelector } from 'react-redux';\nimport io from 'socket.io-client'; // import { socket } from '../../lib/sockets/chatHallSocket';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER = 'http://localhost:4000';\nlet socket;\n\nconst ChatHallContainer = () => {\n  _s();\n\n  const [msg, setMsg] = useState('');\n  const [state, dispatch] = useReducer(reducer, initialState);\n  let {\n    nickname,\n    profileImage\n  } = useSelector(_ref => {\n    let {\n      user\n    } = _ref;\n    return {\n      nickname: user.user ? user.user.nickname : 'guest',\n      profileImage: user.user ? user.user.profileImage : ''\n    };\n  });\n  useEffect(() => {\n    socket = io(SERVER);\n    socket.on('broadcastMsg', data => {\n      console.log('receive data : ', data);\n      dispatch({\n        type: 'msg',\n        msg: { ...data,\n          received: true\n        }\n      });\n    });\n  }, []);\n\n  const onChange = e => {\n    setMsg(e.target.value);\n  };\n\n  const changeScroll = useCallback((a, b) => {\n    console.dir(a);\n    console.dir(b);\n  }, []);\n\n  const onSubmit = () => {\n    if (msg === '') return;\n    socket.emit('msg', {\n      nickname,\n      msg: msg.trim()\n    });\n    dispatch({\n      type: 'msg',\n      msg: {\n        send: true,\n        nickname,\n        msg: msg.trim()\n      }\n    });\n    setMsg('');\n  };\n\n  const onKeySubmit = e => {\n    if (e.key === 'Enter') {\n      onSubmit();\n      setMsg('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChatHall, {\n    changeScroll: changeScroll,\n    msg: msg,\n    onChange: onChange,\n    onSubmit: onSubmit,\n    onKeySubmit: onKeySubmit,\n    msgList: state.msg\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatHallContainer, \"csg7Mzt5o8w5p7COOqRRY6xFaLk=\", false, function () {\n  return [useSelector];\n});\n\n_c = ChatHallContainer;\nconst initialState = {\n  msg: []\n};\n\nfunction reducer(state, action) {\n  if (action.type === 'msg') {\n    return { ...initialState,\n      msg: [...state.msg, action.msg]\n    };\n  } else {\n    throw new Error();\n  }\n}\n\nexport default ChatHallContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatHallContainer\");","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/common/ChatHallContainer.js"],"names":["React","useCallback","useEffect","useReducer","useState","ChatHall","useSelector","io","SERVER","socket","ChatHallContainer","msg","setMsg","state","dispatch","reducer","initialState","nickname","profileImage","user","on","data","console","log","type","received","onChange","e","target","value","changeScroll","a","b","dir","onSubmit","emit","trim","send","onKeySubmit","key","action","Error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,UAAxC,EAAoDC,QAApD,QAAoE,OAApE;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,EAAP,MAAe,kBAAf,C,CACA;;;AAEA,MAAMC,MAAM,GAAG,uBAAf;AACA,IAAIC,MAAJ;;AACA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACY,OAAD,EAAUC,YAAV,CAApC;AACA,MAAI;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6BZ,WAAW,CAAC;AAAA,QAAC;AAAEa,MAAAA;AAAF,KAAD;AAAA,WAAe;AAC1DF,MAAAA,QAAQ,EAAEE,IAAI,CAACA,IAAL,GAAYA,IAAI,CAACA,IAAL,CAAUF,QAAtB,GAAiC,OADe;AAE1DC,MAAAA,YAAY,EAAEC,IAAI,CAACA,IAAL,GAAYA,IAAI,CAACA,IAAL,CAAUD,YAAtB,GAAqC;AAFO,KAAf;AAAA,GAAD,CAA5C;AAIAhB,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,MAAM,GAAGF,EAAE,CAACC,MAAD,CAAX;AACAC,IAAAA,MAAM,CAACW,EAAP,CAAU,cAAV,EAA2BC,IAAD,IAAU;AAClCC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,IAA/B;AACAP,MAAAA,QAAQ,CAAC;AAAEU,QAAAA,IAAI,EAAE,KAAR;AAAeb,QAAAA,GAAG,EAAE,EAAE,GAAGU,IAAL;AAAWI,UAAAA,QAAQ,EAAE;AAArB;AAApB,OAAD,CAAR;AACD,KAHD;AAID,GANQ,EAMN,EANM,CAAT;;AAOA,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACtBf,IAAAA,MAAM,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN;AACD,GAFD;;AAGA,QAAMC,YAAY,GAAG7B,WAAW,CAAC,CAAC8B,CAAD,EAAIC,CAAJ,KAAU;AACzCV,IAAAA,OAAO,CAACW,GAAR,CAAYF,CAAZ;AACAT,IAAAA,OAAO,CAACW,GAAR,CAAYD,CAAZ;AACD,GAH+B,EAG7B,EAH6B,CAAhC;;AAIA,QAAME,QAAQ,GAAG,MAAM;AACrB,QAAIvB,GAAG,KAAK,EAAZ,EAAgB;AAChBF,IAAAA,MAAM,CAAC0B,IAAP,CAAY,KAAZ,EAAmB;AAAElB,MAAAA,QAAF;AAAYN,MAAAA,GAAG,EAAEA,GAAG,CAACyB,IAAJ;AAAjB,KAAnB;AACAtB,IAAAA,QAAQ,CAAC;AAAEU,MAAAA,IAAI,EAAE,KAAR;AAAeb,MAAAA,GAAG,EAAE;AAAE0B,QAAAA,IAAI,EAAE,IAAR;AAAcpB,QAAAA,QAAd;AAAwBN,QAAAA,GAAG,EAAEA,GAAG,CAACyB,IAAJ;AAA7B;AAApB,KAAD,CAAR;AACAxB,IAAAA,MAAM,CAAC,EAAD,CAAN;AACD,GALD;;AAMA,QAAM0B,WAAW,GAAIX,CAAD,IAAO;AACzB,QAAIA,CAAC,CAACY,GAAF,KAAU,OAAd,EAAuB;AACrBL,MAAAA,QAAQ;AACRtB,MAAAA,MAAM,CAAC,EAAD,CAAN;AACD;AACF,GALD;;AAOA,sBACE,QAAC,QAAD;AACE,IAAA,YAAY,EAAEkB,YADhB;AAEE,IAAA,GAAG,EAAEnB,GAFP;AAGE,IAAA,QAAQ,EAAEe,QAHZ;AAIE,IAAA,QAAQ,EAAEQ,QAJZ;AAKE,IAAA,WAAW,EAAEI,WALf;AAME,IAAA,OAAO,EAAEzB,KAAK,CAACF;AANjB;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA5CD;;GAAMD,iB;UAG6BJ,W;;;KAH7BI,iB;AA8CN,MAAMM,YAAY,GAAG;AACnBL,EAAAA,GAAG,EAAE;AADc,CAArB;;AAGA,SAASI,OAAT,CAAiBF,KAAjB,EAAwB2B,MAAxB,EAAgC;AAC9B,MAAIA,MAAM,CAAChB,IAAP,KAAgB,KAApB,EAA2B;AACzB,WAAO,EAAE,GAAGR,YAAL;AAAmBL,MAAAA,GAAG,EAAE,CAAC,GAAGE,KAAK,CAACF,GAAV,EAAe6B,MAAM,CAAC7B,GAAtB;AAAxB,KAAP;AACD,GAFD,MAEO;AACL,UAAM,IAAI8B,KAAJ,EAAN;AACD;AACF;;AAED,eAAe/B,iBAAf","sourcesContent":["import React, { useCallback, useEffect, useReducer, useState } from 'react';\r\nimport ChatHall from '../../components/common/ChatHall';\r\nimport { useSelector } from 'react-redux';\r\nimport io from 'socket.io-client';\r\n// import { socket } from '../../lib/sockets/chatHallSocket';\r\n\r\nconst SERVER = 'http://localhost:4000';\r\nlet socket;\r\nconst ChatHallContainer = () => {\r\n  const [msg, setMsg] = useState('');\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  let { nickname, profileImage } = useSelector(({ user }) => ({\r\n    nickname: user.user ? user.user.nickname : 'guest',\r\n    profileImage: user.user ? user.user.profileImage : '',\r\n  }));\r\n  useEffect(() => {\r\n    socket = io(SERVER);\r\n    socket.on('broadcastMsg', (data) => {\r\n      console.log('receive data : ', data);\r\n      dispatch({ type: 'msg', msg: { ...data, received: true } });\r\n    });\r\n  }, []);\r\n  const onChange = (e) => {\r\n    setMsg(e.target.value);\r\n  };\r\n  const changeScroll = useCallback((a, b) => {\r\n    console.dir(a);\r\n    console.dir(b);\r\n  }, []);\r\n  const onSubmit = () => {\r\n    if (msg === '') return;\r\n    socket.emit('msg', { nickname, msg: msg.trim() });\r\n    dispatch({ type: 'msg', msg: { send: true, nickname, msg: msg.trim() } });\r\n    setMsg('');\r\n  };\r\n  const onKeySubmit = (e) => {\r\n    if (e.key === 'Enter') {\r\n      onSubmit();\r\n      setMsg('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ChatHall\r\n      changeScroll={changeScroll}\r\n      msg={msg}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      onKeySubmit={onKeySubmit}\r\n      msgList={state.msg}\r\n    />\r\n  );\r\n};\r\n\r\nconst initialState = {\r\n  msg: [],\r\n};\r\nfunction reducer(state, action) {\r\n  if (action.type === 'msg') {\r\n    return { ...initialState, msg: [...state.msg, action.msg] };\r\n  } else {\r\n    throw new Error();\r\n  }\r\n}\r\n\r\nexport default ChatHallContainer;\r\n"]},"metadata":{},"sourceType":"module"}