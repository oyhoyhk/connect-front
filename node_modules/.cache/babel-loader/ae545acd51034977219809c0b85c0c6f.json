{"ast":null,"code":"var _jsxFileName = \"C:\\\\nani\\\\connect\\\\connect-frontend\\\\src\\\\containers\\\\Chatting\\\\ChattingContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Chatting from '../../components/Chatting/Chatting';\nimport { initializeOther } from '../../modules/chatting';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChattingContainer = () => {\n  _s();\n\n  const {\n    other\n  } = useSelector(_ref => {\n    let {\n      chatting: {\n        other\n      }\n    } = _ref;\n    return {\n      other\n    };\n  });\n  const dispatch = useDispatch();\n  useEffect(() => {\n    return () => {\n      dispatch(initializeOther());\n    };\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(Chatting, {\n    other: other\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n};\n\n_s(ChattingContainer, \"B0YGK6A7rToNXxVMkxZLNeL7dS8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ChattingContainer;\nexport default ChattingContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChattingContainer\");","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/Chatting/ChattingContainer.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Chatting","initializeOther","ChattingContainer","other","chatting","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,SAASC,eAAT,QAAgC,wBAAhC;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAYJ,WAAW,CAAC;AAAA,QAAC;AAAEK,MAAAA,QAAQ,EAAE;AAAED,QAAAA;AAAF;AAAZ,KAAD;AAAA,WAA8B;AAAEA,MAAAA;AAAF,KAA9B;AAAA,GAAD,CAA7B;AACA,QAAME,QAAQ,GAAGP,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACXS,MAAAA,QAAQ,CAACJ,eAAe,EAAhB,CAAR;AACD,KAFD;AAGD,GAJQ,EAIN,CAACI,QAAD,CAJM,CAAT;AAKA,sBAAO,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEF;AAAjB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CATD;;GAAMD,iB;UACcH,W,EACDD,W;;;KAFbI,iB;AAWN,eAAeA,iBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Chatting from '../../components/Chatting/Chatting';\r\nimport { initializeOther } from '../../modules/chatting';\r\n\r\nconst ChattingContainer = () => {\r\n  const { other } = useSelector(({ chatting: { other } }) => ({ other }));\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(initializeOther());\r\n    };\r\n  }, [dispatch]);\r\n  return <Chatting other={other} />;\r\n};\r\n\r\nexport default ChattingContainer;\r\n"]},"metadata":{},"sourceType":"module"}