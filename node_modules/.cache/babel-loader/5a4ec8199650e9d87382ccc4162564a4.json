{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport { takeLatest } from 'redux-saga/effects';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nimport * as friendsAPI from '../lib/api/friends';\nconst [LOAD_FRIENDS_LIST, LOAD_FRIENDS_LIST_SUCCESS, LOAD_FRIENDS_LIST_FAILURE] = createRequestActionTypes('friends/SET_FRIENDS');\nconst [LOAD_TAGS, LOAD_TAGS_SUCCESS, LOAD_TAGS_FAILURE] = createRequestActionTypes('friends/SET_TAGS');\nconst [ADD_TAG, ADD_TAG_SUCCESS, ADD_TAG_FAILURE] = createRequestActionTypes('friends/ADD_TAG');\nconst ADD_TAG_IN_FRONT = 'friends/ADD_TAG_IN_FRONT';\nconst [REMOVE_TAG, REMOVE_TAG_SUCCESS, REMOVE_TAG_FAILURE] = createRequestActionTypes('frineds/REMOVE_TAG');\nconst REMOVE_TAG_IN_FRONT = 'friends/REMOVE_TAG_IN_FRONT';\nconst [GET_RECOMMEND, GET_RECOMMEND_SUCCESS, GET_RECOMMEND_FAILURE] = createRequestActionTypes('friends/GET_RECOMMEND');\nconst [FRIEND_REQUEST, FRIEND_REQUEST_SUCCESS, FRIEND_REQUEST_FAILURE] = createRequestActionTypes('friends/FRIEND_REQUEST');\nexport const loadTags = createAction(LOAD_TAGS);\nexport const addTag = createAction(ADD_TAG);\nexport const addTagInFront = createAction(ADD_TAG_IN_FRONT);\nexport const removeTag = createAction(REMOVE_TAG);\nexport const removeTagInFront = createAction(REMOVE_TAG_IN_FRONT);\nexport const getRecommend = createAction(GET_RECOMMEND);\nexport const friendRequest = createAction(FRIEND_REQUEST);\nconst loadFriendsListSaga = createRequestSaga(LOAD_FRIENDS_LIST);\nconst loadTagsSaga = createRequestSaga(LOAD_TAGS, friendsAPI.loadTags);\nconst addTagSaga = createRequestSaga(ADD_TAG, friendsAPI.addTag);\nconst removeTagSaga = createRequestSaga(REMOVE_TAG, friendsAPI.removeTag);\nconst getRecommendSaga = createRequestSaga(GET_RECOMMEND, friendsAPI.getRecommend);\nconst friendRequestSaga = createRequestSaga(FRIEND_REQUEST, friendsAPI.friendRequest);\nexport function* friendsSaga() {\n  yield takeLatest(LOAD_FRIENDS_LIST, loadFriendsListSaga);\n  yield takeLatest(LOAD_TAGS, loadTagsSaga);\n  yield takeLatest(ADD_TAG, addTagSaga);\n  yield takeLatest(REMOVE_TAG, removeTagSaga);\n  yield takeLatest(GET_RECOMMEND, getRecommendSaga);\n  yield takeLatest(FRIEND_REQUEST, friendRequestSaga);\n}\nconst initialState = {\n  friendsList: [],\n  tagList: '',\n  error: null,\n  recommendList: [],\n  friendRequestList: []\n};\nexport default handleActions({\n  [LOAD_TAGS_SUCCESS]: (state, _ref) => {\n    let {\n      payload: tags\n    } = _ref;\n    return { ...state,\n      tagList: tags\n    };\n  },\n  [LOAD_TAGS_FAILURE]: (state, _ref2) => {\n    let {\n      payload: error\n    } = _ref2;\n    return { ...state,\n      error\n    };\n  },\n  [LOAD_FRIENDS_LIST_SUCCESS]: (state, _ref3) => {\n    let {\n      payload: friendsList\n    } = _ref3;\n    return { ...state,\n      friendsList: [...friendsList]\n    };\n  },\n  [LOAD_FRIENDS_LIST_FAILURE]: (state, _ref4) => {\n    let {\n      payload: error\n    } = _ref4;\n    return { ...state,\n      error\n    };\n  },\n  [ADD_TAG_SUCCESS]: state => ({ ...state\n  }),\n  [ADD_TAG_FAILURE]: (state, _ref5) => {\n    let {\n      payload: error\n    } = _ref5;\n    return { ...state,\n      error\n    };\n  },\n  [ADD_TAG_IN_FRONT]: (state, _ref6) => {\n    let {\n      payload: tag\n    } = _ref6;\n    console.log(tag);\n    return { ...state,\n      tagList: state.tagList + '_' + tag\n    };\n  },\n  [REMOVE_TAG_SUCCESS]: state => ({ ...state\n  }),\n  [REMOVE_TAG_FAILURE]: (state, _ref7) => {\n    let {\n      payload: error\n    } = _ref7;\n    return { ...state,\n      error\n    };\n  },\n  [REMOVE_TAG_IN_FRONT]: (state, _ref8) => {\n    let {\n      payload: tag\n    } = _ref8;\n    console.log(tag);\n    return { ...state,\n      tagList: state.tagList.split('_').filter(el => el !== tag).join('_')\n    };\n  },\n  [GET_RECOMMEND_SUCCESS]: (state, _ref9) => {\n    let {\n      payload: list\n    } = _ref9;\n    return { ...state,\n      recommendList: [...list]\n    };\n  },\n  [GET_RECOMMEND_FAILURE]: (state, _ref10) => {\n    let {\n      payload: error\n    } = _ref10;\n    return { ...state,\n      error\n    };\n  },\n  [FRIEND_REQUEST_SUCCESS]: (state, _ref11) => {\n    let {\n      payload: list\n    } = _ref11;\n    return { ...state,\n      friendRequestList: [...list]\n    };\n  },\n  [FRIEND_REQUEST_FAILURE]: (state, _ref12) => {\n    let {\n      payload: error\n    } = _ref12;\n    return { ...state,\n      error\n    };\n  }\n}, initialState);","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/modules/friends.js"],"names":["createAction","handleActions","takeLatest","createRequestSaga","createRequestActionTypes","friendsAPI","LOAD_FRIENDS_LIST","LOAD_FRIENDS_LIST_SUCCESS","LOAD_FRIENDS_LIST_FAILURE","LOAD_TAGS","LOAD_TAGS_SUCCESS","LOAD_TAGS_FAILURE","ADD_TAG","ADD_TAG_SUCCESS","ADD_TAG_FAILURE","ADD_TAG_IN_FRONT","REMOVE_TAG","REMOVE_TAG_SUCCESS","REMOVE_TAG_FAILURE","REMOVE_TAG_IN_FRONT","GET_RECOMMEND","GET_RECOMMEND_SUCCESS","GET_RECOMMEND_FAILURE","FRIEND_REQUEST","FRIEND_REQUEST_SUCCESS","FRIEND_REQUEST_FAILURE","loadTags","addTag","addTagInFront","removeTag","removeTagInFront","getRecommend","friendRequest","loadFriendsListSaga","loadTagsSaga","addTagSaga","removeTagSaga","getRecommendSaga","friendRequestSaga","friendsSaga","initialState","friendsList","tagList","error","recommendList","friendRequestList","state","payload","tags","tag","console","log","split","filter","el","join","list"],"mappings":"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","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\r\nimport { takeLatest } from 'redux-saga/effects';\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from '../lib/createRequestSaga';\r\nimport * as friendsAPI from '../lib/api/friends';\r\n\r\nconst [\r\n  LOAD_FRIENDS_LIST,\r\n  LOAD_FRIENDS_LIST_SUCCESS,\r\n  LOAD_FRIENDS_LIST_FAILURE,\r\n] = createRequestActionTypes('friends/SET_FRIENDS');\r\nconst [LOAD_TAGS, LOAD_TAGS_SUCCESS, LOAD_TAGS_FAILURE] =\r\n  createRequestActionTypes('friends/SET_TAGS');\r\nconst [ADD_TAG, ADD_TAG_SUCCESS, ADD_TAG_FAILURE] =\r\n  createRequestActionTypes('friends/ADD_TAG');\r\nconst ADD_TAG_IN_FRONT = 'friends/ADD_TAG_IN_FRONT';\r\nconst [REMOVE_TAG, REMOVE_TAG_SUCCESS, REMOVE_TAG_FAILURE] =\r\n  createRequestActionTypes('frineds/REMOVE_TAG');\r\nconst REMOVE_TAG_IN_FRONT = 'friends/REMOVE_TAG_IN_FRONT';\r\nconst [GET_RECOMMEND, GET_RECOMMEND_SUCCESS, GET_RECOMMEND_FAILURE] =\r\n  createRequestActionTypes('friends/GET_RECOMMEND');\r\nconst [FRIEND_REQUEST, FRIEND_REQUEST_SUCCESS, FRIEND_REQUEST_FAILURE] =\r\n  createRequestActionTypes('friends/FRIEND_REQUEST');\r\n\r\nexport const loadTags = createAction(LOAD_TAGS);\r\nexport const addTag = createAction(ADD_TAG);\r\nexport const addTagInFront = createAction(ADD_TAG_IN_FRONT);\r\nexport const removeTag = createAction(REMOVE_TAG);\r\nexport const removeTagInFront = createAction(REMOVE_TAG_IN_FRONT);\r\nexport const getRecommend = createAction(GET_RECOMMEND);\r\nexport const friendRequest = createAction(FRIEND_REQUEST);\r\n\r\nconst loadFriendsListSaga = createRequestSaga(LOAD_FRIENDS_LIST);\r\nconst loadTagsSaga = createRequestSaga(LOAD_TAGS, friendsAPI.loadTags);\r\nconst addTagSaga = createRequestSaga(ADD_TAG, friendsAPI.addTag);\r\nconst removeTagSaga = createRequestSaga(REMOVE_TAG, friendsAPI.removeTag);\r\nconst getRecommendSaga = createRequestSaga(\r\n  GET_RECOMMEND,\r\n  friendsAPI.getRecommend,\r\n);\r\nconst friendRequestSaga = createRequestSaga(\r\n  FRIEND_REQUEST,\r\n  friendsAPI.friendRequest,\r\n);\r\n\r\nexport function* friendsSaga() {\r\n  yield takeLatest(LOAD_FRIENDS_LIST, loadFriendsListSaga);\r\n  yield takeLatest(LOAD_TAGS, loadTagsSaga);\r\n  yield takeLatest(ADD_TAG, addTagSaga);\r\n  yield takeLatest(REMOVE_TAG, removeTagSaga);\r\n  yield takeLatest(GET_RECOMMEND, getRecommendSaga);\r\n  yield takeLatest(FRIEND_REQUEST, friendRequestSaga);\r\n}\r\n\r\nconst initialState = {\r\n  friendsList: [],\r\n  tagList: '',\r\n  error: null,\r\n  recommendList: [],\r\n  friendRequestList: [],\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [LOAD_TAGS_SUCCESS]: (state, { payload: tags }) => ({\r\n      ...state,\r\n      tagList: tags,\r\n    }),\r\n    [LOAD_TAGS_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [LOAD_FRIENDS_LIST_SUCCESS]: (state, { payload: friendsList }) => ({\r\n      ...state,\r\n      friendsList: [...friendsList],\r\n    }),\r\n    [LOAD_FRIENDS_LIST_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [ADD_TAG_SUCCESS]: (state) => ({\r\n      ...state,\r\n    }),\r\n    [ADD_TAG_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [ADD_TAG_IN_FRONT]: (state, { payload: tag }) => {\r\n      console.log(tag);\r\n      return {\r\n        ...state,\r\n        tagList: state.tagList + '_' + tag,\r\n      };\r\n    },\r\n    [REMOVE_TAG_SUCCESS]: (state) => ({\r\n      ...state,\r\n    }),\r\n    [REMOVE_TAG_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [REMOVE_TAG_IN_FRONT]: (state, { payload: tag }) => {\r\n      console.log(tag);\r\n      return {\r\n        ...state,\r\n        tagList: state.tagList\r\n          .split('_')\r\n          .filter((el) => el !== tag)\r\n          .join('_'),\r\n      };\r\n    },\r\n    [GET_RECOMMEND_SUCCESS]: (state, { payload: list }) => ({\r\n      ...state,\r\n      recommendList: [...list],\r\n    }),\r\n    [GET_RECOMMEND_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [FRIEND_REQUEST_SUCCESS]: (state, { payload: list }) => ({\r\n      ...state,\r\n      friendRequestList: [...list],\r\n    }),\r\n    [FRIEND_REQUEST_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n"]},"metadata":{},"sourceType":"module"}