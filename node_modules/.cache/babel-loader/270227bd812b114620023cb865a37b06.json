{"ast":null,"code":"var _jsxFileName = \"C:\\\\nani\\\\connect\\\\connect-frontend\\\\src\\\\components\\\\ChattingModal\\\\ChattingLogs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport styled, { css } from 'styled-components';\nimport { setOtherToChat } from '../../modules/chatting';\nimport ChatMessage from './ChatMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChattingLogsBlock = styled.div`\n  width: 100%;\n  height: 80%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n`;\n_c = ChattingLogsBlock;\nconst ChattingScrollContainer = styled.div`\n  padding: 10px;\n  overflow-y: auto;\n  height: 100%;\n  &::-webkit-scrollbar {\n    width: 6px;\n    height: 8px;\n    border-radius: 6px;\n    background: rgba(0, 0, 0, 0.1);\n  }\n  &::-webkit-scrollbar-thumb {\n    width: 6px;\n    height: 8px;\n    border-radius: 6px;\n    background: rgba(0, 0, 0, 0.4);\n  }\n`;\n_c2 = ChattingScrollContainer;\nconst Loading = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c3 = Loading;\nconst LoadingImage = styled.div`\n  width: 80px;\n  height: 80px;\n  background-size: 100% 100%;\n  background-image: url('/img/loading.gif');\n`;\n\nconst ChattingLogs = _ref => {\n  _s();\n\n  let {\n    loading,\n    logs,\n    other,\n    changeScroll\n  } = _ref;\n  const scrollBox = useRef();\n  useEffect(() => {\n    changeScroll(scrollBox.current);\n  }, [scrollBox, changeScroll, logs]);\n  return /*#__PURE__*/_jsxDEV(ChattingLogsBlock, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ChattingScrollContainer, {\n      ref: scrollBox,\n      children: logs && logs.map((_ref2, idx) => {\n        let {\n          msg,\n          type,\n          time\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(ChatMessage, {\n          type: type,\n          nickname: other.nickname,\n          msg: msg,\n          time: time\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChattingLogs, \"Px+aX4ERa2sC1zaYX4HptKZpuUU=\");\n\n_c4 = ChattingLogs;\nexport default ChattingLogs;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ChattingLogsBlock\");\n$RefreshReg$(_c2, \"ChattingScrollContainer\");\n$RefreshReg$(_c3, \"Loading\");\n$RefreshReg$(_c4, \"ChattingLogs\");","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/components/ChattingModal/ChattingLogs.js"],"names":["React","useEffect","useRef","styled","css","setOtherToChat","ChatMessage","ChattingLogsBlock","div","ChattingScrollContainer","Loading","LoadingImage","ChattingLogs","loading","logs","other","changeScroll","scrollBox","current","map","idx","msg","type","time","nickname"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,iBAAiB,GAAGJ,MAAM,CAACK,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA,CANA;KAAMD,iB;AAON,MAAME,uBAAuB,GAAGN,MAAM,CAACK,GAAI;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;MAAMC,uB;AAiBN,MAAMC,OAAO,GAAGP,MAAM,CAACK,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA,CANA;MAAME,O;AAON,MAAMC,YAAY,GAAGR,MAAM,CAACK,GAAI;AAChC;AACA;AACA;AACA;AACA,CALA;;AAMA,MAAMI,YAAY,GAAG,QAA4C;AAAA;;AAAA,MAA3C;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA;AAAxB,GAA2C;AAC/D,QAAMC,SAAS,GAAGf,MAAM,EAAxB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,YAAY,CAACC,SAAS,CAACC,OAAX,CAAZ;AACD,GAFQ,EAEN,CAACD,SAAD,EAAYD,YAAZ,EAA0BF,IAA1B,CAFM,CAAT;AAGA,sBACE,QAAC,iBAAD;AAAA,cACGD,OAAO,gBACN,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADM,gBAGN,QAAC,uBAAD;AAAyB,MAAA,GAAG,EAAEI,SAA9B;AAAA,gBACGH,IAAI,IACHA,IAAI,CAACK,GAAL,CAAS,QAAsBC,GAAtB;AAAA,YAAC;AAAEC,UAAAA,GAAF;AAAOC,UAAAA,IAAP;AAAaC,UAAAA;AAAb,SAAD;AAAA,4BACP,QAAC,WAAD;AAEE,UAAA,IAAI,EAAED,IAFR;AAGE,UAAA,QAAQ,EAAEP,KAAK,CAACS,QAHlB;AAIE,UAAA,GAAG,EAAEH,GAJP;AAKE,UAAA,IAAI,EAAEE;AALR,WACOH,GADP;AAAA;AAAA;AAAA;AAAA,gBADO;AAAA,OAAT;AAFJ;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAzBD;;GAAMR,Y;;MAAAA,Y;AA2BN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { setOtherToChat } from '../../modules/chatting';\r\nimport ChatMessage from './ChatMessage';\r\n\r\nconst ChattingLogsBlock = styled.div`\r\n  width: 100%;\r\n  height: 80%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n`;\r\nconst ChattingScrollContainer = styled.div`\r\n  padding: 10px;\r\n  overflow-y: auto;\r\n  height: 100%;\r\n  &::-webkit-scrollbar {\r\n    width: 6px;\r\n    height: 8px;\r\n    border-radius: 6px;\r\n    background: rgba(0, 0, 0, 0.1);\r\n  }\r\n  &::-webkit-scrollbar-thumb {\r\n    width: 6px;\r\n    height: 8px;\r\n    border-radius: 6px;\r\n    background: rgba(0, 0, 0, 0.4);\r\n  }\r\n`;\r\nconst Loading = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst LoadingImage = styled.div`\r\n  width: 80px;\r\n  height: 80px;\r\n  background-size: 100% 100%;\r\n  background-image: url('/img/loading.gif');\r\n`;\r\nconst ChattingLogs = ({ loading, logs, other, changeScroll }) => {\r\n  const scrollBox = useRef();\r\n  useEffect(() => {\r\n    changeScroll(scrollBox.current);\r\n  }, [scrollBox, changeScroll, logs]);\r\n  return (\r\n    <ChattingLogsBlock>\r\n      {loading ? (\r\n        <Loading></Loading>\r\n      ) : (\r\n        <ChattingScrollContainer ref={scrollBox}>\r\n          {logs &&\r\n            logs.map(({ msg, type, time }, idx) => (\r\n              <ChatMessage\r\n                key={idx}\r\n                type={type}\r\n                nickname={other.nickname}\r\n                msg={msg}\r\n                time={time}\r\n              />\r\n            ))}\r\n        </ChattingScrollContainer>\r\n      )}\r\n    </ChattingLogsBlock>\r\n  );\r\n};\r\n\r\nexport default ChattingLogs;\r\n"]},"metadata":{},"sourceType":"module"}