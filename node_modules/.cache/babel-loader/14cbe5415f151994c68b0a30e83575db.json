{"ast":null,"code":"var _jsxFileName = \"C:\\\\nani\\\\connect\\\\connect-frontend\\\\src\\\\containers\\\\ChattingList\\\\ChattingListContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from '../../../node_modules/react-router/index';\nimport ChattingList from '../../components/ChattingList/ChattingList';\nimport { openChatting, requestChattingList } from '../../modules/chatting';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChattingListContainer = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    chattingList\n  } = useSelector(_ref => {\n    let {\n      chatting: {\n        chattingList\n      }\n    } = _ref;\n    return {\n      chattingList\n    };\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!localStorage.user) navigate('/');\n    const {\n      uid\n    } = JSON.parse(localStorage.user);\n    dispatch(requestChattingList({\n      uid\n    }));\n  }, [dispatch, navigate]);\n\n  const openChatting = () => {\n    console.log('hi');\n    dispatch(openChatting());\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChattingList, {\n    chattingList: chattingList,\n    openChatting: openChatting\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChattingListContainer, \"1rncYtHiHWbjbquMOCIJOtFz/Gw=\", false, function () {\n  return [useDispatch, useSelector, useNavigate];\n});\n\n_c = ChattingListContainer;\nexport default ChattingListContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChattingListContainer\");","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/ChattingList/ChattingListContainer.js"],"names":["React","useEffect","useDispatch","useSelector","useNavigate","ChattingList","openChatting","requestChattingList","ChattingListContainer","dispatch","chattingList","chatting","navigate","localStorage","user","uid","JSON","parse","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,0CAA5B;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,SAASC,YAAT,EAAuBC,mBAAvB,QAAkD,wBAAlD;;;AAEA,MAAMC,qBAAqB,GAAG,MAAM;AAAA;;AAClC,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAmBP,WAAW,CAAC;AAAA,QAAC;AAAEQ,MAAAA,QAAQ,EAAE;AAAED,QAAAA;AAAF;AAAZ,KAAD;AAAA,WAAqC;AACxEA,MAAAA;AADwE,KAArC;AAAA,GAAD,CAApC;AAGA,QAAME,QAAQ,GAAGR,WAAW,EAA5B;AACAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACY,YAAY,CAACC,IAAlB,EAAwBF,QAAQ,CAAC,GAAD,CAAR;AACxB,UAAM;AAAEG,MAAAA;AAAF,QAAUC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,IAAxB,CAAhB;AAEAL,IAAAA,QAAQ,CAACF,mBAAmB,CAAC;AAAEQ,MAAAA;AAAF,KAAD,CAApB,CAAR;AACD,GALQ,EAKN,CAACN,QAAD,EAAWG,QAAX,CALM,CAAT;;AAOA,QAAMN,YAAY,GAAG,MAAM;AACzBY,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAV,IAAAA,QAAQ,CAACH,YAAY,EAAb,CAAR;AACD,GAHD;;AAKA,sBACE,QAAC,YAAD;AAAc,IAAA,YAAY,EAAEI,YAA5B;AAA0C,IAAA,YAAY,EAAEJ;AAAxD;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CArBD;;GAAME,qB;UACaN,W,EACQC,W,EAGRC,W;;;KALbI,qB;AAuBN,eAAeA,qBAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from '../../../node_modules/react-router/index';\r\nimport ChattingList from '../../components/ChattingList/ChattingList';\r\nimport { openChatting, requestChattingList } from '../../modules/chatting';\r\n\r\nconst ChattingListContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const { chattingList } = useSelector(({ chatting: { chattingList } }) => ({\r\n    chattingList,\r\n  }));\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    if (!localStorage.user) navigate('/');\r\n    const { uid } = JSON.parse(localStorage.user);\r\n\r\n    dispatch(requestChattingList({ uid }));\r\n  }, [dispatch, navigate]);\r\n\r\n  const openChatting = () => {\r\n    console.log('hi');\r\n    dispatch(openChatting());\r\n  };\r\n\r\n  return (\r\n    <ChattingList chattingList={chattingList} openChatting={openChatting} />\r\n  );\r\n};\r\n\r\nexport default ChattingListContainer;\r\n"]},"metadata":{},"sourceType":"module"}