{"ast":null,"code":"var _jsxFileName = \"C:\\\\nani\\\\connect\\\\connect-frontend\\\\src\\\\containers\\\\Chatting\\\\ChattingContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Chatting from '../../components/Chatting/Chatting';\nimport { initializeOther } from '../../modules/chatting';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChattingContainer = () => {\n  _s();\n\n  const changeScroll = useCallback(e => {\n    e.scrollTop = e.scrollHeight;\n  }, []);\n  const {\n    other,\n    logs\n  } = useSelector(_ref => {\n    let {\n      chatting: {\n        other,\n        logs\n      }\n    } = _ref;\n    return {\n      other,\n      logs\n    };\n  });\n  const dispatch = useDispatch();\n  useEffect(() => {\n    return () => {\n      dispatch(initializeOther());\n    };\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(Chatting, {\n    other: other,\n    logs: logs\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n};\n\n_s(ChattingContainer, \"HnR44ZEOLeZVLNiyAj1RmUURDVw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ChattingContainer;\nexport default ChattingContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChattingContainer\");","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/Chatting/ChattingContainer.js"],"names":["React","useEffect","useCallback","useDispatch","useSelector","Chatting","initializeOther","ChattingContainer","changeScroll","e","scrollTop","scrollHeight","other","logs","chatting","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,SAASC,eAAT,QAAgC,wBAAhC;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAMC,YAAY,GAAGN,WAAW,CAAEO,CAAD,IAAO;AACtCA,IAAAA,CAAC,CAACC,SAAF,GAAcD,CAAC,CAACE,YAAhB;AACD,GAF+B,EAE7B,EAF6B,CAAhC;AAGA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAkBT,WAAW,CAAC;AAAA,QAAC;AAAEU,MAAAA,QAAQ,EAAE;AAAEF,QAAAA,KAAF;AAASC,QAAAA;AAAT;AAAZ,KAAD;AAAA,WAAoC;AACtED,MAAAA,KADsE;AAEtEC,MAAAA;AAFsE,KAApC;AAAA,GAAD,CAAnC;AAIA,QAAME,QAAQ,GAAGZ,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACXc,MAAAA,QAAQ,CAACT,eAAe,EAAhB,CAAR;AACD,KAFD;AAGD,GAJQ,EAIN,CAACS,QAAD,CAJM,CAAT;AAKA,sBAAO,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEH,KAAjB;AAAwB,IAAA,IAAI,EAAEC;AAA9B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAfD;;GAAMN,iB;UAIoBH,W,EAIPD,W;;;KARbI,iB;AAiBN,eAAeA,iBAAf","sourcesContent":["import React, { useEffect, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Chatting from '../../components/Chatting/Chatting';\r\nimport { initializeOther } from '../../modules/chatting';\r\n\r\nconst ChattingContainer = () => {\r\n  const changeScroll = useCallback((e) => {\r\n    e.scrollTop = e.scrollHeight;\r\n  }, []);\r\n  const { other, logs } = useSelector(({ chatting: { other, logs } }) => ({\r\n    other,\r\n    logs,\r\n  }));\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(initializeOther());\r\n    };\r\n  }, [dispatch]);\r\n  return <Chatting other={other} logs={logs} />;\r\n};\r\n\r\nexport default ChattingContainer;\r\n"]},"metadata":{},"sourceType":"module"}