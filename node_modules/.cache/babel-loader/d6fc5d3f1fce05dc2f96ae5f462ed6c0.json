{"ast":null,"code":"var _jsxFileName = \"C:\\\\nani\\\\connect\\\\connect-frontend\\\\src\\\\containers\\\\common\\\\NoticeContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Notice from '../../components/common/Notice';\nimport { acceptFriendRequest, refuseFriendRequest } from '../../modules/friends';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoticeContainer = _ref => {\n  _s();\n\n  let {\n    sender,\n    profileImage,\n    nickname,\n    type,\n    time\n  } = _ref;\n  const dispatch = useDispatch();\n  const [receiver, setReceiver] = useState(null);\n  useEffect(() => {\n    if (localStorage.user) {\n      setReceiver(JSON.parse(localStorage.getItem('user')).uid);\n    }\n  }, []);\n\n  const onAccept = e => {\n    e.stopPropagation();\n    dispatch(acceptFriendRequest({\n      sender,\n      receiver\n    }));\n  };\n\n  const onRefuse = e => {\n    e.stopPropagation();\n    dispatch(refuseFriendRequest({\n      sender,\n      receiver\n    }));\n  };\n\n  const onCancel = e => {\n    e.stopPropagation(); // const sender = JSON.parse(localStorage.user).uid;\n\n    console.log('cancel', sender, receiver);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Notice, {\n    profileImage: profileImage,\n    type: type,\n    time: time,\n    nickname: nickname,\n    onAccept: onAccept,\n    onRefuse: onRefuse,\n    onCancel: onCancel\n  }, sender, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NoticeContainer, \"6YMVG6Q1hR3L82diViLG5NNsQo8=\", false, function () {\n  return [useDispatch];\n});\n\n_c = NoticeContainer;\nexport default NoticeContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoticeContainer\");","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/common/NoticeContainer.js"],"names":["React","useEffect","useState","useDispatch","Notice","acceptFriendRequest","refuseFriendRequest","NoticeContainer","sender","profileImage","nickname","type","time","dispatch","receiver","setReceiver","localStorage","user","JSON","parse","getItem","uid","onAccept","e","stopPropagation","onRefuse","onCancel","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SACEC,mBADF,EAEEC,mBAFF,QAGO,uBAHP;;;AAKA,MAAMC,eAAe,GAAG,QAAoD;AAAA;;AAAA,MAAnD;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA,QAAxB;AAAkCC,IAAAA,IAAlC;AAAwCC,IAAAA;AAAxC,GAAmD;AAC1E,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,IAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,YAAY,CAACC,IAAjB,EAAuB;AACrBF,MAAAA,WAAW,CAACG,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACI,OAAb,CAAqB,MAArB,CAAX,EAAyCC,GAA1C,CAAX;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;;AAKA,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,eAAF;AACAX,IAAAA,QAAQ,CAACR,mBAAmB,CAAC;AAAEG,MAAAA,MAAF;AAAUM,MAAAA;AAAV,KAAD,CAApB,CAAR;AACD,GAHD;;AAIA,QAAMW,QAAQ,GAAIF,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,eAAF;AACAX,IAAAA,QAAQ,CAACP,mBAAmB,CAAC;AAAEE,MAAAA,MAAF;AAAUM,MAAAA;AAAV,KAAD,CAApB,CAAR;AACD,GAHD;;AAIA,QAAMY,QAAQ,GAAIH,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,eAAF,GADsB,CAEtB;;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBpB,MAAtB,EAA8BM,QAA9B;AACD,GAJD;;AAKA,sBACE,QAAC,MAAD;AAEE,IAAA,YAAY,EAAEL,YAFhB;AAGE,IAAA,IAAI,EAAEE,IAHR;AAIE,IAAA,IAAI,EAAEC,IAJR;AAKE,IAAA,QAAQ,EAAEF,QALZ;AAME,IAAA,QAAQ,EAAEY,QANZ;AAOE,IAAA,QAAQ,EAAEG,QAPZ;AAQE,IAAA,QAAQ,EAAEC;AARZ,KACOlB,MADP;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAlCD;;GAAMD,e;UACaJ,W;;;KADbI,e;AAoCN,eAAeA,eAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Notice from '../../components/common/Notice';\r\nimport {\r\n  acceptFriendRequest,\r\n  refuseFriendRequest,\r\n} from '../../modules/friends';\r\n\r\nconst NoticeContainer = ({ sender, profileImage, nickname, type, time }) => {\r\n  const dispatch = useDispatch();\r\n  const [receiver, setReceiver] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.user) {\r\n      setReceiver(JSON.parse(localStorage.getItem('user')).uid);\r\n    }\r\n  }, []);\r\n  const onAccept = (e) => {\r\n    e.stopPropagation();\r\n    dispatch(acceptFriendRequest({ sender, receiver }));\r\n  };\r\n  const onRefuse = (e) => {\r\n    e.stopPropagation();\r\n    dispatch(refuseFriendRequest({ sender, receiver }));\r\n  };\r\n  const onCancel = (e) => {\r\n    e.stopPropagation();\r\n    // const sender = JSON.parse(localStorage.user).uid;\r\n    console.log('cancel', sender, receiver);\r\n  };\r\n  return (\r\n    <Notice\r\n      key={sender}\r\n      profileImage={profileImage}\r\n      type={type}\r\n      time={time}\r\n      nickname={nickname}\r\n      onAccept={onAccept}\r\n      onRefuse={onRefuse}\r\n      onCancel={onCancel}\r\n    />\r\n  );\r\n};\r\n\r\nexport default NoticeContainer;\r\n"]},"metadata":{},"sourceType":"module"}