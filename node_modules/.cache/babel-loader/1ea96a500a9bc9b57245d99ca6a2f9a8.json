{"ast":null,"code":"var _jsxFileName = \"C:\\\\nani\\\\connect\\\\connect-frontend\\\\src\\\\containers\\\\common\\\\HeaderContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Header from '../../components/common/Header';\nimport Navigation from '../../components/common/Navigation';\nimport { removeAuth } from '../../modules/auth';\nimport { initializeChatHall, leaveChatHall } from '../../modules/chatHall';\nimport { friendRequestAccepted, friendRequestRefused, getRecommend, receiveMessage, requestMessagesList, someoneLogin, someoneLogout } from '../../modules/friends';\nimport { logout } from '../../modules/user';\nimport { socket } from '../../lib/sockets/chatHallSocket';\nimport { useNavigate } from '../../../node_modules/react-router/index';\nimport { receiveChatting } from '../../modules/chatting';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HeaderContainer = () => {\n  _s();\n\n  const {\n    user,\n    messages,\n    chattingList\n  } = useSelector(_ref => {\n    let {\n      user,\n      friends,\n      chatting: {\n        chattingList\n      }\n    } = _ref;\n    return {\n      user: user.user,\n      messages: friends.messagesList,\n      chattingList\n    };\n  });\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [noticeList, setNoticeList] = useState(false);\n  const [newMessages, setNewMessages] = useState(0);\n  const toggleNoticeList = useCallback(() => {\n    setNoticeList(!noticeList);\n  }, [noticeList]);\n\n  const onLogout = () => {\n    dispatch(logout({\n      uid: user.uid\n    }));\n    dispatch(removeAuth());\n\n    if (localStorage.user) {\n      localStorage.removeItem('user');\n    }\n\n    if (localStorage.chatHall) {\n      dispatch(leaveChatHall({\n        username: user.username\n      }));\n      dispatch(initializeChatHall());\n      localStorage.removeItem('chatHall');\n    }\n\n    navigate('/');\n  };\n\n  useEffect(() => {\n    if (user) {\n      const {\n        uid\n      } = user;\n      dispatch(requestMessagesList({\n        uid\n      }));\n      socket.on('friend_request', data => {\n        const {\n          info\n        } = data;\n        info.time = data.time;\n        info.type = 'received';\n        dispatch(receiveMessage(info));\n      });\n      socket.on('friend_request_accepted', data => {\n        dispatch(friendRequestAccepted(data));\n        dispatch(getRecommend({\n          filter: user.tags,\n          uid: user.uid\n        }));\n      });\n      socket.on('friend_request_refused', data => {\n        dispatch(friendRequestRefused(Number(data)));\n      });\n      socket.on('friend_request_canceled', data => {\n        dispatch(friendRequestRefused(Number(data)));\n      });\n      socket.on('someone_logout', uid => {\n        dispatch(someoneLogout(uid));\n      });\n      socket.on('someone_login', uid => {\n        dispatch(someoneLogin(uid));\n      });\n      socket.on('someone_send_message', result => {\n        dispatch(receiveChatting(result));\n      });\n    }\n\n    return () => {\n      socket.off();\n    };\n  }, [dispatch, user, chattingList, newMessages]);\n  useEffect(() => {\n    if (!localStorage.getItem('user')) {\n      navigate('/');\n    }\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      noticeList: noticeList,\n      toggleNoticeList: toggleNoticeList,\n      user: user,\n      onLogout: onLogout,\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), user ? /*#__PURE__*/_jsxDEV(Navigation, {\n      newMessages: newMessages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }, this) : '']\n  }, void 0, true);\n};\n\n_s(HeaderContainer, \"p06DE+miIdGMs7WZ/i0m2cxVtOo=\", false, function () {\n  return [useSelector, useDispatch, useNavigate];\n});\n\n_c = HeaderContainer;\nexport default HeaderContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderContainer\");","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/common/HeaderContainer.js"],"names":["React","useCallback","useEffect","useState","useDispatch","useSelector","Header","Navigation","removeAuth","initializeChatHall","leaveChatHall","friendRequestAccepted","friendRequestRefused","getRecommend","receiveMessage","requestMessagesList","someoneLogin","someoneLogout","logout","socket","useNavigate","receiveChatting","HeaderContainer","user","messages","chattingList","friends","chatting","messagesList","dispatch","navigate","noticeList","setNoticeList","newMessages","setNewMessages","toggleNoticeList","onLogout","uid","localStorage","removeItem","chatHall","username","on","data","info","time","type","filter","tags","Number","result","off","getItem"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Header from '../../components/common/Header';\r\nimport Navigation from '../../components/common/Navigation';\r\nimport { removeAuth } from '../../modules/auth';\r\nimport { initializeChatHall, leaveChatHall } from '../../modules/chatHall';\r\nimport {\r\n  friendRequestAccepted,\r\n  friendRequestRefused,\r\n  getRecommend,\r\n  receiveMessage,\r\n  requestMessagesList,\r\n  someoneLogin,\r\n  someoneLogout,\r\n} from '../../modules/friends';\r\nimport { logout } from '../../modules/user';\r\nimport { socket } from '../../lib/sockets/chatHallSocket';\r\nimport { useNavigate } from '../../../node_modules/react-router/index';\r\nimport { receiveChatting } from '../../modules/chatting';\r\nconst HeaderContainer = () => {\r\n  const { user, messages, chattingList } = useSelector(\r\n    ({ user, friends, chatting: { chattingList } }) => ({\r\n      user: user.user,\r\n      messages: friends.messagesList,\r\n      chattingList,\r\n    }),\r\n  );\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [noticeList, setNoticeList] = useState(false);\r\n  const [newMessages, setNewMessages] = useState(0);\r\n  const toggleNoticeList = useCallback(() => {\r\n    setNoticeList(!noticeList);\r\n  }, [noticeList]);\r\n  const onLogout = () => {\r\n    dispatch(logout({ uid: user.uid }));\r\n    dispatch(removeAuth());\r\n    if (localStorage.user) {\r\n      localStorage.removeItem('user');\r\n    }\r\n    if (localStorage.chatHall) {\r\n      dispatch(leaveChatHall({ username: user.username }));\r\n      dispatch(initializeChatHall());\r\n      localStorage.removeItem('chatHall');\r\n    }\r\n    navigate('/');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      const { uid } = user;\r\n      dispatch(requestMessagesList({ uid }));\r\n      socket.on('friend_request', (data) => {\r\n        const { info } = data;\r\n        info.time = data.time;\r\n        info.type = 'received';\r\n        dispatch(receiveMessage(info));\r\n      });\r\n      socket.on('friend_request_accepted', (data) => {\r\n        dispatch(friendRequestAccepted(data));\r\n        dispatch(getRecommend({ filter: user.tags, uid: user.uid }));\r\n      });\r\n      socket.on('friend_request_refused', (data) => {\r\n        dispatch(friendRequestRefused(Number(data)));\r\n      });\r\n      socket.on('friend_request_canceled', (data) => {\r\n        dispatch(friendRequestRefused(Number(data)));\r\n      });\r\n      socket.on('someone_logout', (uid) => {\r\n        dispatch(someoneLogout(uid));\r\n      });\r\n      socket.on('someone_login', (uid) => {\r\n        dispatch(someoneLogin(uid));\r\n      });\r\n      socket.on('someone_send_message', (result) => {\r\n        dispatch(receiveChatting(result));\r\n      });\r\n    }\r\n    return () => {\r\n      socket.off();\r\n    };\r\n  }, [dispatch, user, chattingList, newMessages]);\r\n  useEffect(() => {\r\n    if (!localStorage.getItem('user')) {\r\n      navigate('/');\r\n    }\r\n  }, [navigate]);\r\n  return (\r\n    <>\r\n      <Header\r\n        noticeList={noticeList}\r\n        toggleNoticeList={toggleNoticeList}\r\n        user={user}\r\n        onLogout={onLogout}\r\n        messages={messages}\r\n      />\r\n      {user ? <Navigation newMessages={newMessages} /> : ''}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeaderContainer;\r\n"]},"metadata":{},"sourceType":"module"}