{"ast":null,"code":"import _slicedToArray from\"C:/nani/connect/connect-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{useNavigate}from'../../../node_modules/react-router/index';import LoginForm from'../../components/auth/LoginForm';import{changeField,initializeForm,login}from'../../modules/auth';import{check}from'../../modules/user';import{jsx as _jsx}from\"react/jsx-runtime\";var LoginContainer=function LoginContainer(){var dispatch=useDispatch();var navigate=useNavigate();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),err=_useState2[0],setErr=_useState2[1];var _useSelector=useSelector(function(_ref){var auth=_ref.auth,user=_ref.user;return{form:auth.login,authError:auth.authError,auth:auth.auth,user:user.user};}),form=_useSelector.form,authError=_useSelector.authError,auth=_useSelector.auth,user=_useSelector.user;var onChange=function onChange(e){var _e$target=e.target,value=_e$target.value,name=_e$target.name;dispatch(changeField({form:'login',key:name,value:value}));};var onSubmit=function onSubmit(e){e.preventDefault();var username=form.username,password=form.password;dispatch(login({username:username,password:password}));};useEffect(function(){if(authError){setErr(true);console.log('로그인 실패');return;}if(auth){console.log('로그인 성공');dispatch(check());}},[authError,auth,dispatch]);useEffect(function(){dispatch(initializeForm('login'));},[dispatch]);useEffect(function(){if(user){dispatch(initializeForm('login'));try{localStorage.setItem('user',JSON.stringify(user));navigate('/friends');}catch(e){console.error(e);}}},[user,navigate,dispatch]);return/*#__PURE__*/_jsx(LoginForm,{form:form,onChange:onChange,errorMsg:err,onSubmit:onSubmit});};export default LoginContainer;","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/auth/LoginContainer.js"],"names":["React","useEffect","useState","useDispatch","useSelector","useNavigate","LoginForm","changeField","initializeForm","login","check","LoginContainer","dispatch","navigate","err","setErr","auth","user","form","authError","onChange","e","target","value","name","key","onSubmit","preventDefault","username","password","console","log","localStorage","setItem","JSON","stringify","error"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from '../../../node_modules/react-router/index';\r\nimport LoginForm from '../../components/auth/LoginForm';\r\nimport { changeField, initializeForm, login } from '../../modules/auth';\r\nimport { check } from '../../modules/user';\r\n\r\nconst LoginContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [err, setErr] = useState(false);\r\n  const { form, authError, auth, user } = useSelector(({ auth, user }) => ({\r\n    form: auth.login,\r\n    authError: auth.authError,\r\n    auth: auth.auth,\r\n    user: user.user,\r\n  }));\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    dispatch(\r\n      changeField({\r\n        form: 'login',\r\n        key: name,\r\n        value,\r\n      }),\r\n    );\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { username, password } = form;\r\n    dispatch(login({ username, password }));\r\n  };\r\n  useEffect(() => {\r\n    if (authError) {\r\n      setErr(true);\r\n      console.log('로그인 실패');\r\n      return;\r\n    }\r\n    if (auth) {\r\n      console.log('로그인 성공');\r\n      dispatch(check());\r\n    }\r\n  }, [authError, auth, dispatch]);\r\n  useEffect(() => {\r\n    dispatch(initializeForm('login'));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      dispatch(initializeForm('login'));\r\n      try {\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        navigate('/friends');\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n  }, [user, navigate, dispatch]);\r\n  return (\r\n    <LoginForm\r\n      form={form}\r\n      onChange={onChange}\r\n      errorMsg={err}\r\n      onSubmit={onSubmit}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LoginContainer;\r\n"]},"metadata":{},"sourceType":"module"}