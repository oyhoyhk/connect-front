{"ast":null,"code":"import _defineProperty from\"C:/nani/connect/connect-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"C:/nani/connect/connect-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/nani/connect/connect-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _handleActions;import _regeneratorRuntime from\"C:\\\\nani\\\\connect\\\\connect-frontend\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(logoutSaga),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(userSaga);import{createAction,handleActions}from'redux-actions';import{takeLatest,call}from'redux-saga/effects';import*as authAPI from'../lib/api/auth';import createRequestSaga,{createRequestActionTypes}from'../lib/createRequestSaga';var _createRequestActionT=createRequestActionTypes('user/CHECK'),_createRequestActionT2=_slicedToArray(_createRequestActionT,3),CHECK=_createRequestActionT2[0],CHECK_SUCCESS=_createRequestActionT2[1],CHECK_FAILURE=_createRequestActionT2[2];var LOGOUT='user/LOGOUT';var TEMP_SET_USER='user/TEMP_SET_USER';export var tempSetUser=createAction(TEMP_SET_USER);export var check=createAction(CHECK);export var logout=createAction(LOGOUT);var checkSaga=createRequestSaga(CHECK,authAPI.check);function checkFailureSaga(){try{localStorage.removeItem('user');}catch(e){console.log('localStorage is not working');}}function logoutSaga(_ref){var uid;return _regeneratorRuntime.wrap(function logoutSaga$(_context){while(1){switch(_context.prev=_context.next){case 0:uid=_ref.payload.uid;_context.prev=1;_context.next=4;return call(authAPI.logout,uid);case 4:localStorage.removeItem('user');_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](1);console.log(_context.t0);case 10:case\"end\":return _context.stop();}}},_marked,null,[[1,7]]);}export function userSaga(){return _regeneratorRuntime.wrap(function userSaga$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeLatest(CHECK,checkSaga);case 2:_context2.next=4;return takeLatest(CHECK_FAILURE,checkFailureSaga);case 4:_context2.next=6;return takeLatest(LOGOUT,logoutSaga);case 6:case\"end\":return _context2.stop();}}},_marked2);}var initialState={user:null,checkError:null};export default handleActions((_handleActions={},_defineProperty(_handleActions,CHECK_SUCCESS,function(state,_ref2){var user=_ref2.payload;return _objectSpread(_objectSpread({},state),{},{user:user,checkError:null});}),_defineProperty(_handleActions,CHECK_FAILURE,function(state,_ref3){var error=_ref3.payload;return _objectSpread(_objectSpread({},state),{},{user:null,checkError:error});}),_defineProperty(_handleActions,LOGOUT,function(state){return _objectSpread(_objectSpread({},state),{},{user:null});}),_defineProperty(_handleActions,TEMP_SET_USER,function(state,_ref4){var user=_ref4.payload;return _objectSpread(_objectSpread({},state),{},{user:user});}),_handleActions),initialState);","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/modules/user.js"],"names":["logoutSaga","userSaga","createAction","handleActions","takeLatest","call","authAPI","createRequestSaga","createRequestActionTypes","CHECK","CHECK_SUCCESS","CHECK_FAILURE","LOGOUT","TEMP_SET_USER","tempSetUser","check","logout","checkSaga","checkFailureSaga","localStorage","removeItem","e","console","log","uid","payload","initialState","user","checkError","state","error"],"mappings":"miBA4BUA,U,iDASOC,Q,EArCjB,OAASC,YAAT,CAAuBC,aAAvB,KAA4C,eAA5C,CACA,OAASC,UAAT,CAAqBC,IAArB,KAAiC,oBAAjC,CACA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,iBAAzB,CAEA,MAAOC,CAAAA,iBAAP,EACEC,wBADF,KAEO,0BAFP,CAIA,0BACEA,wBAAwB,CAAC,YAAD,CAD1B,gEAAOC,KAAP,2BAAcC,aAAd,2BAA6BC,aAA7B,2BAGA,GAAMC,CAAAA,MAAM,CAAG,aAAf,CACA,GAAMC,CAAAA,aAAa,CAAG,oBAAtB,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAGZ,YAAY,CAACW,aAAD,CAAhC,CACP,MAAO,IAAME,CAAAA,KAAK,CAAGb,YAAY,CAACO,KAAD,CAA1B,CACP,MAAO,IAAMO,CAAAA,MAAM,CAAGd,YAAY,CAACU,MAAD,CAA3B,CAEP,GAAMK,CAAAA,SAAS,CAAGV,iBAAiB,CAACE,KAAD,CAAQH,OAAO,CAACS,KAAhB,CAAnC,CAEA,QAASG,CAAAA,gBAAT,EAA4B,CAC1B,GAAI,CACFC,YAAY,CAACC,UAAb,CAAwB,MAAxB,EACD,CAAC,MAAOC,CAAP,CAAU,CACVC,OAAO,CAACC,GAAR,CAAY,6BAAZ,EACD,CACF,CAED,QAAUvB,CAAAA,UAAV,kIAAkCwB,GAAlC,MAAuBC,OAAvB,CAAkCD,GAAlC,iCAEI,MAAMnB,CAAAA,IAAI,CAACC,OAAO,CAACU,MAAT,CAAiBQ,GAAjB,CAAV,CAFJ,OAGIL,YAAY,CAACC,UAAb,CAAwB,MAAxB,EAHJ,+EAKIE,OAAO,CAACC,GAAR,cALJ,oEASA,MAAO,SAAUtB,CAAAA,QAAV,wIACL,MAAMG,CAAAA,UAAU,CAACK,KAAD,CAAQQ,SAAR,CAAhB,CADK,wBAEL,MAAMb,CAAAA,UAAU,CAACO,aAAD,CAAgBO,gBAAhB,CAAhB,CAFK,wBAGL,MAAMd,CAAAA,UAAU,CAACQ,MAAD,CAASZ,UAAT,CAAhB,CAHK,wDAMP,GAAM0B,CAAAA,YAAY,CAAG,CACnBC,IAAI,CAAE,IADa,CAEnBC,UAAU,CAAE,IAFO,CAArB,CAKA,cAAezB,CAAAA,aAAa,mDAEvBO,aAFuB,CAEP,SAACmB,KAAD,WAAmBF,CAAAA,IAAnB,OAAUF,OAAV,uCACZI,KADY,MAEfF,IAAI,CAAJA,IAFe,CAGfC,UAAU,CAAE,IAHG,IAFO,iCAOvBjB,aAPuB,CAOP,SAACkB,KAAD,WAAmBC,CAAAA,KAAnB,OAAUL,OAAV,uCACZI,KADY,MAEfF,IAAI,CAAE,IAFS,CAGfC,UAAU,CAAEE,KAHG,IAPO,iCAYvBlB,MAZuB,CAYd,SAACiB,KAAD,wCACLA,KADK,MAERF,IAAI,CAAE,IAFE,IAZc,iCAgBvBd,aAhBuB,CAgBP,SAACgB,KAAD,WAAmBF,CAAAA,IAAnB,OAAUF,OAAV,uCACZI,KADY,MAEfF,IAAI,CAAEA,IAFS,IAhBO,kBAqB1BD,YArB0B,CAA5B","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\r\nimport { takeLatest, call } from 'redux-saga/effects';\r\nimport * as authAPI from '../lib/api/auth';\r\n\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from '../lib/createRequestSaga';\r\n\r\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] =\r\n  createRequestActionTypes('user/CHECK');\r\n\r\nconst LOGOUT = 'user/LOGOUT';\r\nconst TEMP_SET_USER = 'user/TEMP_SET_USER';\r\n\r\nexport const tempSetUser = createAction(TEMP_SET_USER);\r\nexport const check = createAction(CHECK);\r\nexport const logout = createAction(LOGOUT);\r\n\r\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\r\n\r\nfunction checkFailureSaga() {\r\n  try {\r\n    localStorage.removeItem('user');\r\n  } catch (e) {\r\n    console.log('localStorage is not working');\r\n  }\r\n}\r\n\r\nfunction* logoutSaga({ payload: { uid } }) {\r\n  try {\r\n    yield call(authAPI.logout, uid);\r\n    localStorage.removeItem('user');\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport function* userSaga() {\r\n  yield takeLatest(CHECK, checkSaga);\r\n  yield takeLatest(CHECK_FAILURE, checkFailureSaga);\r\n  yield takeLatest(LOGOUT, logoutSaga);\r\n}\r\n\r\nconst initialState = {\r\n  user: null,\r\n  checkError: null,\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [CHECK_SUCCESS]: (state, { payload: user }) => ({\r\n      ...state,\r\n      user,\r\n      checkError: null,\r\n    }),\r\n    [CHECK_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      user: null,\r\n      checkError: error,\r\n    }),\r\n    [LOGOUT]: (state) => ({\r\n      ...state,\r\n      user: null,\r\n    }),\r\n    [TEMP_SET_USER]: (state, { payload: user }) => ({\r\n      ...state,\r\n      user: user,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n"]},"metadata":{},"sourceType":"module"}