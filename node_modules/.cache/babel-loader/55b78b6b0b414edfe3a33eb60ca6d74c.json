{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/nani/connect/connect-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6;import React from'react';import{useDispatch}from'react-redux';import styled from'styled-components';import{openChatting,requestChattingLogs,setOtherToChat,startLoading}from'../../modules/chatting';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChatInfoBlock=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  border-bottom: 1px solid #cdcdcd;\\n  width: 98%;\\n  height: 60px;\\n  margin: 0 auto;\\n  padding: 3px;\\n  border-radius: 5px;\\n  position: relative;\\n  &:last-child {\\n    border: none;\\n  }\\n  display: flex;\\n  align-items: center;\\n  &:hover {\\n    background: #cdf1ff;\\n  }\\n  cursor: pointer;\\n\"])));var ProfileImage=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  width: 40px;\\n  height: 40px;\\n  border: 2px solid #73b2ff;\\n  border-radius: 10px;\\n  margin-right: 7px;\\n  background-size: 100% 100%;\\n  \",\"\\n\"])),function(_ref){var profileImage=_ref.profileImage;return profileImage?\"background-image : url(\".concat(profileImage,\");\"):\"background-image : url('/img/default_profile.jpg');\";});var ChatName=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  background: #73b2ff;\\n  max-width: 20%;\\n  overflow: hidden;\\n  color: white;\\n  padding: 10px;\\n  border-radius: 10px;\\n  margin-right: 7px;\\n\"])));var LastMessage=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  border: 2px solid pink;\\n  background: white;\\n  padding: 10px;\\n  border-radius: 10px;\\n  margin-right: 10px;\\n\"])));var Time=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  color: gray;\\n  letter-spacing: 0.1;\\n  font-size: 0.7rem;\\n  margin-top: 20px;\\n\"])));var NewMessages=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  width: 25px;\\n  height: 25px;\\n  background: #ff6f6f;\\n  color: white;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  border-radius: 5px;\\n  font-size: 0.7rem;\\n  position: absolute;\\n  right: 1%;\\n  top: 10%;\\n\"])));var ChatInfo=function ChatInfo(_ref2){var nickname=_ref2.nickname,profileImage=_ref2.profileImage,chat_name=_ref2.chat_name,last_message=_ref2.last_message,created_at=_ref2.created_at,uid=_ref2.uid,new_messages=_ref2.new_messages;function time(time){var today=new Date();time=new Date(time);var year=today.getFullYear()-time.getFullYear();if(year!==0){return\"\".concat(year,\"\\uB144 \\uC804\");}var month=today.getMonth()-time.getMonth();if(month!==0){return\"\".concat(month,\"\\uB2EC \\uC804\");}var day=today.getDate()-time.getDate();if(day!==0){return\"\".concat(day,\"\\uC77C \\uC804\");}var meridiem=time.getHours()<12?'오전 ':'오후 ';var hour=time.getHours();if(hour===0)hour=12;if(hour>12)hour-=12;return meridiem+hour+'시 '+time.getMinutes()+'분';}var dispatch=useDispatch();var chatOn=function chatOn(){var sender=JSON.parse(localStorage.user).uid;dispatch(openChatting());var data={receiver:uid,nickname:nickname,profileImage:profileImage};dispatch(setOtherToChat(data));dispatch(startLoading());dispatch(requestChattingLogs({sender:sender,receiver:uid}));};return/*#__PURE__*/_jsxs(ChatInfoBlock,{onClick:chatOn,children:[/*#__PURE__*/_jsx(ProfileImage,{profileImage:profileImage}),/*#__PURE__*/_jsx(ChatName,{title:chat_name?chat_name:nickname,children:chat_name?chat_name.slice(0,5):nickname.slice(0,5)}),/*#__PURE__*/_jsx(LastMessage,{title:last_message,children:last_message.slice(0,15)}),/*#__PURE__*/_jsx(Time,{children:time(created_at)}),new_messages!==0?/*#__PURE__*/_jsx(NewMessages,{children:new_messages>=100?'100+':new_messages}):'']});};export default ChatInfo;","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/components/ChattingList/ChatInfo.js"],"names":["React","useDispatch","styled","openChatting","requestChattingLogs","setOtherToChat","startLoading","ChatInfoBlock","div","ProfileImage","profileImage","ChatName","LastMessage","Time","NewMessages","ChatInfo","nickname","chat_name","last_message","created_at","uid","new_messages","time","today","Date","year","getFullYear","month","getMonth","day","getDate","meridiem","getHours","hour","getMinutes","dispatch","chatOn","sender","JSON","parse","localStorage","user","data","receiver","slice"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport {\r\n  openChatting,\r\n  requestChattingLogs,\r\n  setOtherToChat,\r\n  startLoading,\r\n} from '../../modules/chatting';\r\n\r\nconst ChatInfoBlock = styled.div`\r\n  border-bottom: 1px solid #cdcdcd;\r\n  width: 98%;\r\n  height: 60px;\r\n  margin: 0 auto;\r\n  padding: 3px;\r\n  border-radius: 5px;\r\n  position: relative;\r\n  &:last-child {\r\n    border: none;\r\n  }\r\n  display: flex;\r\n  align-items: center;\r\n  &:hover {\r\n    background: #cdf1ff;\r\n  }\r\n  cursor: pointer;\r\n`;\r\nconst ProfileImage = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 2px solid #73b2ff;\r\n  border-radius: 10px;\r\n  margin-right: 7px;\r\n  background-size: 100% 100%;\r\n  ${({ profileImage }) =>\r\n    profileImage\r\n      ? `background-image : url(${profileImage});`\r\n      : `background-image : url('/img/default_profile.jpg');`}\r\n`;\r\n\r\nconst ChatName = styled.div`\r\n  background: #73b2ff;\r\n  max-width: 20%;\r\n  overflow: hidden;\r\n  color: white;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  margin-right: 7px;\r\n`;\r\n\r\nconst LastMessage = styled.div`\r\n  border: 2px solid pink;\r\n  background: white;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  margin-right: 10px;\r\n`;\r\nconst Time = styled.div`\r\n  color: gray;\r\n  letter-spacing: 0.1;\r\n  font-size: 0.7rem;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst NewMessages = styled.div`\r\n  width: 25px;\r\n  height: 25px;\r\n  background: #ff6f6f;\r\n  color: white;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 5px;\r\n  font-size: 0.7rem;\r\n  position: absolute;\r\n  right: 1%;\r\n  top: 10%;\r\n`;\r\n\r\nconst ChatInfo = ({\r\n  nickname,\r\n  profileImage,\r\n  chat_name,\r\n  last_message,\r\n  created_at,\r\n  uid,\r\n  new_messages,\r\n}) => {\r\n  function time(time) {\r\n    const today = new Date();\r\n    time = new Date(time);\r\n\r\n    let year = today.getFullYear() - time.getFullYear();\r\n    if (year !== 0) {\r\n      return `${year}년 전`;\r\n    }\r\n    let month = today.getMonth() - time.getMonth();\r\n    if (month !== 0) {\r\n      return `${month}달 전`;\r\n    }\r\n    let day = today.getDate() - time.getDate();\r\n    if (day !== 0) {\r\n      return `${day}일 전`;\r\n    }\r\n    let meridiem = time.getHours() < 12 ? '오전 ' : '오후 ';\r\n    let hour = time.getHours();\r\n    if (hour === 0) hour = 12;\r\n    if (hour > 12) hour -= 12;\r\n\r\n    return meridiem + hour + '시 ' + time.getMinutes() + '분';\r\n  }\r\n  const dispatch = useDispatch();\r\n  const chatOn = () => {\r\n    const sender = JSON.parse(localStorage.user).uid;\r\n    dispatch(openChatting());\r\n    const data = { receiver: uid, nickname, profileImage };\r\n    dispatch(setOtherToChat(data));\r\n    dispatch(startLoading());\r\n    dispatch(requestChattingLogs({ sender, receiver: uid }));\r\n  };\r\n\r\n  return (\r\n    <ChatInfoBlock onClick={chatOn}>\r\n      <ProfileImage profileImage={profileImage} />\r\n      <ChatName title={chat_name ? chat_name : nickname}>\r\n        {chat_name ? chat_name.slice(0, 5) : nickname.slice(0, 5)}\r\n      </ChatName>\r\n      <LastMessage title={last_message}>\r\n        {last_message.slice(0, 15)}\r\n      </LastMessage>\r\n      <Time>{time(created_at)}</Time>\r\n      {new_messages !== 0 ? (\r\n        <NewMessages>{new_messages >= 100 ? '100+' : new_messages}</NewMessages>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </ChatInfoBlock>\r\n  );\r\n};\r\n\r\nexport default ChatInfo;\r\n"]},"metadata":{},"sourceType":"module"}