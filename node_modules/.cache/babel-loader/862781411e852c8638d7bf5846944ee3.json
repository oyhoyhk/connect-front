{"ast":null,"code":"var _jsxFileName = \"C:\\\\nani\\\\connect\\\\connect-frontend\\\\src\\\\containers\\\\ChattingModal\\\\ChattingModalContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ChattingModal from '../../components/ChattingModal/ChattingModal';\nimport { closeChatting, initializeOther } from '../../modules/chatting';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChattingModalContainer = () => {\n  _s();\n\n  const changeScroll = useCallback(e => {\n    e.scrollTop = e.scrollHeight;\n  }, []);\n  const {\n    other,\n    logs\n  } = useSelector(_ref => {\n    let {\n      chatting: {\n        other,\n        logs\n      }\n    } = _ref;\n    return {\n      other,\n      logs\n    };\n  });\n  const dispatch = useDispatch();\n\n  const exitChatting = e => {\n    e.stopPropagation();\n    dispatch(closeChatting());\n  };\n\n  useEffect(() => {\n    return () => {\n      dispatch(initializeOther());\n    };\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(ChattingModal, {\n    exitChatting: exitChatting,\n    other: other,\n    changeScroll: changeScroll,\n    logs: logs[other.receiver]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChattingModalContainer, \"HnR44ZEOLeZVLNiyAj1RmUURDVw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ChattingModalContainer;\nexport default ChattingModalContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChattingModalContainer\");","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/ChattingModal/ChattingModalContainer.js"],"names":["React","useEffect","useCallback","useDispatch","useSelector","ChattingModal","closeChatting","initializeOther","ChattingModalContainer","changeScroll","e","scrollTop","scrollHeight","other","logs","chatting","dispatch","exitChatting","stopPropagation","receiver"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,aAAP,MAA0B,8CAA1B;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;;;AAEA,MAAMC,sBAAsB,GAAG,MAAM;AAAA;;AACnC,QAAMC,YAAY,GAAGP,WAAW,CAAEQ,CAAD,IAAO;AACtCA,IAAAA,CAAC,CAACC,SAAF,GAAcD,CAAC,CAACE,YAAhB;AACD,GAF+B,EAE7B,EAF6B,CAAhC;AAGA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAkBV,WAAW,CAAC;AAAA,QAAC;AAAEW,MAAAA,QAAQ,EAAE;AAAEF,QAAAA,KAAF;AAASC,QAAAA;AAAT;AAAZ,KAAD;AAAA,WAAoC;AACtED,MAAAA,KADsE;AAEtEC,MAAAA;AAFsE,KAApC;AAAA,GAAD,CAAnC;AAIA,QAAME,QAAQ,GAAGb,WAAW,EAA5B;;AACA,QAAMc,YAAY,GAAIP,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACQ,eAAF;AACAF,IAAAA,QAAQ,CAACV,aAAa,EAAd,CAAR;AACD,GAHD;;AAIAL,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACXe,MAAAA,QAAQ,CAACT,eAAe,EAAhB,CAAR;AACD,KAFD;AAGD,GAJQ,EAIN,CAACS,QAAD,CAJM,CAAT;AAKA,sBACE,QAAC,aAAD;AACE,IAAA,YAAY,EAAEC,YADhB;AAEE,IAAA,KAAK,EAAEJ,KAFT;AAGE,IAAA,YAAY,EAAEJ,YAHhB;AAIE,IAAA,IAAI,EAAEK,IAAI,CAACD,KAAK,CAACM,QAAP;AAJZ;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA1BD;;GAAMX,sB;UAIoBJ,W,EAIPD,W;;;KARbK,sB;AA4BN,eAAeA,sBAAf","sourcesContent":["import React, { useEffect, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ChattingModal from '../../components/ChattingModal/ChattingModal';\r\nimport { closeChatting, initializeOther } from '../../modules/chatting';\r\n\r\nconst ChattingModalContainer = () => {\r\n  const changeScroll = useCallback((e) => {\r\n    e.scrollTop = e.scrollHeight;\r\n  }, []);\r\n  const { other, logs } = useSelector(({ chatting: { other, logs } }) => ({\r\n    other,\r\n    logs,\r\n  }));\r\n  const dispatch = useDispatch();\r\n  const exitChatting = (e) => {\r\n    e.stopPropagation();\r\n    dispatch(closeChatting());\r\n  };\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(initializeOther());\r\n    };\r\n  }, [dispatch]);\r\n  return (\r\n    <ChattingModal\r\n      exitChatting={exitChatting}\r\n      other={other}\r\n      changeScroll={changeScroll}\r\n      logs={logs[other.receiver]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ChattingModalContainer;\r\n"]},"metadata":{},"sourceType":"module"}