{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport { takeLatest } from 'redux-saga/effects';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nimport * as chatHallAPI from '../lib/api/chatHall';\nconst [GET_GUEST_NUMBER, GET_GUEST_NUMBER_SUCCESS, GET_GUEST_NUMBER_FAILURE] = createRequestActionTypes('chatHall/GET_GUEST_NUMBER');\nconst SET_CHAT_HALL = 'chatHall/SET_CHAT_HALL';\nexport const getGuestNumber = createAction(GET_GUEST_NUMBER);\nconst getGuestNumberSaga = createRequestSaga(GET_GUEST_NUMBER, chatHallAPI.guestNumber);\nexport function* chatHallSaga() {\n  yield takeLatest(GET_GUEST_NUMBER, getGuestNumberSaga);\n}\nconst initialState = {\n  user: null,\n  userList: [],\n  msgList: [],\n  error: null\n};\nexport default handleActions({\n  [GET_GUEST_NUMBER_SUCCESS]: (state, _ref) => {\n    let {\n      payload: guestInfo\n    } = _ref;\n    console.log(state);\n    return { ...state,\n      user: {\n        username: guestInfo,\n        nickname: guestInfo,\n        profileImage: null\n      }\n    };\n  },\n  [GET_GUEST_NUMBER_FAILURE]: (state, _ref2) => {\n    let {\n      payload: error\n    } = _ref2;\n    return { ...state,\n      user: null,\n      checkError: error\n    };\n  }\n}, initialState);","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/modules/chatHall.js"],"names":["createAction","handleActions","takeLatest","createRequestSaga","createRequestActionTypes","chatHallAPI","GET_GUEST_NUMBER","GET_GUEST_NUMBER_SUCCESS","GET_GUEST_NUMBER_FAILURE","SET_CHAT_HALL","getGuestNumber","getGuestNumberSaga","guestNumber","chatHallSaga","initialState","user","userList","msgList","error","state","payload","guestInfo","console","log","username","nickname","profileImage","checkError"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,iBAAP,IACEC,wBADF,QAEO,0BAFP;AAGA,OAAO,KAAKC,WAAZ,MAA6B,qBAA7B;AAEA,MAAM,CAACC,gBAAD,EAAmBC,wBAAnB,EAA6CC,wBAA7C,IACJJ,wBAAwB,CAAC,2BAAD,CAD1B;AAGA,MAAMK,aAAa,GAAG,wBAAtB;AAEA,OAAO,MAAMC,cAAc,GAAGV,YAAY,CAACM,gBAAD,CAAnC;AAEP,MAAMK,kBAAkB,GAAGR,iBAAiB,CAC1CG,gBAD0C,EAE1CD,WAAW,CAACO,WAF8B,CAA5C;AAKA,OAAO,UAAUC,YAAV,GAAyB;AAC9B,QAAMX,UAAU,CAACI,gBAAD,EAAmBK,kBAAnB,CAAhB;AACD;AACD,MAAMG,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,IADa;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,OAAO,EAAE,EAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAMA,eAAejB,aAAa,CAC1B;AACE,GAACM,wBAAD,GAA4B,CAACY,KAAD,WAAmC;AAAA,QAA3B;AAAEC,MAAAA,OAAO,EAAEC;AAAX,KAA2B;AAC7DC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,WAAO,EACL,GAAGA,KADE;AAELJ,MAAAA,IAAI,EAAE;AACJS,QAAAA,QAAQ,EAAEH,SADN;AAEJI,QAAAA,QAAQ,EAAEJ,SAFN;AAGJK,QAAAA,YAAY,EAAE;AAHV;AAFD,KAAP;AAQD,GAXH;AAYE,GAAClB,wBAAD,GAA4B,CAACW,KAAD;AAAA,QAAQ;AAAEC,MAAAA,OAAO,EAAEF;AAAX,KAAR;AAAA,WAAgC,EAC1D,GAAGC,KADuD;AAE1DJ,MAAAA,IAAI,EAAE,IAFoD;AAG1DY,MAAAA,UAAU,EAAET;AAH8C,KAAhC;AAAA;AAZ9B,CAD0B,EAmB1BJ,YAnB0B,CAA5B","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\r\nimport { takeLatest } from 'redux-saga/effects';\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from '../lib/createRequestSaga';\r\nimport * as chatHallAPI from '../lib/api/chatHall';\r\n\r\nconst [GET_GUEST_NUMBER, GET_GUEST_NUMBER_SUCCESS, GET_GUEST_NUMBER_FAILURE] =\r\n  createRequestActionTypes('chatHall/GET_GUEST_NUMBER');\r\n\r\nconst SET_CHAT_HALL = 'chatHall/SET_CHAT_HALL';\r\n\r\nexport const getGuestNumber = createAction(GET_GUEST_NUMBER);\r\n\r\nconst getGuestNumberSaga = createRequestSaga(\r\n  GET_GUEST_NUMBER,\r\n  chatHallAPI.guestNumber,\r\n);\r\n\r\nexport function* chatHallSaga() {\r\n  yield takeLatest(GET_GUEST_NUMBER, getGuestNumberSaga);\r\n}\r\nconst initialState = {\r\n  user: null,\r\n  userList: [],\r\n  msgList: [],\r\n  error: null,\r\n};\r\nexport default handleActions(\r\n  {\r\n    [GET_GUEST_NUMBER_SUCCESS]: (state, { payload: guestInfo }) => {\r\n      console.log(state);\r\n      return {\r\n        ...state,\r\n        user: {\r\n          username: guestInfo,\r\n          nickname: guestInfo,\r\n          profileImage: null,\r\n        },\r\n      };\r\n    },\r\n    [GET_GUEST_NUMBER_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      user: null,\r\n      checkError: error,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n"]},"metadata":{},"sourceType":"module"}