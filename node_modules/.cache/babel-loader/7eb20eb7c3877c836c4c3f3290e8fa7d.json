{"ast":null,"code":"var _jsxFileName = \"C:\\\\nani\\\\connect\\\\connect-frontend\\\\src\\\\containers\\\\Friends\\\\FriendContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from '../../../node_modules/react-router/index';\nimport Friend from '../../components/Friends/Friend';\nimport { setOtherToChat } from '../../modules/chatting';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FriendContainer = _ref => {\n  _s();\n\n  let {\n    friendRequest,\n    receiver,\n    profileImage,\n    nickname,\n    tags,\n    type,\n    status\n  } = _ref;\n  const [optionBox, setOptionBox] = useState(false);\n\n  const clickOptions = () => {\n    setOptionBox(!optionBox);\n  };\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const onChatting = () => {\n    const data = {\n      receiver,\n      profileImage,\n      nickname,\n      tags\n    };\n    dispatch(setOtherToChat(data));\n    setOptionBox(false);\n    navigate('/chatting');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Friend, {\n    friendRequest: friendRequest,\n    clickOptions: clickOptions,\n    optionBox: optionBox,\n    type: type,\n    nickname: nickname,\n    tags: tags,\n    profileImage: profileImage,\n    receiver: receiver,\n    onChatting: onChatting,\n    status: status\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FriendContainer, \"RwvBnmRMB+EuObhI50pm5p80gxk=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n\n_c = FriendContainer;\nexport default FriendContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendContainer\");","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/Friends/FriendContainer.js"],"names":["React","useState","useDispatch","useNavigate","Friend","setOtherToChat","FriendContainer","friendRequest","receiver","profileImage","nickname","tags","type","status","optionBox","setOptionBox","clickOptions","navigate","dispatch","onChatting","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,0CAA5B;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,SAASC,cAAT,QAA+B,wBAA/B;;;AAEA,MAAMC,eAAe,GAAG,QAQlB;AAAA;;AAAA,MARmB;AACvBC,IAAAA,aADuB;AAEvBC,IAAAA,QAFuB;AAGvBC,IAAAA,YAHuB;AAIvBC,IAAAA,QAJuB;AAKvBC,IAAAA,IALuB;AAMvBC,IAAAA,IANuB;AAOvBC,IAAAA;AAPuB,GAQnB;AACJ,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;;AACA,QAAMe,YAAY,GAAG,MAAM;AACzBD,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAFD;;AAGA,QAAMG,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAMe,QAAQ,GAAGhB,WAAW,EAA5B;;AACA,QAAMiB,UAAU,GAAG,MAAM;AACvB,UAAMC,IAAI,GAAG;AAAEZ,MAAAA,QAAF;AAAYC,MAAAA,YAAZ;AAA0BC,MAAAA,QAA1B;AAAoCC,MAAAA;AAApC,KAAb;AACAO,IAAAA,QAAQ,CAACb,cAAc,CAACe,IAAD,CAAf,CAAR;AACAL,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,WAAD,CAAR;AACD,GALD;;AAMA,sBACE,QAAC,MAAD;AACE,IAAA,aAAa,EAAEV,aADjB;AAEE,IAAA,YAAY,EAAES,YAFhB;AAGE,IAAA,SAAS,EAAEF,SAHb;AAIE,IAAA,IAAI,EAAEF,IAJR;AAKE,IAAA,QAAQ,EAAEF,QALZ;AAME,IAAA,IAAI,EAAEC,IANR;AAOE,IAAA,YAAY,EAAEF,YAPhB;AAQE,IAAA,QAAQ,EAAED,QARZ;AASE,IAAA,UAAU,EAAEW,UATd;AAUE,IAAA,MAAM,EAAEN;AAVV;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAnCD;;GAAMP,e;UAaaH,W,EACAD,W;;;KAdbI,e;AAqCN,eAAeA,eAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from '../../../node_modules/react-router/index';\r\nimport Friend from '../../components/Friends/Friend';\r\nimport { setOtherToChat } from '../../modules/chatting';\r\n\r\nconst FriendContainer = ({\r\n  friendRequest,\r\n  receiver,\r\n  profileImage,\r\n  nickname,\r\n  tags,\r\n  type,\r\n  status,\r\n}) => {\r\n  const [optionBox, setOptionBox] = useState(false);\r\n  const clickOptions = () => {\r\n    setOptionBox(!optionBox);\r\n  };\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const onChatting = () => {\r\n    const data = { receiver, profileImage, nickname, tags };\r\n    dispatch(setOtherToChat(data));\r\n    setOptionBox(false);\r\n    navigate('/chatting');\r\n  };\r\n  return (\r\n    <Friend\r\n      friendRequest={friendRequest}\r\n      clickOptions={clickOptions}\r\n      optionBox={optionBox}\r\n      type={type}\r\n      nickname={nickname}\r\n      tags={tags}\r\n      profileImage={profileImage}\r\n      receiver={receiver}\r\n      onChatting={onChatting}\r\n      status={status}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FriendContainer;\r\n"]},"metadata":{},"sourceType":"module"}