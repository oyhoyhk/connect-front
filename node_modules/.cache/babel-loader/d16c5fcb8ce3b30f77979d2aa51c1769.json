{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nexport function useScroll() {\n  _s();\n\n  const [lastScrollTop, setLastScrollTop] = useState(0);\n  const [bodyOffset, setBodyOffset] = useState(document.body.getBoundingClientRect());\n  const [scrollX, setScrollX] = useState(bodyOffset.left);\n  const [scrollY, setScrollY] = useState(bodyOffset.top);\n  const [scrollDirection, setScrollDirection] = useState();\n\n  const listener = e => {\n    setBodyOffset(document.body.getBoundingClientRect());\n    setScrollY(-bodyOffset.top);\n    setScrollX(bodyOffset.left);\n    setScrollDirection(lastScrollTop > -bodyOffset.top ? 'down' : 'up');\n    setLastScrollTop(-bodyOffset.top);\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', listener);\n    return window.removeEventListener('scroll', listener);\n  });\n  return {\n    scrollX,\n    scrollY,\n    scrollDirection\n  };\n}\n\n_s(useScroll, \"caa3AhsE+QyiyWjhxVL/IcH/Biw=\");","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/lib/useScroll.js"],"names":["useState","useEffect","useScroll","lastScrollTop","setLastScrollTop","bodyOffset","setBodyOffset","document","body","getBoundingClientRect","scrollX","setScrollX","left","scrollY","setScrollY","top","scrollDirection","setScrollDirection","listener","e","window","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,SAASC,SAAT,GAAqB;AAAA;;AAC1B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCJ,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAC1CO,QAAQ,CAACC,IAAT,CAAcC,qBAAd,EAD0C,CAA5C;AAGA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAACK,UAAU,CAACO,IAAZ,CAAtC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAACK,UAAU,CAACU,GAAZ,CAAtC;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCjB,QAAQ,EAAtD;;AAEA,QAAMkB,QAAQ,GAAIC,CAAD,IAAO;AACtBb,IAAAA,aAAa,CAACC,QAAQ,CAACC,IAAT,CAAcC,qBAAd,EAAD,CAAb;AACAK,IAAAA,UAAU,CAAC,CAACT,UAAU,CAACU,GAAb,CAAV;AACAJ,IAAAA,UAAU,CAACN,UAAU,CAACO,IAAZ,CAAV;AACAK,IAAAA,kBAAkB,CAACd,aAAa,GAAG,CAACE,UAAU,CAACU,GAA5B,GAAkC,MAAlC,GAA2C,IAA5C,CAAlB;AACAX,IAAAA,gBAAgB,CAAC,CAACC,UAAU,CAACU,GAAb,CAAhB;AACD,GAND;;AAQAd,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCH,QAAlC;AACA,WAAOE,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCJ,QAArC,CAAP;AACD,GAHQ,CAAT;AAKA,SAAO;AACLR,IAAAA,OADK;AAELG,IAAAA,OAFK;AAGLG,IAAAA;AAHK,GAAP;AAKD;;GA3Bed,S","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nexport function useScroll() {\r\n  const [lastScrollTop, setLastScrollTop] = useState(0);\r\n  const [bodyOffset, setBodyOffset] = useState(\r\n    document.body.getBoundingClientRect(),\r\n  );\r\n  const [scrollX, setScrollX] = useState(bodyOffset.left);\r\n  const [scrollY, setScrollY] = useState(bodyOffset.top);\r\n  const [scrollDirection, setScrollDirection] = useState();\r\n\r\n  const listener = (e) => {\r\n    setBodyOffset(document.body.getBoundingClientRect());\r\n    setScrollY(-bodyOffset.top);\r\n    setScrollX(bodyOffset.left);\r\n    setScrollDirection(lastScrollTop > -bodyOffset.top ? 'down' : 'up');\r\n    setLastScrollTop(-bodyOffset.top);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', listener);\r\n    return window.removeEventListener('scroll', listener);\r\n  });\r\n\r\n  return {\r\n    scrollX,\r\n    scrollY,\r\n    scrollDirection,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}