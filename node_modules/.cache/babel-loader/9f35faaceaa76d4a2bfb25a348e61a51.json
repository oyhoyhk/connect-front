{"ast":null,"code":"var _jsxFileName = \"C:\\\\nani\\\\connect\\\\connect-frontend\\\\src\\\\containers\\\\Friends\\\\TagContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport TagList from '../../components/Friends/TagList';\nimport { loadTags } from '../../lib/api/friends';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TagContainer = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    uid\n  } = JSON.parse(localStorage.user);\n  const {\n    tags\n  } = useSelector(_ref => {\n    let {\n      friends\n    } = _ref;\n    return {\n      tags: friends.tagList.split('#').filter(el => el !== '')\n    };\n  });\n  useEffect(() => {\n    dispatch(loadTags(uid));\n  }, [dispatch, uid]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const match = /[^ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|]/g;\n    const tag = e.target.tag.value.replace(match, '');\n    e.target.tag.value = '';\n\n    if (tags.includes(tag) || tag === '') {\n      e.target.tag.value = '';\n      return;\n    }\n  };\n\n  const onRemove = e => {\n    console.log(e.target.textContent);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TagList, {\n    onSubmit: onSubmit,\n    onRemove: onRemove,\n    tags: tags\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n};\n\n_s(TagContainer, \"nZPxDnMxhbgOrrgqpRKWGQRB/WY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = TagContainer;\nexport default TagContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TagContainer\");","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/Friends/TagContainer.js"],"names":["React","useEffect","useState","useSelector","useDispatch","TagList","loadTags","TagContainer","dispatch","uid","JSON","parse","localStorage","user","tags","friends","tagList","split","filter","el","onSubmit","e","preventDefault","match","tag","target","value","replace","includes","onRemove","console","log","textContent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,SAASC,QAAT,QAAyB,uBAAzB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAUC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,IAAxB,CAAhB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWX,WAAW,CAAC;AAAA,QAAC;AAAEY,MAAAA;AAAF,KAAD;AAAA,WAAkB;AAC7CD,MAAAA,IAAI,EAAEC,OAAO,CAACC,OAAR,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2BC,MAA3B,CAAmCC,EAAD,IAAQA,EAAE,KAAK,EAAjD;AADuC,KAAlB;AAAA,GAAD,CAA5B;AAGAlB,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ,CAACF,QAAQ,CAACG,GAAD,CAAT,CAAR;AACD,GAFQ,EAEN,CAACD,QAAD,EAAWC,GAAX,CAFM,CAAT;;AAGA,QAAMW,QAAQ,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,KAAK,GAAG,0BAAd;AACA,UAAMC,GAAG,GAAGH,CAAC,CAACI,MAAF,CAASD,GAAT,CAAaE,KAAb,CAAmBC,OAAnB,CAA2BJ,KAA3B,EAAkC,EAAlC,CAAZ;AACAF,IAAAA,CAAC,CAACI,MAAF,CAASD,GAAT,CAAaE,KAAb,GAAqB,EAArB;;AACA,QAAIZ,IAAI,CAACc,QAAL,CAAcJ,GAAd,KAAsBA,GAAG,KAAK,EAAlC,EAAsC;AACpCH,MAAAA,CAAC,CAACI,MAAF,CAASD,GAAT,CAAaE,KAAb,GAAqB,EAArB;AACA;AACD;AACF,GAVD;;AAWA,QAAMG,QAAQ,GAAIR,CAAD,IAAO;AACtBS,IAAAA,OAAO,CAACC,GAAR,CAAYV,CAAC,CAACI,MAAF,CAASO,WAArB;AACD,GAFD;;AAGA,sBAAO,QAAC,OAAD;AAAS,IAAA,QAAQ,EAAEZ,QAAnB;AAA6B,IAAA,QAAQ,EAAES,QAAvC;AAAiD,IAAA,IAAI,EAAEf;AAAvD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAxBD;;GAAMP,Y;UACaH,W,EAEAD,W;;;KAHbI,Y;AA0BN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport TagList from '../../components/Friends/TagList';\r\nimport { loadTags } from '../../lib/api/friends';\r\n\r\nconst TagContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const { uid } = JSON.parse(localStorage.user);\r\n  const { tags } = useSelector(({ friends }) => ({\r\n    tags: friends.tagList.split('#').filter((el) => el !== ''),\r\n  }));\r\n  useEffect(() => {\r\n    dispatch(loadTags(uid));\r\n  }, [dispatch, uid]);\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const match = /[^ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|]/g;\r\n    const tag = e.target.tag.value.replace(match, '');\r\n    e.target.tag.value = '';\r\n    if (tags.includes(tag) || tag === '') {\r\n      e.target.tag.value = '';\r\n      return;\r\n    }\r\n  };\r\n  const onRemove = (e) => {\r\n    console.log(e.target.textContent);\r\n  };\r\n  return <TagList onSubmit={onSubmit} onRemove={onRemove} tags={tags} />;\r\n};\r\n\r\nexport default TagContainer;\r\n"]},"metadata":{},"sourceType":"module"}