{"ast":null,"code":"var _jsxFileName = \"C:\\\\nani\\\\connect\\\\connect-frontend\\\\src\\\\containers\\\\common\\\\HeaderContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Header from '../../components/common/Header';\nimport Navigation from '../../components/common/Navigation';\nimport { removeAuth } from '../../modules/auth';\nimport { initializeChatHall, leaveChatHall } from '../../modules/chatHall';\nimport { friendRequestAccepted, friendRequestRefused, getRecommend, receiveMessage, requestMessagesList, someoneLogin, someoneLogout } from '../../modules/friends';\nimport { logout } from '../../modules/user';\nimport { socket } from '../../lib/sockets/chatHallSocket';\nimport { useNavigate } from '../../../node_modules/react-router/index';\nimport { receiveChatting } from '../../modules/chatting';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HeaderContainer = () => {\n  _s();\n\n  const convertTime = time => {\n    const [dateInfo, timeInfo] = time.split('T');\n    const [year, month, day] = dateInfo.split('-').map(Number);\n    const [hour, minute] = timeInfo.slice(0, 6).split(':').map(Number);\n    return {\n      year,\n      month,\n      day,\n      hour,\n      minute\n    };\n  };\n\n  const {\n    user,\n    messages\n  } = useSelector(_ref => {\n    let {\n      user,\n      friends\n    } = _ref;\n    return {\n      user: user.user,\n      messages: friends.messagesList\n    };\n  });\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [noticeList, setNoticeList] = useState(false);\n  const toggleNoticeList = useCallback(() => {\n    setNoticeList(!noticeList);\n  }, [noticeList]);\n\n  const onLogout = () => {\n    dispatch(logout({\n      uid: user.uid\n    }));\n    dispatch(removeAuth());\n\n    if (localStorage.chatHall) {\n      dispatch(leaveChatHall({\n        username: user.username\n      }));\n      dispatch(initializeChatHall());\n      localStorage.removeItem('chatHall');\n    }\n\n    navigate('/');\n  };\n\n  useEffect(() => {\n    if (user) {\n      const {\n        uid\n      } = user;\n      dispatch(requestMessagesList({\n        uid\n      }));\n      socket.on('friend_request', data => {\n        const {\n          info\n        } = data;\n        info.time = data.time;\n        info.type = 'received';\n        dispatch(receiveMessage(info));\n      });\n      socket.on('friend_request_accepted', data => {\n        dispatch(friendRequestAccepted(data));\n        dispatch(getRecommend({\n          filter: user.tags,\n          uid: user.uid\n        }));\n      });\n      socket.on('friend_request_refused', data => {\n        dispatch(friendRequestRefused(Number(data)));\n      });\n      socket.on('friend_request_canceled', data => {\n        dispatch(friendRequestRefused(Number(data)));\n      });\n      socket.on('someone_logout', uid => {\n        dispatch(someoneLogout(uid));\n      });\n      socket.on('someone_login', uid => {\n        dispatch(someoneLogin(uid));\n      });\n      socket.on('someone_send_message', _ref2 => {\n        let {\n          sender,\n          receiver,\n          message,\n          time\n        } = _ref2;\n        console.log('someone_send_message', sender, receiver, message, time);\n        dispatch(receiveChatting({\n          sender,\n          message,\n          time: convertTime(time)\n        }));\n      });\n    }\n\n    return () => {\n      socket.off();\n    };\n  }, [dispatch, user]);\n  useEffect(() => {\n    if (!localStorage.getItem('user')) {\n      navigate('/');\n    }\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      noticeList: noticeList,\n      toggleNoticeList: toggleNoticeList,\n      user: user,\n      onLogout: onLogout,\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), user ? /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }, this) : '']\n  }, void 0, true);\n};\n\n_s(HeaderContainer, \"yNwI1WQB9MG2xFPjGB5g2RPq14s=\", false, function () {\n  return [useSelector, useDispatch, useNavigate];\n});\n\n_c = HeaderContainer;\nexport default HeaderContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderContainer\");","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/common/HeaderContainer.js"],"names":["React","useCallback","useEffect","useState","useDispatch","useSelector","Header","Navigation","removeAuth","initializeChatHall","leaveChatHall","friendRequestAccepted","friendRequestRefused","getRecommend","receiveMessage","requestMessagesList","someoneLogin","someoneLogout","logout","socket","useNavigate","receiveChatting","HeaderContainer","convertTime","time","dateInfo","timeInfo","split","year","month","day","map","Number","hour","minute","slice","user","messages","friends","messagesList","dispatch","navigate","noticeList","setNoticeList","toggleNoticeList","onLogout","uid","localStorage","chatHall","username","removeItem","on","data","info","type","filter","tags","sender","receiver","message","console","log","off","getItem"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Header from '../../components/common/Header';\r\nimport Navigation from '../../components/common/Navigation';\r\nimport { removeAuth } from '../../modules/auth';\r\nimport { initializeChatHall, leaveChatHall } from '../../modules/chatHall';\r\nimport {\r\n  friendRequestAccepted,\r\n  friendRequestRefused,\r\n  getRecommend,\r\n  receiveMessage,\r\n  requestMessagesList,\r\n  someoneLogin,\r\n  someoneLogout,\r\n} from '../../modules/friends';\r\nimport { logout } from '../../modules/user';\r\nimport { socket } from '../../lib/sockets/chatHallSocket';\r\nimport { useNavigate } from '../../../node_modules/react-router/index';\r\nimport { receiveChatting } from '../../modules/chatting';\r\nconst HeaderContainer = () => {\r\n  const convertTime = (time) => {\r\n    const [dateInfo, timeInfo] = time.split('T');\r\n\r\n    const [year, month, day] = dateInfo.split('-').map(Number);\r\n\r\n    const [hour, minute] = timeInfo.slice(0, 6).split(':').map(Number);\r\n\r\n    return { year, month, day, hour, minute };\r\n  };\r\n  const { user, messages } = useSelector(({ user, friends }) => ({\r\n    user: user.user,\r\n    messages: friends.messagesList,\r\n  }));\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [noticeList, setNoticeList] = useState(false);\r\n  const toggleNoticeList = useCallback(() => {\r\n    setNoticeList(!noticeList);\r\n  }, [noticeList]);\r\n  const onLogout = () => {\r\n    dispatch(logout({ uid: user.uid }));\r\n    dispatch(removeAuth());\r\n    if (localStorage.chatHall) {\r\n      dispatch(leaveChatHall({ username: user.username }));\r\n      dispatch(initializeChatHall());\r\n      localStorage.removeItem('chatHall');\r\n    }\r\n    navigate('/');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      const { uid } = user;\r\n      dispatch(requestMessagesList({ uid }));\r\n      socket.on('friend_request', (data) => {\r\n        const { info } = data;\r\n        info.time = data.time;\r\n        info.type = 'received';\r\n        dispatch(receiveMessage(info));\r\n      });\r\n      socket.on('friend_request_accepted', (data) => {\r\n        dispatch(friendRequestAccepted(data));\r\n        dispatch(getRecommend({ filter: user.tags, uid: user.uid }));\r\n      });\r\n      socket.on('friend_request_refused', (data) => {\r\n        dispatch(friendRequestRefused(Number(data)));\r\n      });\r\n      socket.on('friend_request_canceled', (data) => {\r\n        dispatch(friendRequestRefused(Number(data)));\r\n      });\r\n      socket.on('someone_logout', (uid) => {\r\n        dispatch(someoneLogout(uid));\r\n      });\r\n      socket.on('someone_login', (uid) => {\r\n        dispatch(someoneLogin(uid));\r\n      });\r\n      socket.on(\r\n        'someone_send_message',\r\n        ({ sender, receiver, message, time }) => {\r\n          console.log('someone_send_message', sender, receiver, message, time);\r\n          dispatch(\r\n            receiveChatting({ sender, message, time: convertTime(time) }),\r\n          );\r\n        },\r\n      );\r\n    }\r\n    return () => {\r\n      socket.off();\r\n    };\r\n  }, [dispatch, user]);\r\n  useEffect(() => {\r\n    if (!localStorage.getItem('user')) {\r\n      navigate('/');\r\n    }\r\n  }, [navigate]);\r\n  return (\r\n    <>\r\n      <Header\r\n        noticeList={noticeList}\r\n        toggleNoticeList={toggleNoticeList}\r\n        user={user}\r\n        onLogout={onLogout}\r\n        messages={messages}\r\n      />\r\n      {user ? <Navigation /> : ''}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeaderContainer;\r\n"]},"metadata":{},"sourceType":"module"}