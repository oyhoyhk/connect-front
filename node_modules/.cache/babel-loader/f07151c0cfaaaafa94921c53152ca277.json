{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport { takeLatest } from 'redux-saga/effects';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nimport * as chatHallAPI from '../lib/api/chatHall';\nconst [GET_GUEST_NUMBER, GET_GUEST_NUMBER_SUCCESS, GET_GUEST_NUMBER_FAILURE] = createRequestActionTypes('chatHall/GET_GUEST_NUMBER');\nconst [GET_USER_INFO, GET_USER_INFO_SUCCESS, GET_USER_INFO_FAILURE] = createRequestActionTypes('chatHall/GET_USER_INFO');\nconst SET_CHAT_HALL = 'chatHall/SET_CHAT_HALL';\nconst SEND_MESSAGE = 'chatHall/SEND_MESSAGE';\nconst RECEIVE_MESSAGE = 'chatHall/RECEIVE_MESSAGE';\nconst SET_USER_LIST = 'chatHall/SET_USER_LIST';\nexport const getGuestNumber = createAction(GET_GUEST_NUMBER);\nexport const setChatHall = createAction(SET_CHAT_HALL);\nexport const sendMessage = createAction(SEND_MESSAGE);\nexport const receiveMessage = createAction(RECEIVE_MESSAGE);\nexport const setUserList = createAction(SET_USER_LIST);\nexport const getUserInfo = createAction(GET_USER_INFO);\nconst getGuestNumberSaga = createRequestSaga(GET_GUEST_NUMBER, chatHallAPI.guestNumber);\nconst getUserInfoSaga = createRequestSaga(GET_USER_INFO, chatHallAPI.userInfo);\nexport function* chatHallSaga() {\n  yield takeLatest(GET_GUEST_NUMBER, getGuestNumberSaga);\n  yield takeLatest(GET_USER_INFO, getUserInfoSaga);\n}\nconst initialState = {\n  user: null,\n  userList: [],\n  msgList: [],\n  error: null\n};\nexport default handleActions({\n  [SET_CHAT_HALL]: (state, _ref) => {\n    let {\n      payload: user\n    } = _ref;\n    return { ...state,\n      user: {\n        username: user.username,\n        nickname: user.nickname,\n        profileImage: user.profileImage\n      }\n    };\n  },\n  [GET_GUEST_NUMBER_SUCCESS]: (state, _ref2) => {\n    let {\n      payload: guestInfo\n    } = _ref2;\n    return { ...state,\n      user: {\n        username: guestInfo,\n        nickname: guestInfo,\n        profileImage: null\n      }\n    };\n  },\n  [GET_GUEST_NUMBER_FAILURE]: (state, _ref3) => {\n    let {\n      payload: error\n    } = _ref3;\n    return { ...state,\n      user: null,\n      checkError: error\n    };\n  },\n  [SEND_MESSAGE]: (state, _ref4) => {\n    let {\n      payload: msg\n    } = _ref4;\n    return { ...state,\n      msgList: [...state.msgList, { ...msg\n      }]\n    };\n  },\n  [RECEIVE_MESSAGE]: (state, _ref5) => {\n    let {\n      payload: msg\n    } = _ref5;\n    return { ...state,\n      msgList: [...state.msgList, { ...msg\n      }]\n    };\n  },\n  [SET_USER_LIST]: (state, _ref6) => {\n    let {\n      payload: userList\n    } = _ref6;\n    return { ...state,\n      userList: [...userList]\n    };\n  },\n  [GET_USER_INFO_SUCCESS]: (state, _ref7) => {\n    let {\n      payload: userList\n    } = _ref7;\n    return { ...state,\n      userList: [...userList]\n    };\n  }\n}, initialState);","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/modules/chatHall.js"],"names":["createAction","handleActions","takeLatest","createRequestSaga","createRequestActionTypes","chatHallAPI","GET_GUEST_NUMBER","GET_GUEST_NUMBER_SUCCESS","GET_GUEST_NUMBER_FAILURE","GET_USER_INFO","GET_USER_INFO_SUCCESS","GET_USER_INFO_FAILURE","SET_CHAT_HALL","SEND_MESSAGE","RECEIVE_MESSAGE","SET_USER_LIST","getGuestNumber","setChatHall","sendMessage","receiveMessage","setUserList","getUserInfo","getGuestNumberSaga","guestNumber","getUserInfoSaga","userInfo","chatHallSaga","initialState","user","userList","msgList","error","state","payload","username","nickname","profileImage","guestInfo","checkError","msg"],"mappings":"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","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\r\nimport { takeLatest } from 'redux-saga/effects';\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from '../lib/createRequestSaga';\r\nimport * as chatHallAPI from '../lib/api/chatHall';\r\n\r\nconst [GET_GUEST_NUMBER, GET_GUEST_NUMBER_SUCCESS, GET_GUEST_NUMBER_FAILURE] =\r\n  createRequestActionTypes('chatHall/GET_GUEST_NUMBER');\r\nconst [GET_USER_INFO, GET_USER_INFO_SUCCESS, GET_USER_INFO_FAILURE] =\r\n  createRequestActionTypes('chatHall/GET_USER_INFO');\r\n\r\nconst SET_CHAT_HALL = 'chatHall/SET_CHAT_HALL';\r\nconst SEND_MESSAGE = 'chatHall/SEND_MESSAGE';\r\nconst RECEIVE_MESSAGE = 'chatHall/RECEIVE_MESSAGE';\r\nconst SET_USER_LIST = 'chatHall/SET_USER_LIST';\r\n\r\nexport const getGuestNumber = createAction(GET_GUEST_NUMBER);\r\nexport const setChatHall = createAction(SET_CHAT_HALL);\r\nexport const sendMessage = createAction(SEND_MESSAGE);\r\nexport const receiveMessage = createAction(RECEIVE_MESSAGE);\r\nexport const setUserList = createAction(SET_USER_LIST);\r\nexport const getUserInfo = createAction(GET_USER_INFO);\r\n\r\nconst getGuestNumberSaga = createRequestSaga(\r\n  GET_GUEST_NUMBER,\r\n  chatHallAPI.guestNumber,\r\n);\r\nconst getUserInfoSaga = createRequestSaga(GET_USER_INFO, chatHallAPI.userInfo);\r\n\r\nexport function* chatHallSaga() {\r\n  yield takeLatest(GET_GUEST_NUMBER, getGuestNumberSaga);\r\n  yield takeLatest(GET_USER_INFO, getUserInfoSaga);\r\n}\r\nconst initialState = {\r\n  user: null,\r\n  userList: [],\r\n  msgList: [],\r\n  error: null,\r\n};\r\nexport default handleActions(\r\n  {\r\n    [SET_CHAT_HALL]: (state, { payload: user }) => ({\r\n      ...state,\r\n      user: {\r\n        username: user.username,\r\n        nickname: user.nickname,\r\n        profileImage: user.profileImage,\r\n      },\r\n    }),\r\n    [GET_GUEST_NUMBER_SUCCESS]: (state, { payload: guestInfo }) => ({\r\n      ...state,\r\n      user: {\r\n        username: guestInfo,\r\n        nickname: guestInfo,\r\n        profileImage: null,\r\n      },\r\n    }),\r\n    [GET_GUEST_NUMBER_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      user: null,\r\n      checkError: error,\r\n    }),\r\n    [SEND_MESSAGE]: (state, { payload: msg }) => ({\r\n      ...state,\r\n      msgList: [...state.msgList, { ...msg }],\r\n    }),\r\n    [RECEIVE_MESSAGE]: (state, { payload: msg }) => ({\r\n      ...state,\r\n      msgList: [...state.msgList, { ...msg }],\r\n    }),\r\n    [SET_USER_LIST]: (state, { payload: userList }) => ({\r\n      ...state,\r\n      userList: [...userList],\r\n    }),\r\n    [GET_USER_INFO_SUCCESS]: (state, { payload: userList }) => ({\r\n      ...state,\r\n      userList: [...userList],\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n"]},"metadata":{},"sourceType":"module"}