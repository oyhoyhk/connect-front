{"ast":null,"code":"var _jsxFileName = \"C:\\\\nani\\\\connect\\\\connect-frontend\\\\src\\\\components\\\\ChattingList\\\\ChatInfo.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { openChatting, requestChattingLogs, setOtherToChat, startLoading } from '../../modules/chatting';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInfoBlock = styled.div`\n  border-bottom: 1px solid #cdcdcd;\n  width: 98%;\n  height: 60px;\n  margin: 0 auto;\n  padding: 3px;\n  border-radius: 5px;\n  position: relative;\n  &:last-child {\n    border: none;\n  }\n  display: flex;\n  align-items: center;\n  &:hover {\n    background: #cdf1ff;\n  }\n  cursor: pointer;\n`;\n_c = ChatInfoBlock;\nconst ProfileImage = styled.div`\n  width: 40px;\n  height: 40px;\n  border: 2px solid #73b2ff;\n  border-radius: 10px;\n  margin-right: 7px;\n  background-size: 100% 100%;\n  ${_ref => {\n  let {\n    profileImage\n  } = _ref;\n  return profileImage ? `background-image : url(${profileImage});` : `background-image : url('/img/default_profile.jpg');`;\n}}\n`;\n_c2 = ProfileImage;\nconst ChatName = styled.div`\n  background: #73b2ff;\n  max-width: 20%;\n  overflow: hidden;\n  color: white;\n  padding: 10px;\n  border-radius: 10px;\n  margin-right: 7px;\n`;\n_c3 = ChatName;\nconst LastMessage = styled.div`\n  border: 2px solid pink;\n  background: white;\n  padding: 10px;\n  border-radius: 10px;\n  margin-right: 10px;\n`;\n_c4 = LastMessage;\nconst Time = styled.div`\n  color: gray;\n  letter-spacing: 0.1;\n  font-size: 0.7rem;\n  margin-top: 10px;\n`;\n_c5 = Time;\nconst NewMessages = styled.div`\n  width: 25px;\n  height: 25px;\n  background: #ff6f6f;\n  color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 5px;\n  font-size: 0.7rem;\n  position: absolute;\n  right: 0;\n`;\n_c6 = NewMessages;\n\nconst ChatInfo = _ref2 => {\n  _s();\n\n  let {\n    nickname,\n    profileImage,\n    chat_name,\n    last_message,\n    created_at,\n    uid,\n    new_messages\n  } = _ref2;\n\n  function time(time) {\n    const today = new Date();\n    time = new Date(time);\n    let year = today.getFullYear() - time.getFullYear();\n\n    if (year !== 0) {\n      return `${year}년 전`;\n    }\n\n    let month = today.getMonth() - time.getMonth();\n\n    if (month !== 0) {\n      return `${month}달 전`;\n    }\n\n    let day = today.getDate() - time.getDate();\n\n    if (day !== 0) {\n      return `${day}일 전`;\n    }\n\n    let meridiem = time.getHours() < 12 ? '오전 ' : '오후 ';\n    let hour = time.getHours();\n    if (hour === 0) hour = 12;\n    if (hour > 12) hour -= 12;\n    return meridiem + hour + '시 ' + time.getMinutes() + '분';\n  }\n\n  const dispatch = useDispatch();\n\n  const chatOn = () => {\n    const sender = JSON.parse(localStorage.user).uid;\n    dispatch(openChatting());\n    const data = {\n      receiver: uid,\n      nickname,\n      profileImage\n    };\n    dispatch(setOtherToChat(data));\n    dispatch(startLoading());\n    dispatch(requestChattingLogs({\n      sender,\n      receiver: uid\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChatInfoBlock, {\n    onClick: chatOn,\n    children: [/*#__PURE__*/_jsxDEV(ProfileImage, {\n      profileImage: profileImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatName, {\n      title: chat_name ? chat_name : nickname,\n      children: chat_name ? chat_name.slice(0, 5) : nickname.slice(0, 5)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LastMessage, {\n      title: last_message,\n      children: last_message.slice(0, 15)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Time, {\n      children: time(created_at)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewMessages, {\n      children: new_messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatInfo, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c7 = ChatInfo;\nexport default ChatInfo;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"ChatInfoBlock\");\n$RefreshReg$(_c2, \"ProfileImage\");\n$RefreshReg$(_c3, \"ChatName\");\n$RefreshReg$(_c4, \"LastMessage\");\n$RefreshReg$(_c5, \"Time\");\n$RefreshReg$(_c6, \"NewMessages\");\n$RefreshReg$(_c7, \"ChatInfo\");","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/components/ChattingList/ChatInfo.js"],"names":["React","useDispatch","styled","openChatting","requestChattingLogs","setOtherToChat","startLoading","ChatInfoBlock","div","ProfileImage","profileImage","ChatName","LastMessage","Time","NewMessages","ChatInfo","nickname","chat_name","last_message","created_at","uid","new_messages","time","today","Date","year","getFullYear","month","getMonth","day","getDate","meridiem","getHours","hour","getMinutes","dispatch","chatOn","sender","JSON","parse","localStorage","user","data","receiver","slice"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport {\r\n  openChatting,\r\n  requestChattingLogs,\r\n  setOtherToChat,\r\n  startLoading,\r\n} from '../../modules/chatting';\r\n\r\nconst ChatInfoBlock = styled.div`\r\n  border-bottom: 1px solid #cdcdcd;\r\n  width: 98%;\r\n  height: 60px;\r\n  margin: 0 auto;\r\n  padding: 3px;\r\n  border-radius: 5px;\r\n  position: relative;\r\n  &:last-child {\r\n    border: none;\r\n  }\r\n  display: flex;\r\n  align-items: center;\r\n  &:hover {\r\n    background: #cdf1ff;\r\n  }\r\n  cursor: pointer;\r\n`;\r\nconst ProfileImage = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 2px solid #73b2ff;\r\n  border-radius: 10px;\r\n  margin-right: 7px;\r\n  background-size: 100% 100%;\r\n  ${({ profileImage }) =>\r\n    profileImage\r\n      ? `background-image : url(${profileImage});`\r\n      : `background-image : url('/img/default_profile.jpg');`}\r\n`;\r\n\r\nconst ChatName = styled.div`\r\n  background: #73b2ff;\r\n  max-width: 20%;\r\n  overflow: hidden;\r\n  color: white;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  margin-right: 7px;\r\n`;\r\n\r\nconst LastMessage = styled.div`\r\n  border: 2px solid pink;\r\n  background: white;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  margin-right: 10px;\r\n`;\r\nconst Time = styled.div`\r\n  color: gray;\r\n  letter-spacing: 0.1;\r\n  font-size: 0.7rem;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst NewMessages = styled.div`\r\n  width: 25px;\r\n  height: 25px;\r\n  background: #ff6f6f;\r\n  color: white;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 5px;\r\n  font-size: 0.7rem;\r\n  position: absolute;\r\n  right: 0;\r\n`;\r\n\r\nconst ChatInfo = ({\r\n  nickname,\r\n  profileImage,\r\n  chat_name,\r\n  last_message,\r\n  created_at,\r\n  uid,\r\n  new_messages,\r\n}) => {\r\n  function time(time) {\r\n    const today = new Date();\r\n    time = new Date(time);\r\n\r\n    let year = today.getFullYear() - time.getFullYear();\r\n    if (year !== 0) {\r\n      return `${year}년 전`;\r\n    }\r\n    let month = today.getMonth() - time.getMonth();\r\n    if (month !== 0) {\r\n      return `${month}달 전`;\r\n    }\r\n    let day = today.getDate() - time.getDate();\r\n    if (day !== 0) {\r\n      return `${day}일 전`;\r\n    }\r\n    let meridiem = time.getHours() < 12 ? '오전 ' : '오후 ';\r\n    let hour = time.getHours();\r\n    if (hour === 0) hour = 12;\r\n    if (hour > 12) hour -= 12;\r\n\r\n    return meridiem + hour + '시 ' + time.getMinutes() + '분';\r\n  }\r\n  const dispatch = useDispatch();\r\n  const chatOn = () => {\r\n    const sender = JSON.parse(localStorage.user).uid;\r\n    dispatch(openChatting());\r\n    const data = { receiver: uid, nickname, profileImage };\r\n    dispatch(setOtherToChat(data));\r\n    dispatch(startLoading());\r\n    dispatch(requestChattingLogs({ sender, receiver: uid }));\r\n  };\r\n\r\n  return (\r\n    <ChatInfoBlock onClick={chatOn}>\r\n      <ProfileImage profileImage={profileImage} />\r\n      <ChatName title={chat_name ? chat_name : nickname}>\r\n        {chat_name ? chat_name.slice(0, 5) : nickname.slice(0, 5)}\r\n      </ChatName>\r\n      <LastMessage title={last_message}>\r\n        {last_message.slice(0, 15)}\r\n      </LastMessage>\r\n      <Time>{time(created_at)}</Time>\r\n      <NewMessages>{new_messages}</NewMessages>\r\n    </ChatInfoBlock>\r\n  );\r\n};\r\n\r\nexport default ChatInfo;\r\n"]},"metadata":{},"sourceType":"module"}