{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport { takeLatest } from 'redux-saga/effects';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nimport * as friendsAPI from '../lib/api/friends';\nconst REMOVE_TAG_IN_FRONT = 'friends/REMOVE_TAG_IN_FRONT';\nconst ADD_TAG_IN_FRONT = 'friends/ADD_TAG_IN_FRONT';\nconst RECEIVE_MESSAGE = 'frends/RECEIVE_MESSAGE';\nconst FRIEND_REQUEST_ACCEPTED = 'friends/FRIEND_REQUEST_ACCEPTED';\nconst [LOAD_FRIENDS_LIST, LOAD_FRIENDS_LIST_SUCCESS, LOAD_FRIENDS_LIST_FAILURE] = createRequestActionTypes('friends/SET_FRIENDS');\nconst [LOAD_TAGS, LOAD_TAGS_SUCCESS, LOAD_TAGS_FAILURE] = createRequestActionTypes('friends/SET_TAGS');\nconst [ADD_TAG, ADD_TAG_SUCCESS, ADD_TAG_FAILURE] = createRequestActionTypes('friends/ADD_TAG');\nconst [REMOVE_TAG, REMOVE_TAG_SUCCESS, REMOVE_TAG_FAILURE] = createRequestActionTypes('frineds/REMOVE_TAG');\nconst [GET_RECOMMEND, GET_RECOMMEND_SUCCESS, GET_RECOMMEND_FAILURE] = createRequestActionTypes('friends/GET_RECOMMEND');\nconst [FRIEND_REQUEST, FRIEND_REQUEST_SUCCESS, FRIEND_REQUEST_FAILURE] = createRequestActionTypes('friends/FRIEND_REQUEST');\nconst [REQUEST_FRIENDS_LIST, REQUEST_FRIENDS_LIST_SUCCESS, REQUEST_FRIENDS_LIST_FAILURE] = createRequestActionTypes('friends/REQUEST_FRIENDS_LIST');\nconst [REQUEST_MESSAGES_LIST, REQUEST_MESSAGES_LIST_SUCCESS, REQUEST_MESSAGES_LIST_FAILURE] = createRequestActionTypes('friends/REQUEST_MESSAGES_LIST');\nconst [ACCEPT_FRIEND_REQUEST, ACCEPT_FRIEND_REQUEST_SUCCESS, ACCEPT_FRIEND_REQUEST_FAILURE] = createRequestActionTypes('friends/ACCEPT_FRIEND_REQUEST');\nconst [REFUSE_FRIEND_REQUEST, REFUSE_FRIEND_REQUEST_SUCCESS, REFUSE_FRIEND_REQUEST_FAILURE] = createRequestActionTypes('friend/REFUSE_FRIEND_REQUEST');\nexport const loadTags = createAction(LOAD_TAGS);\nexport const addTag = createAction(ADD_TAG);\nexport const addTagInFront = createAction(ADD_TAG_IN_FRONT);\nexport const removeTag = createAction(REMOVE_TAG);\nexport const removeTagInFront = createAction(REMOVE_TAG_IN_FRONT);\nexport const getRecommend = createAction(GET_RECOMMEND);\nexport const friendRequest = createAction(FRIEND_REQUEST);\nexport const requestFriendsList = createAction(REQUEST_FRIENDS_LIST);\nexport const receiveMessage = createAction(RECEIVE_MESSAGE);\nexport const requestMessagesList = createAction(REQUEST_MESSAGES_LIST);\nexport const acceptFriendRequest = createAction(ACCEPT_FRIEND_REQUEST);\nexport const refuseFriendRequest = createAction(REFUSE_FRIEND_REQUEST);\nexport const friendsRequestAccepted = createAction(FRIEND_REQUEST_ACCEPTED);\nconst loadFriendsListSaga = createRequestSaga(LOAD_FRIENDS_LIST);\nconst loadTagsSaga = createRequestSaga(LOAD_TAGS, friendsAPI.loadTags);\nconst addTagSaga = createRequestSaga(ADD_TAG, friendsAPI.addTag);\nconst removeTagSaga = createRequestSaga(REMOVE_TAG, friendsAPI.removeTag);\nconst getRecommendSaga = createRequestSaga(GET_RECOMMEND, friendsAPI.getRecommend);\nconst friendRequestSaga = createRequestSaga(FRIEND_REQUEST, friendsAPI.friendRequest);\nconst requestFriendsListSaga = createRequestSaga(REQUEST_FRIENDS_LIST, friendsAPI.requestFriendsList);\nconst requestMessagesListSaga = createRequestSaga(REQUEST_MESSAGES_LIST, friendsAPI.requestMessagesList);\nconst acceptFriendRequestSaga = createRequestSaga(ACCEPT_FRIEND_REQUEST, friendsAPI.acceptFriendRequest);\nconst refuseFriendRequestSaga = createRequestSaga(REFUSE_FRIEND_REQUEST, friendsAPI.refuseFriendRequest);\nexport function* friendsSaga() {\n  yield takeLatest(LOAD_FRIENDS_LIST, loadFriendsListSaga);\n  yield takeLatest(LOAD_TAGS, loadTagsSaga);\n  yield takeLatest(ADD_TAG, addTagSaga);\n  yield takeLatest(REMOVE_TAG, removeTagSaga);\n  yield takeLatest(GET_RECOMMEND, getRecommendSaga);\n  yield takeLatest(FRIEND_REQUEST, friendRequestSaga);\n  yield takeLatest(REQUEST_FRIENDS_LIST, requestFriendsListSaga);\n  yield takeLatest(REQUEST_MESSAGES_LIST, requestMessagesListSaga);\n  yield takeLatest(ACCEPT_FRIEND_REQUEST, acceptFriendRequestSaga);\n  yield takeLatest(REFUSE_FRIEND_REQUEST, refuseFriendRequestSaga);\n}\nconst initialState = {\n  friendsList: [],\n  tagList: '',\n  error: null,\n  recommendList: [],\n  friendRequestList: [],\n  messagesList: []\n};\nexport default handleActions({\n  [LOAD_TAGS_SUCCESS]: (state, _ref) => {\n    let {\n      payload: tags\n    } = _ref;\n    return { ...state,\n      tagList: tags\n    };\n  },\n  [LOAD_TAGS_FAILURE]: (state, _ref2) => {\n    let {\n      payload: error\n    } = _ref2;\n    return { ...state,\n      error\n    };\n  },\n  [LOAD_FRIENDS_LIST_SUCCESS]: (state, _ref3) => {\n    let {\n      payload: friendsList\n    } = _ref3;\n    return { ...state,\n      friendsList: [...friendsList]\n    };\n  },\n  [LOAD_FRIENDS_LIST_FAILURE]: (state, _ref4) => {\n    let {\n      payload: error\n    } = _ref4;\n    return { ...state,\n      error\n    };\n  },\n  [ADD_TAG_SUCCESS]: state => ({ ...state\n  }),\n  [ADD_TAG_FAILURE]: (state, _ref5) => {\n    let {\n      payload: error\n    } = _ref5;\n    return { ...state,\n      error\n    };\n  },\n  [ADD_TAG_IN_FRONT]: (state, _ref6) => {\n    let {\n      payload: tag\n    } = _ref6;\n    console.log(tag);\n    return { ...state,\n      tagList: state.tagList + '_' + tag\n    };\n  },\n  [REMOVE_TAG_SUCCESS]: state => ({ ...state\n  }),\n  [REMOVE_TAG_FAILURE]: (state, _ref7) => {\n    let {\n      payload: error\n    } = _ref7;\n    return { ...state,\n      error\n    };\n  },\n  [REMOVE_TAG_IN_FRONT]: (state, _ref8) => {\n    let {\n      payload: tag\n    } = _ref8;\n    console.log(tag);\n    return { ...state,\n      tagList: state.tagList.split('_').filter(el => el !== tag).join('_')\n    };\n  },\n  [GET_RECOMMEND_SUCCESS]: (state, _ref9) => {\n    let {\n      payload: list\n    } = _ref9;\n    return { ...state,\n      recommendList: [...list]\n    };\n  },\n  [GET_RECOMMEND_FAILURE]: (state, _ref10) => {\n    let {\n      payload: error\n    } = _ref10;\n    return { ...state,\n      error\n    };\n  },\n  [FRIEND_REQUEST_SUCCESS]: (state, _ref11) => {\n    let {\n      payload: list\n    } = _ref11;\n    return { ...state,\n      friendRequestList: [...list]\n    };\n  },\n  [FRIEND_REQUEST_FAILURE]: (state, _ref12) => {\n    let {\n      payload: error\n    } = _ref12;\n    return { ...state,\n      error\n    };\n  },\n  [REQUEST_FRIENDS_LIST_SUCCESS]: (state, _ref13) => {\n    let {\n      payload: friendsList\n    } = _ref13;\n    return { ...state,\n      friendsList\n    };\n  },\n  [REQUEST_FRIENDS_LIST_FAILURE]: (state, _ref14) => {\n    let {\n      payload: error\n    } = _ref14;\n    return { ...state,\n      error\n    };\n  },\n  [RECEIVE_MESSAGE]: (state, _ref15) => {\n    let {\n      payload: data\n    } = _ref15;\n    return { ...state,\n      messagesList: [...state.messagesList, data]\n    };\n  },\n  [REQUEST_MESSAGES_LIST_SUCCESS]: (state, _ref16) => {\n    let {\n      payload: messagesList\n    } = _ref16;\n    console.log(messagesList);\n    const result = messagesList.map(el => {\n      const info = JSON.parse(el.info);\n      info.type = el.type;\n      info.time = el.CREATED_AT.slice(2, 10).split('-').join('.');\n      return info;\n    });\n    return { ...state,\n      messagesList: [...result]\n    };\n  },\n  [REQUEST_MESSAGES_LIST_FAILURE]: (state, _ref17) => {\n    let {\n      payload: error\n    } = _ref17;\n    return { ...state,\n      error\n    };\n  },\n  [ACCEPT_FRIEND_REQUEST_SUCCESS]: (state, _ref18) => {\n    let {\n      payload: {\n        friendsList,\n        messagesList\n      }\n    } = _ref18;\n    return { ...state,\n      messagesList: [...messagesList.map(message => JSON.parse(message.SENDER_INFO))],\n      friendsList: [...friendsList]\n    };\n  },\n  [ACCEPT_FRIEND_REQUEST_FAILURE]: (state, _ref19) => {\n    let {\n      payload: error\n    } = _ref19;\n    return { ...state,\n      error\n    };\n  },\n  [REFUSE_FRIEND_REQUEST_SUCCESS]: (state, _ref20) => {\n    let {\n      payload: messagesList\n    } = _ref20;\n    return { ...state,\n      messagesList: [...messagesList.map(message => JSON.parse(message.SENDER_INFO))]\n    };\n  },\n  [REFUSE_FRIEND_REQUEST_FAILURE]: (state, _ref21) => {\n    let {\n      payload: error\n    } = _ref21;\n    return { ...state,\n      error\n    };\n  },\n  [FRIEND_REQUEST_ACCEPTED]: (state, _ref22) => {\n    let {\n      payload: info\n    } = _ref22;\n    return { ...state,\n      friendsList: [...state.friendsList, info]\n    };\n  }\n}, initialState);","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/modules/friends.js"],"names":["createAction","handleActions","takeLatest","createRequestSaga","createRequestActionTypes","friendsAPI","REMOVE_TAG_IN_FRONT","ADD_TAG_IN_FRONT","RECEIVE_MESSAGE","FRIEND_REQUEST_ACCEPTED","LOAD_FRIENDS_LIST","LOAD_FRIENDS_LIST_SUCCESS","LOAD_FRIENDS_LIST_FAILURE","LOAD_TAGS","LOAD_TAGS_SUCCESS","LOAD_TAGS_FAILURE","ADD_TAG","ADD_TAG_SUCCESS","ADD_TAG_FAILURE","REMOVE_TAG","REMOVE_TAG_SUCCESS","REMOVE_TAG_FAILURE","GET_RECOMMEND","GET_RECOMMEND_SUCCESS","GET_RECOMMEND_FAILURE","FRIEND_REQUEST","FRIEND_REQUEST_SUCCESS","FRIEND_REQUEST_FAILURE","REQUEST_FRIENDS_LIST","REQUEST_FRIENDS_LIST_SUCCESS","REQUEST_FRIENDS_LIST_FAILURE","REQUEST_MESSAGES_LIST","REQUEST_MESSAGES_LIST_SUCCESS","REQUEST_MESSAGES_LIST_FAILURE","ACCEPT_FRIEND_REQUEST","ACCEPT_FRIEND_REQUEST_SUCCESS","ACCEPT_FRIEND_REQUEST_FAILURE","REFUSE_FRIEND_REQUEST","REFUSE_FRIEND_REQUEST_SUCCESS","REFUSE_FRIEND_REQUEST_FAILURE","loadTags","addTag","addTagInFront","removeTag","removeTagInFront","getRecommend","friendRequest","requestFriendsList","receiveMessage","requestMessagesList","acceptFriendRequest","refuseFriendRequest","friendsRequestAccepted","loadFriendsListSaga","loadTagsSaga","addTagSaga","removeTagSaga","getRecommendSaga","friendRequestSaga","requestFriendsListSaga","requestMessagesListSaga","acceptFriendRequestSaga","refuseFriendRequestSaga","friendsSaga","initialState","friendsList","tagList","error","recommendList","friendRequestList","messagesList","state","payload","tags","tag","console","log","split","filter","el","join","list","data","result","map","info","JSON","parse","type","time","CREATED_AT","slice","message","SENDER_INFO"],"mappings":"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","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\r\nimport { takeLatest } from 'redux-saga/effects';\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from '../lib/createRequestSaga';\r\nimport * as friendsAPI from '../lib/api/friends';\r\n\r\nconst REMOVE_TAG_IN_FRONT = 'friends/REMOVE_TAG_IN_FRONT';\r\nconst ADD_TAG_IN_FRONT = 'friends/ADD_TAG_IN_FRONT';\r\nconst RECEIVE_MESSAGE = 'frends/RECEIVE_MESSAGE';\r\nconst FRIEND_REQUEST_ACCEPTED = 'friends/FRIEND_REQUEST_ACCEPTED';\r\nconst [\r\n  LOAD_FRIENDS_LIST,\r\n  LOAD_FRIENDS_LIST_SUCCESS,\r\n  LOAD_FRIENDS_LIST_FAILURE,\r\n] = createRequestActionTypes('friends/SET_FRIENDS');\r\nconst [LOAD_TAGS, LOAD_TAGS_SUCCESS, LOAD_TAGS_FAILURE] =\r\n  createRequestActionTypes('friends/SET_TAGS');\r\nconst [ADD_TAG, ADD_TAG_SUCCESS, ADD_TAG_FAILURE] =\r\n  createRequestActionTypes('friends/ADD_TAG');\r\nconst [REMOVE_TAG, REMOVE_TAG_SUCCESS, REMOVE_TAG_FAILURE] =\r\n  createRequestActionTypes('frineds/REMOVE_TAG');\r\nconst [GET_RECOMMEND, GET_RECOMMEND_SUCCESS, GET_RECOMMEND_FAILURE] =\r\n  createRequestActionTypes('friends/GET_RECOMMEND');\r\nconst [FRIEND_REQUEST, FRIEND_REQUEST_SUCCESS, FRIEND_REQUEST_FAILURE] =\r\n  createRequestActionTypes('friends/FRIEND_REQUEST');\r\nconst [\r\n  REQUEST_FRIENDS_LIST,\r\n  REQUEST_FRIENDS_LIST_SUCCESS,\r\n  REQUEST_FRIENDS_LIST_FAILURE,\r\n] = createRequestActionTypes('friends/REQUEST_FRIENDS_LIST');\r\nconst [\r\n  REQUEST_MESSAGES_LIST,\r\n  REQUEST_MESSAGES_LIST_SUCCESS,\r\n  REQUEST_MESSAGES_LIST_FAILURE,\r\n] = createRequestActionTypes('friends/REQUEST_MESSAGES_LIST');\r\nconst [\r\n  ACCEPT_FRIEND_REQUEST,\r\n  ACCEPT_FRIEND_REQUEST_SUCCESS,\r\n  ACCEPT_FRIEND_REQUEST_FAILURE,\r\n] = createRequestActionTypes('friends/ACCEPT_FRIEND_REQUEST');\r\n\r\nconst [\r\n  REFUSE_FRIEND_REQUEST,\r\n  REFUSE_FRIEND_REQUEST_SUCCESS,\r\n  REFUSE_FRIEND_REQUEST_FAILURE,\r\n] = createRequestActionTypes('friend/REFUSE_FRIEND_REQUEST');\r\n\r\nexport const loadTags = createAction(LOAD_TAGS);\r\nexport const addTag = createAction(ADD_TAG);\r\nexport const addTagInFront = createAction(ADD_TAG_IN_FRONT);\r\nexport const removeTag = createAction(REMOVE_TAG);\r\nexport const removeTagInFront = createAction(REMOVE_TAG_IN_FRONT);\r\nexport const getRecommend = createAction(GET_RECOMMEND);\r\nexport const friendRequest = createAction(FRIEND_REQUEST);\r\nexport const requestFriendsList = createAction(REQUEST_FRIENDS_LIST);\r\nexport const receiveMessage = createAction(RECEIVE_MESSAGE);\r\nexport const requestMessagesList = createAction(REQUEST_MESSAGES_LIST);\r\nexport const acceptFriendRequest = createAction(ACCEPT_FRIEND_REQUEST);\r\nexport const refuseFriendRequest = createAction(REFUSE_FRIEND_REQUEST);\r\nexport const friendsRequestAccepted = createAction(FRIEND_REQUEST_ACCEPTED);\r\n\r\nconst loadFriendsListSaga = createRequestSaga(LOAD_FRIENDS_LIST);\r\nconst loadTagsSaga = createRequestSaga(LOAD_TAGS, friendsAPI.loadTags);\r\nconst addTagSaga = createRequestSaga(ADD_TAG, friendsAPI.addTag);\r\nconst removeTagSaga = createRequestSaga(REMOVE_TAG, friendsAPI.removeTag);\r\nconst getRecommendSaga = createRequestSaga(\r\n  GET_RECOMMEND,\r\n  friendsAPI.getRecommend,\r\n);\r\nconst friendRequestSaga = createRequestSaga(\r\n  FRIEND_REQUEST,\r\n  friendsAPI.friendRequest,\r\n);\r\nconst requestFriendsListSaga = createRequestSaga(\r\n  REQUEST_FRIENDS_LIST,\r\n  friendsAPI.requestFriendsList,\r\n);\r\nconst requestMessagesListSaga = createRequestSaga(\r\n  REQUEST_MESSAGES_LIST,\r\n  friendsAPI.requestMessagesList,\r\n);\r\nconst acceptFriendRequestSaga = createRequestSaga(\r\n  ACCEPT_FRIEND_REQUEST,\r\n  friendsAPI.acceptFriendRequest,\r\n);\r\nconst refuseFriendRequestSaga = createRequestSaga(\r\n  REFUSE_FRIEND_REQUEST,\r\n  friendsAPI.refuseFriendRequest,\r\n);\r\n\r\nexport function* friendsSaga() {\r\n  yield takeLatest(LOAD_FRIENDS_LIST, loadFriendsListSaga);\r\n  yield takeLatest(LOAD_TAGS, loadTagsSaga);\r\n  yield takeLatest(ADD_TAG, addTagSaga);\r\n  yield takeLatest(REMOVE_TAG, removeTagSaga);\r\n  yield takeLatest(GET_RECOMMEND, getRecommendSaga);\r\n  yield takeLatest(FRIEND_REQUEST, friendRequestSaga);\r\n  yield takeLatest(REQUEST_FRIENDS_LIST, requestFriendsListSaga);\r\n  yield takeLatest(REQUEST_MESSAGES_LIST, requestMessagesListSaga);\r\n  yield takeLatest(ACCEPT_FRIEND_REQUEST, acceptFriendRequestSaga);\r\n  yield takeLatest(REFUSE_FRIEND_REQUEST, refuseFriendRequestSaga);\r\n}\r\n\r\nconst initialState = {\r\n  friendsList: [],\r\n  tagList: '',\r\n  error: null,\r\n  recommendList: [],\r\n  friendRequestList: [],\r\n  messagesList: [],\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [LOAD_TAGS_SUCCESS]: (state, { payload: tags }) => ({\r\n      ...state,\r\n      tagList: tags,\r\n    }),\r\n    [LOAD_TAGS_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [LOAD_FRIENDS_LIST_SUCCESS]: (state, { payload: friendsList }) => ({\r\n      ...state,\r\n      friendsList: [...friendsList],\r\n    }),\r\n    [LOAD_FRIENDS_LIST_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [ADD_TAG_SUCCESS]: (state) => ({\r\n      ...state,\r\n    }),\r\n    [ADD_TAG_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [ADD_TAG_IN_FRONT]: (state, { payload: tag }) => {\r\n      console.log(tag);\r\n      return {\r\n        ...state,\r\n        tagList: state.tagList + '_' + tag,\r\n      };\r\n    },\r\n    [REMOVE_TAG_SUCCESS]: (state) => ({\r\n      ...state,\r\n    }),\r\n    [REMOVE_TAG_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [REMOVE_TAG_IN_FRONT]: (state, { payload: tag }) => {\r\n      console.log(tag);\r\n      return {\r\n        ...state,\r\n        tagList: state.tagList\r\n          .split('_')\r\n          .filter((el) => el !== tag)\r\n          .join('_'),\r\n      };\r\n    },\r\n    [GET_RECOMMEND_SUCCESS]: (state, { payload: list }) => ({\r\n      ...state,\r\n      recommendList: [...list],\r\n    }),\r\n    [GET_RECOMMEND_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [FRIEND_REQUEST_SUCCESS]: (state, { payload: list }) => ({\r\n      ...state,\r\n      friendRequestList: [...list],\r\n    }),\r\n    [FRIEND_REQUEST_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [REQUEST_FRIENDS_LIST_SUCCESS]: (state, { payload: friendsList }) => ({\r\n      ...state,\r\n      friendsList,\r\n    }),\r\n    [REQUEST_FRIENDS_LIST_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [RECEIVE_MESSAGE]: (state, { payload: data }) => ({\r\n      ...state,\r\n      messagesList: [...state.messagesList, data],\r\n    }),\r\n    [REQUEST_MESSAGES_LIST_SUCCESS]: (state, { payload: messagesList }) => {\r\n      console.log(messagesList);\r\n      const result = messagesList.map((el) => {\r\n        const info = JSON.parse(el.info);\r\n        info.type = el.type;\r\n        info.time = el.CREATED_AT.slice(2, 10).split('-').join('.');\r\n        return info;\r\n      });\r\n      return {\r\n        ...state,\r\n        messagesList: [...result],\r\n      };\r\n    },\r\n    [REQUEST_MESSAGES_LIST_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [ACCEPT_FRIEND_REQUEST_SUCCESS]: (\r\n      state,\r\n      { payload: { friendsList, messagesList } },\r\n    ) => ({\r\n      ...state,\r\n      messagesList: [\r\n        ...messagesList.map((message) => JSON.parse(message.SENDER_INFO)),\r\n      ],\r\n      friendsList: [...friendsList],\r\n    }),\r\n    [ACCEPT_FRIEND_REQUEST_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [REFUSE_FRIEND_REQUEST_SUCCESS]: (state, { payload: messagesList }) => ({\r\n      ...state,\r\n      messagesList: [\r\n        ...messagesList.map((message) => JSON.parse(message.SENDER_INFO)),\r\n      ],\r\n    }),\r\n    [REFUSE_FRIEND_REQUEST_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [FRIEND_REQUEST_ACCEPTED]: (state, { payload: info }) => ({\r\n      ...state,\r\n      friendsList: [...state.friendsList, info],\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n"]},"metadata":{},"sourceType":"module"}