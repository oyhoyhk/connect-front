{"ast":null,"code":"var _jsxFileName = \"C:\\\\nani\\\\connect\\\\connect-frontend\\\\src\\\\containers\\\\common\\\\NoticeContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Notice from '../../components/common/Notice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoticeContainer = _ref => {\n  _s();\n\n  let {\n    uid,\n    profileImage,\n    nickname\n  } = _ref;\n  const dispatch = useDispatch();\n  const [sender, setSender] = useState(null);\n  useEffect(() => {\n    if (localStorage.user) {\n      setSender(JSON.parselocalStorage.getItem('user').uid);\n    }\n  }, []);\n\n  const onAccept = () => {\n    console.log(uid, sender);\n  };\n\n  const onRefuse = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Notice, {\n    profileImage: profileImage,\n    nickname: nickname,\n    onAccept: onAccept,\n    onRefuse: onRefuse\n  }, uid, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NoticeContainer, \"Tb060Ng9NMlywhICWDWkeWY5CYM=\", false, function () {\n  return [useDispatch];\n});\n\n_c = NoticeContainer;\nexport default NoticeContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoticeContainer\");","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/common/NoticeContainer.js"],"names":["React","useEffect","useState","useDispatch","Notice","NoticeContainer","uid","profileImage","nickname","dispatch","sender","setSender","localStorage","user","JSON","parselocalStorage","getItem","onAccept","console","log","onRefuse"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,gCAAnB;;;AAEA,MAAMC,eAAe,GAAG,QAAqC;AAAA;;AAAA,MAApC;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,YAAP;AAAqBC,IAAAA;AAArB,GAAoC;AAC3D,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,IAAD,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,YAAY,CAACC,IAAjB,EAAuB;AACrBF,MAAAA,SAAS,CAACG,IAAI,CAACC,iBAAL,CAAuBC,OAAvB,CAA+B,MAA/B,EAAuCV,GAAxC,CAAT;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;;AAKA,QAAMW,QAAQ,GAAG,MAAM;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYb,GAAZ,EAAiBI,MAAjB;AACD,GAFD;;AAGA,QAAMU,QAAQ,GAAG,MAAM,CAAE,CAAzB;;AACA,sBACE,QAAC,MAAD;AAEE,IAAA,YAAY,EAAEb,YAFhB;AAGE,IAAA,QAAQ,EAAEC,QAHZ;AAIE,IAAA,QAAQ,EAAES,QAJZ;AAKE,IAAA,QAAQ,EAAEG;AALZ,KACOd,GADP;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CArBD;;GAAMD,e;UACaF,W;;;KADbE,e;AAuBN,eAAeA,eAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Notice from '../../components/common/Notice';\r\n\r\nconst NoticeContainer = ({ uid, profileImage, nickname }) => {\r\n  const dispatch = useDispatch();\r\n  const [sender, setSender] = useState(null);\r\n  useEffect(() => {\r\n    if (localStorage.user) {\r\n      setSender(JSON.parselocalStorage.getItem('user').uid);\r\n    }\r\n  }, []);\r\n  const onAccept = () => {\r\n    console.log(uid, sender);\r\n  };\r\n  const onRefuse = () => {};\r\n  return (\r\n    <Notice\r\n      key={uid}\r\n      profileImage={profileImage}\r\n      nickname={nickname}\r\n      onAccept={onAccept}\r\n      onRefuse={onRefuse}\r\n    />\r\n  );\r\n};\r\n\r\nexport default NoticeContainer;\r\n"]},"metadata":{},"sourceType":"module"}