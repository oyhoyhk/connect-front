{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport { takeLatest } from 'redux-saga/effects';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nimport * as friendsAPI from '../lib/api/friends';\nconst [LOAD_FRIENDS_LIST, LOAD_FRIENDS_LIST_SUCCESS, LOAD_FRIENDS_LIST_FAILURE] = createRequestActionTypes('friends/SET_FRIENDS');\nconst [LOAD_TAGS, LOAD_TAGS_SUCCESS, LOAD_TAGS_FAILURE] = createRequestActionTypes('friends/SET_TAGS');\nconst [ADD_TAG, ADD_TAG_SUCCESS, ADD_TAG_FAILURE] = createRequestActionTypes('friends/ADD_TAG');\nconst ADD_TAG_IN_FRONT = 'friends/ADD_TAG_IN_FRONT';\nconst [REMOVE_TAG, REMOVE_TAG_SUCCESS, REMOVE_TAG_FAILURE] = createRequestActionTypes('frineds/REMOVE_TAG');\nconst REMOVE_TAG_IN_FRONT = 'friends/REMOVE_TAG_IN_FRONT';\nconst [GET_RECOMMAND, GET_RECOMMAND_SUCCESS, GET_RECOMMAND_FAILURE] = createRequestActionTypes('friends/GET_STANDARD_RECOMMAND');\nexport const loadTags = createAction(LOAD_TAGS);\nexport const addTag = createAction(ADD_TAG);\nexport const addTagInFront = createAction(ADD_TAG_IN_FRONT);\nexport const removeTag = createAction(REMOVE_TAG);\nexport const removeTagInFront = createAction(REMOVE_TAG_IN_FRONT);\nconst loadFriendsListSaga = createRequestSaga(LOAD_FRIENDS_LIST);\nconst loadTagsSaga = createRequestSaga(LOAD_TAGS, friendsAPI.loadTags);\nconst addTagSaga = createRequestSaga(ADD_TAG, friendsAPI.addTag);\nconst removeTagSaga = createRequestSaga(REMOVE_TAG, friendsAPI.removeTag);\nconst getRecommand = createRequestSaga(GET_RECOMMAND, friendsAPI.standardRecommand);\nexport function* friendsSaga() {\n  yield takeLatest(LOAD_FRIENDS_LIST, loadFriendsListSaga);\n  yield takeLatest(LOAD_TAGS, loadTagsSaga);\n  yield takeLatest(ADD_TAG, addTagSaga);\n  yield takeLatest(REMOVE_TAG, removeTagSaga);\n  yield takeLatest(GET_RECOMMAND, getStandardRecommandSaga);\n}\nconst initialState = {\n  friendsList: [],\n  tagList: '',\n  error: null,\n  recommandList: []\n};\nexport default handleActions({\n  [LOAD_TAGS_SUCCESS]: (state, _ref) => {\n    let {\n      payload: tags\n    } = _ref;\n    return { ...state,\n      tagList: tags\n    };\n  },\n  [LOAD_TAGS_FAILURE]: (state, _ref2) => {\n    let {\n      payload: error\n    } = _ref2;\n    return { ...state,\n      error\n    };\n  },\n  [LOAD_FRIENDS_LIST_SUCCESS]: (state, _ref3) => {\n    let {\n      payload: friendsList\n    } = _ref3;\n    return { ...state,\n      friendsList: [...friendsList]\n    };\n  },\n  [LOAD_FRIENDS_LIST_FAILURE]: (state, _ref4) => {\n    let {\n      payload: error\n    } = _ref4;\n    return { ...state,\n      error\n    };\n  },\n  [ADD_TAG_SUCCESS]: state => ({ ...state\n  }),\n  [ADD_TAG_FAILURE]: (state, _ref5) => {\n    let {\n      payload: error\n    } = _ref5;\n    return { ...state,\n      error\n    };\n  },\n  [ADD_TAG_IN_FRONT]: (state, _ref6) => {\n    let {\n      payload: tag\n    } = _ref6;\n    console.log(tag);\n    return { ...state,\n      tagList: state.tagList + '#' + tag\n    };\n  },\n  [REMOVE_TAG_SUCCESS]: state => ({ ...state\n  }),\n  [REMOVE_TAG_FAILURE]: (state, _ref7) => {\n    let {\n      payload: error\n    } = _ref7;\n    return { ...state,\n      error\n    };\n  },\n  [REMOVE_TAG_IN_FRONT]: (state, _ref8) => {\n    let {\n      payload: tag\n    } = _ref8;\n    console.log(tag);\n    return { ...state,\n      tagList: state.tagList.split('#').filter(el => el !== tag).join('#')\n    };\n  },\n  [GET_RECOMMAND_SUCCESS]: (state, _ref9) => {\n    let {\n      payload: list\n    } = _ref9;\n    return { ...state,\n      recommandList: [...list]\n    };\n  },\n  [GET_RECOMMAND_FAILURE]: (state, _ref10) => {\n    let {\n      payload: error\n    } = _ref10;\n    return { ...state,\n      error\n    };\n  }\n}, initialState);","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/modules/friends.js"],"names":["createAction","handleActions","takeLatest","createRequestSaga","createRequestActionTypes","friendsAPI","LOAD_FRIENDS_LIST","LOAD_FRIENDS_LIST_SUCCESS","LOAD_FRIENDS_LIST_FAILURE","LOAD_TAGS","LOAD_TAGS_SUCCESS","LOAD_TAGS_FAILURE","ADD_TAG","ADD_TAG_SUCCESS","ADD_TAG_FAILURE","ADD_TAG_IN_FRONT","REMOVE_TAG","REMOVE_TAG_SUCCESS","REMOVE_TAG_FAILURE","REMOVE_TAG_IN_FRONT","GET_RECOMMAND","GET_RECOMMAND_SUCCESS","GET_RECOMMAND_FAILURE","loadTags","addTag","addTagInFront","removeTag","removeTagInFront","loadFriendsListSaga","loadTagsSaga","addTagSaga","removeTagSaga","getRecommand","standardRecommand","friendsSaga","getStandardRecommandSaga","initialState","friendsList","tagList","error","recommandList","state","payload","tags","tag","console","log","split","filter","el","join","list"],"mappings":"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","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\r\nimport { takeLatest } from 'redux-saga/effects';\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from '../lib/createRequestSaga';\r\nimport * as friendsAPI from '../lib/api/friends';\r\n\r\nconst [\r\n  LOAD_FRIENDS_LIST,\r\n  LOAD_FRIENDS_LIST_SUCCESS,\r\n  LOAD_FRIENDS_LIST_FAILURE,\r\n] = createRequestActionTypes('friends/SET_FRIENDS');\r\nconst [LOAD_TAGS, LOAD_TAGS_SUCCESS, LOAD_TAGS_FAILURE] =\r\n  createRequestActionTypes('friends/SET_TAGS');\r\nconst [ADD_TAG, ADD_TAG_SUCCESS, ADD_TAG_FAILURE] =\r\n  createRequestActionTypes('friends/ADD_TAG');\r\nconst ADD_TAG_IN_FRONT = 'friends/ADD_TAG_IN_FRONT';\r\nconst [REMOVE_TAG, REMOVE_TAG_SUCCESS, REMOVE_TAG_FAILURE] =\r\n  createRequestActionTypes('frineds/REMOVE_TAG');\r\nconst REMOVE_TAG_IN_FRONT = 'friends/REMOVE_TAG_IN_FRONT';\r\nconst [GET_RECOMMAND, GET_RECOMMAND_SUCCESS, GET_RECOMMAND_FAILURE] =\r\n  createRequestActionTypes('friends/GET_STANDARD_RECOMMAND');\r\n\r\nexport const loadTags = createAction(LOAD_TAGS);\r\nexport const addTag = createAction(ADD_TAG);\r\nexport const addTagInFront = createAction(ADD_TAG_IN_FRONT);\r\nexport const removeTag = createAction(REMOVE_TAG);\r\nexport const removeTagInFront = createAction(REMOVE_TAG_IN_FRONT);\r\n\r\nconst loadFriendsListSaga = createRequestSaga(LOAD_FRIENDS_LIST);\r\nconst loadTagsSaga = createRequestSaga(LOAD_TAGS, friendsAPI.loadTags);\r\nconst addTagSaga = createRequestSaga(ADD_TAG, friendsAPI.addTag);\r\nconst removeTagSaga = createRequestSaga(REMOVE_TAG, friendsAPI.removeTag);\r\nconst getRecommand = createRequestSaga(\r\n  GET_RECOMMAND,\r\n  friendsAPI.standardRecommand,\r\n);\r\n\r\nexport function* friendsSaga() {\r\n  yield takeLatest(LOAD_FRIENDS_LIST, loadFriendsListSaga);\r\n  yield takeLatest(LOAD_TAGS, loadTagsSaga);\r\n  yield takeLatest(ADD_TAG, addTagSaga);\r\n  yield takeLatest(REMOVE_TAG, removeTagSaga);\r\n  yield takeLatest(GET_RECOMMAND, getStandardRecommandSaga);\r\n}\r\n\r\nconst initialState = {\r\n  friendsList: [],\r\n  tagList: '',\r\n  error: null,\r\n  recommandList: [],\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [LOAD_TAGS_SUCCESS]: (state, { payload: tags }) => ({\r\n      ...state,\r\n      tagList: tags,\r\n    }),\r\n    [LOAD_TAGS_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [LOAD_FRIENDS_LIST_SUCCESS]: (state, { payload: friendsList }) => ({\r\n      ...state,\r\n      friendsList: [...friendsList],\r\n    }),\r\n    [LOAD_FRIENDS_LIST_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [ADD_TAG_SUCCESS]: (state) => ({\r\n      ...state,\r\n    }),\r\n    [ADD_TAG_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [ADD_TAG_IN_FRONT]: (state, { payload: tag }) => {\r\n      console.log(tag);\r\n      return {\r\n        ...state,\r\n        tagList: state.tagList + '#' + tag,\r\n      };\r\n    },\r\n    [REMOVE_TAG_SUCCESS]: (state) => ({\r\n      ...state,\r\n    }),\r\n    [REMOVE_TAG_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [REMOVE_TAG_IN_FRONT]: (state, { payload: tag }) => {\r\n      console.log(tag);\r\n      return {\r\n        ...state,\r\n        tagList: state.tagList\r\n          .split('#')\r\n          .filter((el) => el !== tag)\r\n          .join('#'),\r\n      };\r\n    },\r\n    [GET_RECOMMAND_SUCCESS]: (state, { payload: list }) => ({\r\n      ...state,\r\n      recommandList: [...list],\r\n    }),\r\n    [GET_RECOMMAND_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n"]},"metadata":{},"sourceType":"module"}