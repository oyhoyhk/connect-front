{"ast":null,"code":"import _slicedToArray from\"C:/nani/connect/connect-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useCallback,useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import Header from'../../components/common/Header';import Navigation from'../../components/common/Navigation';import{removeAuth}from'../../modules/auth';import{initializeChatHall,leaveChatHall}from'../../modules/chatHall';import{friendRequestAccepted,friendRequestRefused,getRecommend,receiveMessage,requestMessagesList,someoneLogin,someoneLogout}from'../../modules/friends';import{logout}from'../../modules/user';import{socket}from'../../lib/sockets/chatHallSocket';import{useNavigate}from'../../../node_modules/react-router/index';import{receiveChatting}from'../../modules/chatting';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var HeaderContainer=function HeaderContainer(){var _useSelector=useSelector(function(_ref){var user=_ref.user,friends=_ref.friends,newMessages=_ref.chatting.newMessages;return{user:user.user,messages:friends.messagesList,newMessages:newMessages};}),user=_useSelector.user,messages=_useSelector.messages,newMessages=_useSelector.newMessages;var dispatch=useDispatch();var navigate=useNavigate();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),noticeList=_useState2[0],setNoticeList=_useState2[1];var toggleNoticeList=useCallback(function(){setNoticeList(!noticeList);},[noticeList]);var onLogout=function onLogout(){dispatch(logout({uid:user.uid}));dispatch(removeAuth());if(localStorage.user){localStorage.removeItem('user');}if(localStorage.chatHall){dispatch(leaveChatHall({username:user.username}));dispatch(initializeChatHall());localStorage.removeItem('chatHall');}navigate('/');};useEffect(function(){if(user){var uid=user.uid;dispatch(requestMessagesList({uid:uid}));socket.on('friend_request',function(data){var info=data.info;info.time=data.time;info.type='received';dispatch(receiveMessage(info));});socket.on('friend_request_accepted',function(data){dispatch(friendRequestAccepted(data));dispatch(getRecommend({filter:user.tags,uid:user.uid}));});socket.on('friend_request_refused',function(data){dispatch(friendRequestRefused(Number(data)));});socket.on('friend_request_canceled',function(data){dispatch(friendRequestRefused(Number(data)));});socket.on('someone_logout',function(uid){dispatch(someoneLogout(uid));});socket.on('someone_login',function(uid){dispatch(someoneLogin(uid));});socket.on('someone_send_message',function(_ref2){var sender=_ref2.sender,message=_ref2.message,chatList=_ref2.chatList;dispatch(receiveChatting({sender:sender,message:message,chatList:chatList}));});}return function(){socket.off();};},[dispatch,user]);useEffect(function(){if(!localStorage.getItem('user')){navigate('/');}},[navigate]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{noticeList:noticeList,toggleNoticeList:toggleNoticeList,user:user,onLogout:onLogout,messages:messages}),user?/*#__PURE__*/_jsx(Navigation,{newMessages:newMessages}):'']});};export default HeaderContainer;","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/common/HeaderContainer.js"],"names":["React","useCallback","useEffect","useState","useDispatch","useSelector","Header","Navigation","removeAuth","initializeChatHall","leaveChatHall","friendRequestAccepted","friendRequestRefused","getRecommend","receiveMessage","requestMessagesList","someoneLogin","someoneLogout","logout","socket","useNavigate","receiveChatting","HeaderContainer","user","friends","newMessages","chatting","messages","messagesList","dispatch","navigate","noticeList","setNoticeList","toggleNoticeList","onLogout","uid","localStorage","removeItem","chatHall","username","on","data","info","time","type","filter","tags","Number","sender","message","chatList","off","getItem"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Header from '../../components/common/Header';\r\nimport Navigation from '../../components/common/Navigation';\r\nimport { removeAuth } from '../../modules/auth';\r\nimport { initializeChatHall, leaveChatHall } from '../../modules/chatHall';\r\nimport {\r\n  friendRequestAccepted,\r\n  friendRequestRefused,\r\n  getRecommend,\r\n  receiveMessage,\r\n  requestMessagesList,\r\n  someoneLogin,\r\n  someoneLogout,\r\n} from '../../modules/friends';\r\nimport { logout } from '../../modules/user';\r\nimport { socket } from '../../lib/sockets/chatHallSocket';\r\nimport { useNavigate } from '../../../node_modules/react-router/index';\r\nimport { receiveChatting } from '../../modules/chatting';\r\nconst HeaderContainer = () => {\r\n  const { user, messages, newMessages } = useSelector(\r\n    ({ user, friends, chatting: { newMessages } }) => ({\r\n      user: user.user,\r\n      messages: friends.messagesList,\r\n      newMessages,\r\n    }),\r\n  );\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [noticeList, setNoticeList] = useState(false);\r\n  const toggleNoticeList = useCallback(() => {\r\n    setNoticeList(!noticeList);\r\n  }, [noticeList]);\r\n  const onLogout = () => {\r\n    dispatch(logout({ uid: user.uid }));\r\n    dispatch(removeAuth());\r\n    if (localStorage.user) {\r\n      localStorage.removeItem('user');\r\n    }\r\n    if (localStorage.chatHall) {\r\n      dispatch(leaveChatHall({ username: user.username }));\r\n      dispatch(initializeChatHall());\r\n      localStorage.removeItem('chatHall');\r\n    }\r\n    navigate('/');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      const { uid } = user;\r\n      dispatch(requestMessagesList({ uid }));\r\n      socket.on('friend_request', (data) => {\r\n        const { info } = data;\r\n        info.time = data.time;\r\n        info.type = 'received';\r\n        dispatch(receiveMessage(info));\r\n      });\r\n      socket.on('friend_request_accepted', (data) => {\r\n        dispatch(friendRequestAccepted(data));\r\n        dispatch(getRecommend({ filter: user.tags, uid: user.uid }));\r\n      });\r\n      socket.on('friend_request_refused', (data) => {\r\n        dispatch(friendRequestRefused(Number(data)));\r\n      });\r\n      socket.on('friend_request_canceled', (data) => {\r\n        dispatch(friendRequestRefused(Number(data)));\r\n      });\r\n      socket.on('someone_logout', (uid) => {\r\n        dispatch(someoneLogout(uid));\r\n      });\r\n      socket.on('someone_login', (uid) => {\r\n        dispatch(someoneLogin(uid));\r\n      });\r\n      socket.on('someone_send_message', ({ sender, message, chatList }) => {\r\n        dispatch(receiveChatting({ sender, message, chatList }));\r\n      });\r\n    }\r\n    return () => {\r\n      socket.off();\r\n    };\r\n  }, [dispatch, user]);\r\n  useEffect(() => {\r\n    if (!localStorage.getItem('user')) {\r\n      navigate('/');\r\n    }\r\n  }, [navigate]);\r\n  return (\r\n    <>\r\n      <Header\r\n        noticeList={noticeList}\r\n        toggleNoticeList={toggleNoticeList}\r\n        user={user}\r\n        onLogout={onLogout}\r\n        messages={messages}\r\n      />\r\n      {user ? <Navigation newMessages={newMessages} /> : ''}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeaderContainer;\r\n"]},"metadata":{},"sourceType":"module"}