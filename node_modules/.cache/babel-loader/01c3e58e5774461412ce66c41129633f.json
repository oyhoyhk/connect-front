{"ast":null,"code":"var _jsxFileName = \"C:\\\\nani\\\\connect\\\\connect-frontend\\\\src\\\\containers\\\\common\\\\ChatHallContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport ChatHall from '../../components/common/ChatHall';\nimport { useDispatch, useSelector } from 'react-redux';\nimport io from 'socket.io-client';\nimport { socket } from '../../lib/sockets/chatHallSocket';\nimport { setChatHall, getGuestNumber, sendMessage, receiveMessage } from '../../modules/chatHall';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatHallContainer = () => {\n  _s();\n\n  const [msg, setMsg] = useState('');\n  const dispatch = useDispatch();\n  const {\n    user,\n    userList,\n    msgList\n  } = useSelector(_ref => {\n    let {\n      chatHall,\n      user\n    } = _ref;\n    return {\n      user: user.user !== null ? user.user : chatHall.user,\n      userList: chatHall.userList,\n      msgList: chatHall.msgList\n    };\n  });\n  useEffect(() => {\n    if (!user) {\n      dispatch(getGuestNumber());\n    }\n  }, [dispatch, user]);\n  useEffect(() => {\n    console.log(user); // socket.emit('enter', {\n    //   username: user.username,\n    //   nickname: user.nickname,\n    //   profileImage: user.profileImage,\n    // });\n\n    socket.on('broadcastMsg', data => {\n      console.log('receive data : ', data);\n      dispatch(receiveMessage({\n        received: true,\n        ...data\n      }));\n    });\n    socket.on('somebodyEnter', data => {\n      console.log(data);\n    });\n    return () => {};\n  }, [dispatch, user]);\n\n  const onChange = e => {\n    setMsg(e.target.value);\n  };\n\n  const changeScroll = useCallback(e => {\n    e.scrollTop = e.scrollHeight;\n  }, []);\n\n  const onSubmit = () => {\n    if (msg === '') return;\n    socket.emit('msg', {\n      nickname: user.nickname,\n      msg: msg.trim()\n    });\n    dispatch(sendMessage({\n      send: true,\n      nickname: user.nickname,\n      msg: msg.trim()\n    }));\n    setMsg('');\n  };\n\n  const onKeySubmit = e => {\n    if (e.key === 'Enter') {\n      onSubmit();\n      setMsg('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChatHall, {\n    changeScroll: changeScroll,\n    msg: msg,\n    onChange: onChange,\n    onSubmit: onSubmit,\n    onKeySubmit: onKeySubmit,\n    msgList: msgList,\n    userList: userList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatHallContainer, \"UloBWCQUhulIjrqm/PELpEPgsM8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ChatHallContainer;\nexport default ChatHallContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatHallContainer\");","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/containers/common/ChatHallContainer.js"],"names":["React","useCallback","useEffect","useState","ChatHall","useDispatch","useSelector","io","socket","setChatHall","getGuestNumber","sendMessage","receiveMessage","ChatHallContainer","msg","setMsg","dispatch","user","userList","msgList","chatHall","console","log","on","data","received","onChange","e","target","value","changeScroll","scrollTop","scrollHeight","onSubmit","emit","nickname","trim","send","onKeySubmit","key"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport ChatHall from '../../components/common/ChatHall';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport io from 'socket.io-client';\r\nimport { socket } from '../../lib/sockets/chatHallSocket';\r\nimport {\r\n  setChatHall,\r\n  getGuestNumber,\r\n  sendMessage,\r\n  receiveMessage,\r\n} from '../../modules/chatHall';\r\n\r\nconst ChatHallContainer = () => {\r\n  const [msg, setMsg] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const { user, userList, msgList } = useSelector(({ chatHall, user }) => ({\r\n    user: user.user !== null ? user.user : chatHall.user,\r\n    userList: chatHall.userList,\r\n    msgList: chatHall.msgList,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      dispatch(getGuestNumber());\r\n    }\r\n  }, [dispatch, user]);\r\n\r\n  useEffect(() => {\r\n    console.log(user);\r\n    // socket.emit('enter', {\r\n    //   username: user.username,\r\n    //   nickname: user.nickname,\r\n    //   profileImage: user.profileImage,\r\n    // });\r\n    socket.on('broadcastMsg', (data) => {\r\n      console.log('receive data : ', data);\r\n      dispatch(receiveMessage({ received: true, ...data }));\r\n    });\r\n    socket.on('somebodyEnter', (data) => {\r\n      console.log(data);\r\n    });\r\n    return () => {};\r\n  }, [dispatch, user]);\r\n\r\n  const onChange = (e) => {\r\n    setMsg(e.target.value);\r\n  };\r\n\r\n  const changeScroll = useCallback((e) => {\r\n    e.scrollTop = e.scrollHeight;\r\n  }, []);\r\n\r\n  const onSubmit = () => {\r\n    if (msg === '') return;\r\n    socket.emit('msg', { nickname: user.nickname, msg: msg.trim() });\r\n    dispatch(\r\n      sendMessage({ send: true, nickname: user.nickname, msg: msg.trim() }),\r\n    );\r\n    setMsg('');\r\n  };\r\n\r\n  const onKeySubmit = (e) => {\r\n    if (e.key === 'Enter') {\r\n      onSubmit();\r\n      setMsg('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ChatHall\r\n      changeScroll={changeScroll}\r\n      msg={msg}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      onKeySubmit={onKeySubmit}\r\n      msgList={msgList}\r\n      userList={userList}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ChatHallContainer;\r\n"]},"metadata":{},"sourceType":"module"}