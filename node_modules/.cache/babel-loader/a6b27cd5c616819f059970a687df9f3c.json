{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport * as authAPI from '../lib/api/auth';\nimport { takeLatest } from 'redux-saga/effects';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\nconst [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] = createRequestActionTypes('auth/REGISTER');\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequestActionTypes('auth/LOGIN');\nexport const changeField = createAction(CHANGE_FIELD, _ref => {\n  let {\n    form,\n    key,\n    value\n  } = _ref;\n  return {\n    form,\n    key,\n    value\n  };\n});\nconsole.log('changeField', changeField({\n  form: 'form',\n  key: 'key',\n  value: 'value'\n}));\nexport const initializeForm = createAction(INITIALIZE_FORM, form => form);\nexport const register = createAction(REGISTER, _ref2 => {\n  let {\n    username,\n    password\n  } = _ref2;\n  return {\n    username,\n    password\n  };\n});\nexport const login = createAction(LOGIN, _ref3 => {\n  let {\n    username,\n    password\n  } = _ref3;\n  return {\n    username,\n    password\n  };\n});\nconst registerSaga = createRequestSaga(REGISTER, authAPI.register);\nconst loginSaga = createRequestSaga(LOGIN, authAPI.login);\nexport function* authSaga() {\n  yield takeLatest(REGISTER, registerSaga);\n  yield takeLatest(LOGIN, loginSaga);\n}\nconst initialState = {\n  register: {\n    username: '',\n    password: '',\n    passwordConfirm: ''\n  },\n  login: {\n    username: '',\n    password: ''\n  },\n  auth: null,\n  authError: null\n};\nconst auth = handleActions({\n  [CHANGE_FIELD]: (state, action) => {\n    console.log(state);\n    console.log('in handleACtions action : ', action);\n    return { ...state,\n      [action.payload.form]: { ...action.payload.form,\n        [action.payload.key]: action.payload.value\n      }\n    };\n  },\n  [INITIALIZE_FORM]: (state, payload) => {\n    const {\n      payload: form\n    } = payload;\n    console.log(state, payload);\n    return { ...state,\n      [form]: initialState[form]\n    };\n  }\n}, initialState);\nexport default auth;","map":{"version":3,"sources":["C:/nani/connect/connect-frontend/src/modules/auth.js"],"names":["createAction","handleActions","authAPI","takeLatest","createRequestSaga","createRequestActionTypes","CHANGE_FIELD","INITIALIZE_FORM","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","changeField","form","key","value","console","log","initializeForm","register","username","password","login","registerSaga","loginSaga","authSaga","initialState","passwordConfirm","auth","authError","state","action","payload"],"mappings":"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","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\r\nimport * as authAPI from '../lib/api/auth';\r\nimport { takeLatest } from 'redux-saga/effects';\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from '../lib/createRequestSaga';\r\n\r\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\r\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\r\nconst [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] =\r\n  createRequestActionTypes('auth/REGISTER');\r\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] =\r\n  createRequestActionTypes('auth/LOGIN');\r\nexport const changeField = createAction(\r\n  CHANGE_FIELD,\r\n  ({ form, key, value }) => ({\r\n    form,\r\n    key,\r\n    value,\r\n  }),\r\n);\r\nconsole.log(\r\n  'changeField',\r\n  changeField({\r\n    form: 'form',\r\n    key: 'key',\r\n    value: 'value',\r\n  }),\r\n);\r\nexport const initializeForm = createAction(INITIALIZE_FORM, (form) => form);\r\nexport const register = createAction(REGISTER, ({ username, password }) => ({\r\n  username,\r\n  password,\r\n}));\r\nexport const login = createAction(LOGIN, ({ username, password }) => ({\r\n  username,\r\n  password,\r\n}));\r\n\r\nconst registerSaga = createRequestSaga(REGISTER, authAPI.register);\r\nconst loginSaga = createRequestSaga(LOGIN, authAPI.login);\r\n\r\nexport function* authSaga() {\r\n  yield takeLatest(REGISTER, registerSaga);\r\n  yield takeLatest(LOGIN, loginSaga);\r\n}\r\n\r\nconst initialState = {\r\n  register: {\r\n    username: '',\r\n    password: '',\r\n    passwordConfirm: '',\r\n  },\r\n  login: {\r\n    username: '',\r\n    password: '',\r\n  },\r\n  auth: null,\r\n  authError: null,\r\n};\r\n\r\nconst auth = handleActions(\r\n  {\r\n    [CHANGE_FIELD]: (state, action) => {\r\n      console.log(state);\r\n      console.log('in handleACtions action : ', action);\r\n      return {\r\n        ...state,\r\n        [action.payload.form]: {\r\n          ...action.payload.form,\r\n          [action.payload.key]: action.payload.value,\r\n        },\r\n      };\r\n    },\r\n    [INITIALIZE_FORM]: (state, payload) => {\r\n      const { payload: form } = payload;\r\n      console.log(state, payload);\r\n      return {\r\n        ...state,\r\n        [form]: initialState[form],\r\n      };\r\n    },\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default auth;\r\n"]},"metadata":{},"sourceType":"module"}